{{ if eq (len .Children) 0 }}

    client, auth, err := kaytuSDK.GetKaytuAuthClient(cmd)
    if err != nil {
        if errors.Is(err, pkg.ExpiredSession) {
            fmt.Println(err.Error())
            return nil
        }
        panic(err)
    }

    {{ range .Command.API.ParamTypes }}

        req := {{ $.Command.API.Client }}.New{{ .Name }}()

        {{ range .SubParams }}

            {{ if eq .TypeFlagFunc "ReadStructFlag" }}
                var config {{ .TypeWithPackage }}
                flags.ReadStructFlag(cmd, "{{ .Name }}", &config)
                req.Set{{ .Name }}(config)
            {{ else }}
                req.Set{{ .Name }}(flags.{{ .TypeFlagFunc }}(cmd, "{{ .Name }}"))
            {{ end }}


        {{ end }}

    {{ end }}

    resp, err := client.{{ .Command.API.ClientVarName }}.{{ .Command.API.MethodName }}(req, auth)
    if err != nil {
        return fmt.Errorf("[{{ .Command.API.MethodName }}] : %v", err)
    }

    {{ if .Command.API.ResponseHasPayload }}
        err = pkg.PrintOutput(cmd, "{{ .Command.API.MethodName }}", resp.GetPayload())
        if err != nil {
            return fmt.Errorf("[{{ .Command.API.MethodName }}] : %v", err)
        }
    {{ else }}
        _ = resp
    {{ end }}
	return nil

{{ else }}

    if cmd.Flags().ParseErrorsWhitelist.UnknownFlags {
        return errors.New("invalid flags")
    }
    return cmd.Help()

{{ end }}