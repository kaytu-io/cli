// ========== DO NOT EDIT THIS FILE! AUTO GENERATED!!! =========
package list

import (
	"errors"
	"fmt"

	"github.com/kaytu-io/cli-program/cmd/flags"
	"github.com/kaytu-io/cli-program/pkg"
	kaytuSDK "github.com/kaytu-io/cli-program/pkg/api/kaytu"
	"github.com/kaytu-io/cli-program/pkg/api/kaytu/client/insights"
	"github.com/spf13/cobra"
)

var InsightsCmd = &cobra.Command{
	Use: "insights",
	RunE: func(cmd *cobra.Command, args []string) error {

		client, auth, err := kaytuSDK.GetKaytuAuthClient(cmd)
		if err != nil {
			if errors.Is(err, pkg.ExpiredSession) {
				fmt.Println(err.Error())
				return nil
			}
			panic(err)
		}

		req := insights.NewGetComplianceAPIV1InsightParams()

		req.SetConnectionGroup(flags.ReadStringArrayFlag(cmd, "ConnectionGroup"))

		req.SetConnectionID(flags.ReadStringArrayFlag(cmd, "ConnectionID"))

		req.SetConnector(flags.ReadStringArrayFlag(cmd, "Connector"))

		req.SetEndTime(flags.ReadInt64OptionalFlag(cmd, "EndTime"))

		req.SetResourceCollection(flags.ReadStringArrayFlag(cmd, "ResourceCollection"))

		req.SetStartTime(flags.ReadInt64OptionalFlag(cmd, "StartTime"))

		req.SetTag(flags.ReadStringArrayFlag(cmd, "Tag"))

		resp, err := client.Insights.GetComplianceAPIV1Insight(req, auth)
		if err != nil {
			return fmt.Errorf("[GetComplianceAPIV1Insight] : %v", err)
		}

		err = pkg.PrintOutput(cmd, "GetComplianceAPIV1Insight", resp.GetPayload())
		if err != nil {
			return fmt.Errorf("[GetComplianceAPIV1Insight] : %v", err)
		}

		return nil

	},
}

func init() {

	InsightsCmd.Flags().StringArray("connection-group", nil, "filter the result by connection group")

	InsightsCmd.Flags().StringArray("connection-id", nil, "filter the result by source id")

	InsightsCmd.Flags().StringArray("connector", nil, "filter insights by connector")

	InsightsCmd.Flags().Int64("end-time", 0, "unix seconds for the end time of the trend")

	InsightsCmd.Flags().StringArray("resource-collection", nil, "Resource collection IDs to filter by")

	InsightsCmd.Flags().Int64("start-time", 0, "unix seconds for the start time of the trend")

	InsightsCmd.Flags().StringArray("tag", nil, "Key-Value tags in key=value format to filter by")

}
