// ========== DO NOT EDIT THIS FILE! AUTO GENERATED!!! =========
package list

import (
	"errors"
	"fmt"

	"github.com/kaytu-io/cli-program/cmd/flags"
	"github.com/kaytu-io/cli-program/pkg"
	kaytuSDK "github.com/kaytu-io/cli-program/pkg/api/kaytu"
	"github.com/kaytu-io/cli-program/pkg/api/kaytu/client/onboard"
	"github.com/spf13/cobra"
)

var CredentialsCmd = &cobra.Command{
	Use: "credentials",
	RunE: func(cmd *cobra.Command, args []string) error {

		client, auth, err := kaytuSDK.GetKaytuAuthClient(cmd)
		if err != nil {
			if errors.Is(err, pkg.ExpiredSession) {
				fmt.Println(err.Error())
				return nil
			}
			panic(err)
		}

		req := onboard.NewGetOnboardAPIV1CredentialParams()

		req.SetConnector(flags.ReadStringOptionalFlag(cmd, "Connector"))

		req.SetCredentialType(flags.ReadStringArrayFlag(cmd, "CredentialType"))

		req.SetHealth(flags.ReadStringOptionalFlag(cmd, "Health"))

		req.SetPageNumber(flags.ReadInt64OptionalFlag(cmd, "PageNumber"))

		req.SetPageSize(flags.ReadInt64OptionalFlag(cmd, "PageSize"))

		resp, err := client.Onboard.GetOnboardAPIV1Credential(req, auth)
		if err != nil {
			return fmt.Errorf("[GetOnboardAPIV1Credential] : %v", err)
		}

		err = pkg.PrintOutput(cmd, "GetOnboardAPIV1Credential", resp.GetPayload())
		if err != nil {
			return fmt.Errorf("[GetOnboardAPIV1Credential] : %v", err)
		}

		return nil

	},
}

func init() {

	CredentialsCmd.Flags().String("connector", "", "filter by connector type")

	CredentialsCmd.Flags().StringArray("credential-type", nil, "filter by credential type")

	CredentialsCmd.Flags().String("health", "", "filter by health status")

	CredentialsCmd.Flags().Int64("page-number", 0, "page number\n\n	   Default: 1")

	CredentialsCmd.Flags().Int64("page-size", 0, "page size\n\n	   Default: 50")

}
