// ========== DO NOT EDIT THIS FILE! AUTO GENERATED!!! =========
package asset

import (
	"errors"
	"fmt"

	"github.com/kaytu-io/cli-program/cmd/flags"
	"github.com/kaytu-io/cli-program/pkg"
	kaytuSDK "github.com/kaytu-io/cli-program/pkg/api/kaytu"
	"github.com/kaytu-io/cli-program/pkg/api/kaytu/client/analytics"
	"github.com/spf13/cobra"
)

var CategoriesCmd = &cobra.Command{
	Use: "categories",
	RunE: func(cmd *cobra.Command, args []string) error {

		client, auth, err := kaytuSDK.GetKaytuAuthClient(cmd)
		if err != nil {
			if errors.Is(err, pkg.ExpiredSession) {
				fmt.Println(err.Error())
				return nil
			}
			panic(err)
		}

		req := analytics.NewGetInventoryAPIV2AnalyticsCategoriesParams()

		req.SetMetricType(flags.ReadStringOptionalFlag(cmd, "MetricType"))

		req.SetMinCount(flags.ReadInt64OptionalFlag(cmd, "MinCount"))

		resp, err := client.Analytics.GetInventoryAPIV2AnalyticsCategories(req, auth)
		if err != nil {
			return fmt.Errorf("[GetInventoryAPIV2AnalyticsCategories] : %v", err)
		}

		err = pkg.PrintOutput(cmd, "GetInventoryAPIV2AnalyticsCategories", resp.GetPayload())
		if err != nil {
			return fmt.Errorf("[GetInventoryAPIV2AnalyticsCategories] : %v", err)
		}

		return nil

	},
}

func init() {

	CategoriesCmd.Flags().String("metric-type", "", "Metric type, default: assets")

	CategoriesCmd.Flags().Int64("min-count", 0, "For assets minimum number of resources returned resourcetype must have, default 1")

}
