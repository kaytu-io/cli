// ========== DO NOT EDIT THIS FILE! AUTO GENERATED!!! =========
package gen

import (
	"errors"
	"fmt"

	"github.com/kaytu-io/cli-program/cmd/flags"
	"github.com/kaytu-io/cli-program/pkg"
	"github.com/kaytu-io/cli-program/pkg/api/kaytu"
	"github.com/kaytu-io/cli-program/pkg/api/kaytu/client/connection_groups"
	"github.com/spf13/cobra"
)

var GetOnboardApiV1ConnectionGroupsConnectionGroupNameCmd = &cobra.Command{
	Use:   "get-connection-group",
	Short: `Returns a connection group`,
	Long:  `Returns a connection group`,
	RunE: func(cmd *cobra.Command, args []string) error {
		client, auth, err := kaytu.GetKaytuAuthClient(cmd)
		if err != nil {
			if errors.Is(err, pkg.ExpiredSession) {
				fmt.Println(err.Error())
				return nil
			}
			return fmt.Errorf("[get_onboard_api_v_1_connection_groups_connection_group_name] : %v", err)
		}

		req := connection_groups.NewGetOnboardAPIV1ConnectionGroupsConnectionGroupNameParams()

		req.SetConnectionGroupName(flags.ReadStringFlag(cmd, "ConnectionGroupName"))
		req.SetPopulateConnections(flags.ReadBooleanOptionalFlag(cmd, "PopulateConnections"))

		resp, err := client.ConnectionGroups.GetOnboardAPIV1ConnectionGroupsConnectionGroupName(req, auth)
		if err != nil {
			return fmt.Errorf("[get_onboard_api_v_1_connection_groups_connection_group_name] : %v", err)
		}

		err = pkg.PrintOutput(cmd, "get-onboard-api-v1-connection-groups-connection-group-name", resp.GetPayload())
		if err != nil {
			return fmt.Errorf("[get_onboard_api_v_1_connection_groups_connection_group_name] : %v", err)
		}

		return nil
	},
}

var GetOnboardApiV1ConnectionGroupsCmd = &cobra.Command{
	Use:   "list-connection-groups",
	Short: `Returns a list of connection groups`,
	Long:  `Returns a list of connection groups`,
	RunE: func(cmd *cobra.Command, args []string) error {
		client, auth, err := kaytu.GetKaytuAuthClient(cmd)
		if err != nil {
			if errors.Is(err, pkg.ExpiredSession) {
				fmt.Println(err.Error())
				return nil
			}
			return fmt.Errorf("[get_onboard_api_v_1_connection_groups] : %v", err)
		}

		req := connection_groups.NewGetOnboardAPIV1ConnectionGroupsParams()

		req.SetPopulateConnections(flags.ReadBooleanOptionalFlag(cmd, "PopulateConnections"))

		resp, err := client.ConnectionGroups.GetOnboardAPIV1ConnectionGroups(req, auth)
		if err != nil {
			return fmt.Errorf("[get_onboard_api_v_1_connection_groups] : %v", err)
		}

		err = pkg.PrintOutput(cmd, "get-onboard-api-v1-connection-groups", resp.GetPayload())
		if err != nil {
			return fmt.Errorf("[get_onboard_api_v_1_connection_groups] : %v", err)
		}

		return nil
	},
}
