// ========== DO NOT EDIT THIS FILE! AUTO GENERATED!!! =========
package gen

import (
	"github.com/spf13/cobra"
)

var StackCmd = &cobra.Command{
	Use: "stack",
	RunE: func(cmd *cobra.Command, args []string) error {
		return cmd.Help()
	},
}

func init() {

	StackCmd.AddCommand(PostScheduleApiV1StacksCreateCmd)

	PostScheduleApiV1StacksCreateCmd.Flags().String("config", "", "Config json structure")
	PostScheduleApiV1StacksCreateCmd.MarkFlagRequired("config")
	PostScheduleApiV1StacksCreateCmd.Flags().String("remote-state-config", "", "Config json structure for terraform remote state backend")
	PostScheduleApiV1StacksCreateCmd.Flags().String("state-file", "", "ŸèTerraform StateFile full path")
	PostScheduleApiV1StacksCreateCmd.Flags().String("tag", "", "Tags Map[string][]string")

	StackCmd.AddCommand(DeleteScheduleApiV1StacksStackIdCmd)

	DeleteScheduleApiV1StacksStackIdCmd.Flags().String("stack-id", "", "StackID")
	DeleteScheduleApiV1StacksStackIdCmd.MarkFlagRequired("stack-id")

	StackCmd.AddCommand(GetScheduleApiV1StacksStackIdCmd)

	GetScheduleApiV1StacksStackIdCmd.Flags().String("stack-id", "", "StackID")
	GetScheduleApiV1StacksStackIdCmd.MarkFlagRequired("stack-id")

	StackCmd.AddCommand(GetScheduleApiV1StacksStackIdInsightCmd)

	GetScheduleApiV1StacksStackIdInsightCmd.Flags().String("end-time", "", "unix seconds for the end time of the trend")
	GetScheduleApiV1StacksStackIdInsightCmd.Flags().Int64("insight-id", 0, "InsightID")
	GetScheduleApiV1StacksStackIdInsightCmd.MarkFlagRequired("insight-id")
	GetScheduleApiV1StacksStackIdInsightCmd.Flags().String("stack-id", "", "StackID")
	GetScheduleApiV1StacksStackIdInsightCmd.MarkFlagRequired("stack-id")
	GetScheduleApiV1StacksStackIdInsightCmd.Flags().String("start-time", "", "unix seconds for the start time of the trend")

	StackCmd.AddCommand(PostScheduleApiV1StacksStackIdFindingsCmd)

	PostScheduleApiV1StacksStackIdFindingsCmd.Flags().StringArray("benchmark-ids", nil, "")

	PostScheduleApiV1StacksStackIdFindingsCmd.Flags().String("stack-id", "", "StackId")
	PostScheduleApiV1StacksStackIdFindingsCmd.MarkFlagRequired("stack-id")

	StackCmd.AddCommand(GetScheduleApiV1StacksStackIdInsightsCmd)

	GetScheduleApiV1StacksStackIdInsightsCmd.Flags().String("end-time", "", "unix seconds for the end time of the trend")
	GetScheduleApiV1StacksStackIdInsightsCmd.Flags().Int64Slice("insight-ids", nil, "")
	GetScheduleApiV1StacksStackIdInsightsCmd.Flags().String("stack-id", "", "Stack ID")
	GetScheduleApiV1StacksStackIdInsightsCmd.MarkFlagRequired("stack-id")
	GetScheduleApiV1StacksStackIdInsightsCmd.Flags().String("start-time", "", "unix seconds for the start time of the trend")

	StackCmd.AddCommand(GetScheduleApiV1StacksCmd)

	GetScheduleApiV1StacksCmd.Flags().StringArray("account-ids", nil, "")
	GetScheduleApiV1StacksCmd.Flags().StringArray("tag", nil, "Key-Value tags in key=value format to filter by")

	StackCmd.AddCommand(GetScheduleApiV1StacksResourceCmd)

	GetScheduleApiV1StacksResourceCmd.Flags().String("resource-id", "", "Resource ID")
	GetScheduleApiV1StacksResourceCmd.MarkFlagRequired("resource-id")

}
