// ========== DO NOT EDIT THIS FILE! AUTO GENERATED!!! =========
package gen

import (
	"github.com/spf13/cobra"
)

var ResourceCmd = &cobra.Command{
	Use: "resource",
	RunE: func(cmd *cobra.Command, args []string) error {
		return cmd.Help()
	},
}

func init() {

	ResourceCmd.AddCommand(PostInventoryApiV1ResourceCmd)
	PostInventoryApiV1ResourceCmd.Flags().String("id", "", "Resource ID")
	PostInventoryApiV1ResourceCmd.MarkFlagRequired("id")
	PostInventoryApiV1ResourceCmd.Flags().String("resource-type", "", "Resource ID")
	PostInventoryApiV1ResourceCmd.MarkFlagRequired("resource-type")

	ResourceCmd.AddCommand(GetInventoryApiV2ResourcesRegionsCompositionCmd)
	GetInventoryApiV2ResourcesRegionsCompositionCmd.Flags().StringArray("connection-id", nil, "Connection IDs to filter by")
	GetInventoryApiV2ResourcesRegionsCompositionCmd.Flags().StringArray("connector", nil, "Connector type to filter by")
	GetInventoryApiV2ResourcesRegionsCompositionCmd.Flags().Int64("end-time", 0, "end time in unix seconds - default is one week ago")
	GetInventoryApiV2ResourcesRegionsCompositionCmd.Flags().Int64("start-time", 0, "start time in unix seconds - default is now")
	GetInventoryApiV2ResourcesRegionsCompositionCmd.Flags().Int64("top", 0, "How many top values to return default is 5")
	GetInventoryApiV2ResourcesRegionsCompositionCmd.MarkFlagRequired("top")

	ResourceCmd.AddCommand(GetInventoryApiV2ResourcesCountCmd)

	ResourceCmd.AddCommand(GetInventoryApiV2ResourcesRegionsSummaryCmd)
	GetInventoryApiV2ResourcesRegionsSummaryCmd.Flags().StringArray("connection-id", nil, "Connection IDs to filter by")
	GetInventoryApiV2ResourcesRegionsSummaryCmd.Flags().StringArray("connector", nil, "Connector type to filter by")
	GetInventoryApiV2ResourcesRegionsSummaryCmd.Flags().Int64("end-time", 0, "end time in unix seconds - default is one week ago")
	GetInventoryApiV2ResourcesRegionsSummaryCmd.Flags().Int64("page-number", 0, "page number - default is 1")
	GetInventoryApiV2ResourcesRegionsSummaryCmd.Flags().Int64("page-size", 0, "page size - default is 20")
	GetInventoryApiV2ResourcesRegionsSummaryCmd.Flags().String("sort-by", "", "column to sort by - default is resource_count")
	GetInventoryApiV2ResourcesRegionsSummaryCmd.Flags().Int64("start-time", 0, "start time in unix seconds - default is now")

	ResourceCmd.AddCommand(GetInventoryApiV2ResourcesRegionsTrendCmd)
	GetInventoryApiV2ResourcesRegionsTrendCmd.Flags().StringArray("connection-id", nil, "Connection IDs to filter by")
	GetInventoryApiV2ResourcesRegionsTrendCmd.Flags().StringArray("connector", nil, "Connector type to filter by")
	GetInventoryApiV2ResourcesRegionsTrendCmd.Flags().Int64("datapoint-count", 0, "Number of datapoints to return")
	GetInventoryApiV2ResourcesRegionsTrendCmd.Flags().Int64("end-time", 0, "end time in unix seconds - default is one week ago")
	GetInventoryApiV2ResourcesRegionsTrendCmd.Flags().StringArray("region", nil, "Regions to filter by")
	GetInventoryApiV2ResourcesRegionsTrendCmd.Flags().Int64("start-time", 0, "start time in unix seconds - default is now")

	ResourceCmd.AddCommand(PostInventoryApiV1ResourcesCmd)
	PostInventoryApiV1ResourcesCmd.Flags().StringArray("filters-connection-id", nil, "")
	PostInventoryApiV1ResourcesCmd.MarkFlagRequired("filters-connection-id")
	PostInventoryApiV1ResourcesCmd.Flags().String("filters-connectors", "", "")
	PostInventoryApiV1ResourcesCmd.MarkFlagRequired("filters-connectors")
	PostInventoryApiV1ResourcesCmd.Flags().StringArray("filters-location", nil, "")
	PostInventoryApiV1ResourcesCmd.MarkFlagRequired("filters-location")
	PostInventoryApiV1ResourcesCmd.Flags().StringArray("filters-resource-type", nil, "")
	PostInventoryApiV1ResourcesCmd.MarkFlagRequired("filters-resource-type")
	PostInventoryApiV1ResourcesCmd.Flags().StringArray("filters-service", nil, "")
	PostInventoryApiV1ResourcesCmd.MarkFlagRequired("filters-service")

	PostInventoryApiV1ResourcesCmd.Flags().Int64("page-no", 0, "")
	PostInventoryApiV1ResourcesCmd.MarkFlagRequired("page-no")
	PostInventoryApiV1ResourcesCmd.Flags().Int64("page-size", 0, "")
	PostInventoryApiV1ResourcesCmd.MarkFlagRequired("page-size")

	PostInventoryApiV1ResourcesCmd.Flags().String("query", "", "")
	PostInventoryApiV1ResourcesCmd.MarkFlagRequired("query")
	PostInventoryApiV1ResourcesCmd.Flags().String("sorts-direction", "", "")
	PostInventoryApiV1ResourcesCmd.MarkFlagRequired("sorts-direction")
	PostInventoryApiV1ResourcesCmd.Flags().String("sorts-field", "", "")
	PostInventoryApiV1ResourcesCmd.MarkFlagRequired("sorts-field")

	ResourceCmd.AddCommand(PostInventoryApiV1ResourcesFiltersCmd)
	PostInventoryApiV1ResourcesFiltersCmd.Flags().String("common", "", "Common filter")
	PostInventoryApiV1ResourcesFiltersCmd.Flags().StringArray("filters-category", nil, "")
	PostInventoryApiV1ResourcesFiltersCmd.MarkFlagRequired("filters-category")
	PostInventoryApiV1ResourcesFiltersCmd.Flags().StringArray("filters-connections", nil, "")
	PostInventoryApiV1ResourcesFiltersCmd.MarkFlagRequired("filters-connections")
	PostInventoryApiV1ResourcesFiltersCmd.Flags().StringArray("filters-location", nil, "")
	PostInventoryApiV1ResourcesFiltersCmd.MarkFlagRequired("filters-location")
	PostInventoryApiV1ResourcesFiltersCmd.Flags().StringArray("filters-provider", nil, "")
	PostInventoryApiV1ResourcesFiltersCmd.MarkFlagRequired("filters-provider")
	PostInventoryApiV1ResourcesFiltersCmd.Flags().StringArray("filters-resource-type", nil, "")
	PostInventoryApiV1ResourcesFiltersCmd.MarkFlagRequired("filters-resource-type")
	PostInventoryApiV1ResourcesFiltersCmd.Flags().StringArray("filters-service", nil, "")
	PostInventoryApiV1ResourcesFiltersCmd.MarkFlagRequired("filters-service")
	PostInventoryApiV1ResourcesFiltersCmd.Flags().StringArray("filters-tag-keys", nil, "")
	PostInventoryApiV1ResourcesFiltersCmd.MarkFlagRequired("filters-tag-keys")
	PostInventoryApiV1ResourcesFiltersCmd.Flags().String("filters-tag-values", "", "")
	PostInventoryApiV1ResourcesFiltersCmd.MarkFlagRequired("filters-tag-values")

	PostInventoryApiV1ResourcesFiltersCmd.Flags().String("query", "", "")
	PostInventoryApiV1ResourcesFiltersCmd.MarkFlagRequired("query")

	ResourceCmd.AddCommand(GetInventoryApiV1ResourcesRegionsCmd)
	GetInventoryApiV1ResourcesRegionsCmd.Flags().StringArray("connection-id", nil, "Connection IDs to filter by")
	GetInventoryApiV1ResourcesRegionsCmd.Flags().StringArray("connector", nil, "Connector type to filter by")
	GetInventoryApiV1ResourcesRegionsCmd.Flags().String("end-time", "", "timestamp for resource count per location in epoch seconds")
	GetInventoryApiV1ResourcesRegionsCmd.Flags().Int64("page-number", 0, "page number - default is 1")
	GetInventoryApiV1ResourcesRegionsCmd.Flags().Int64("page-size", 0, "page size - default is 20")
	GetInventoryApiV1ResourcesRegionsCmd.Flags().String("start-time", "", "timestamp for resource count per location change comparison in epoch seconds")

	ResourceCmd.AddCommand(GetInventoryApiV1ResourcesTopRegionsCmd)
	GetInventoryApiV1ResourcesTopRegionsCmd.Flags().StringArray("connection-id", nil, "Connection IDs to filter by")
	GetInventoryApiV1ResourcesTopRegionsCmd.Flags().StringArray("connector", nil, "Connector type to filter by")
	GetInventoryApiV1ResourcesTopRegionsCmd.Flags().Int64("count", 0, "count")
	GetInventoryApiV1ResourcesTopRegionsCmd.MarkFlagRequired("count")

}
