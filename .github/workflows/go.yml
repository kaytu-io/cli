name: Build
on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    environment: golang
    permissions: write-all
    steps:
    - name: Checkout
      uses: actions/checkout@v3.5.2
      with:
        fetch-depth: 0
        persist-credentials: false

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.20.4

    - name: Build
      env:
        CI_ACCESS_TOKEN: ${{ secrets.CI_ACCESS_TOKEN }}
        GITHUBCI_TOKEN: ${{ secrets.GITHUBCI_TOKEN }}
      run: |
        echo -e "machine gitlab.com login gitlab-ci-token password ${{ secrets.CI_ACCESS_TOKEN }}" > ~/.netrc
        echo -e "machine github.com login api password ${{ secrets.GITHUBCI_TOKEN }}" >> ~/.netrc
        
        GOPRIVATE=github.com/kaytu-io,gitlab.com/keibiengine CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o ./build/ktucli-linux-amd64 ./main.go
        GOPRIVATE=github.com/kaytu-io,gitlab.com/keibiengine CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -o ./build/ktucli-linux-arm64 ./main.go
        GOPRIVATE=github.com/kaytu-io,gitlab.com/keibiengine CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o ./build/ktucli-windows-amd64 ./main.go
        GOPRIVATE=github.com/kaytu-io,gitlab.com/keibiengine CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -o ./build/ktucli-macos-amd64 ./main.go
        GOPRIVATE=github.com/kaytu-io,gitlab.com/keibiengine CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -o ./build/ktucli-macos-arm64 ./main.go
        
    - name: GitHub Tag
      id : tag_version
      uses: mathieudutour/github-tag-action@v6.1
      with:
        github_token: ${{ secrets.GITHUBCI_TOKEN }}

    - name: Get Latest Tag
      uses: WyriHaximus/github-action-get-previous-tag@v1
      id: previousTag

    - name: Create Release
      uses: ncipollo/release-action@v1.12.0
      with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          artifacts : "release.tar.gz,foo/*.txt,./build/ktucli-linux-amd64,./build/ktucli-linux-arm64,./build/ktucli-windows-amd64,./build/ktucli-macos-amd64,./build/ktucli-macos-arm64"
          draft: false
          prerelease: false

    - name: update cli version in snap
      run: |
        cd snap
        sed -i "s+$(echo "${{ steps.previousTag.outputs.tag }}" | sed 's/^.//')+$(echo "${{ steps.tag_version.outputs.new_tag }}" | sed 's/^.//')+g" snapcraft.yaml
        cd ..
        
    - name: Create snap
      id: snapcraft
      uses: snapcore/action-build@v1

    - uses: snapcore/action-publish@v1
      env:
        SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.STORE_LOGIN }}
      with:
        snap: ${{ steps.snapcraft.outputs.snap }}
        release: stable

    - name: Set git identity
      run: |
        git config user.name 'Kaytu Developer'
        git config user.email 'dev@kaytu.io'

    - name: update cli version in homebrew
      run: |
        git clone https://x-access-token:${{ secrets.GITHUBCI_TOKEN }}@github.com/kaytu-io/homebrew-cli-tap.git
        cd homebrew-cli-tap

        git remote add homebrew-cli-tap-origin https://x-access-token:${{ secrets.GITHUBCI_TOKEN }}@github.com/kaytu-io/homebrew-cli-tap.git
        git config user.name 'Kaytu Developer'
        git config user.email 'dev@kaytu.io'
        
        sed -i 's+${{ steps.previousTag.outputs.tag }}+${{ steps.tag_version.outputs.new_tag }}+g' kaytu.rb
        sed -i "s+$(echo "${{ steps.previousTag.outputs.tag }}" | sed 's/^.//')+$(echo "${{ steps.tag_version.outputs.new_tag }}" | sed 's/^.//')+g" kaytu.rb

        git checkout main
        git add .
        git commit -a -m "update cli version"
        git push homebrew-cli-tap-origin 
        
        cd ..
        rm -rf homebrew-cli-tap

    - name: update hashes in homebrew
      run: |
        git clone https://x-access-token:${{ secrets.GITHUBCI_TOKEN }}@github.com/kaytu-io/homebrew-cli-tap.git
        cd homebrew-cli-tap

        git remote add homebrew-cli-tap-origin https://x-access-token:${{ secrets.GITHUBCI_TOKEN }}@github.com/kaytu-io/homebrew-cli-tap.git
        git config user.name 'Kaytu Developer'
        git config user.email 'dev@kaytu.io'

        sed -n '8p' kaytu.rb | sed 's/\s   [^ ]* //' >> newUrl
        sed -i 's/^./''/' newUrl && sed -i 's/.$/''/' newUrl

        sha256sum newUrl >> newHash
        sed -i s/'\w*$'// newHash && sed -i 's/ *$//' newHash
        sed -i "9s/.*/$(printf '    sha256 "%s" \n' "$(cat newHash)") /" kaytu.rb

        rm -rf newHash && rm -rf newUrl

        sed -n '16p' kaytu.rb | sed 's/\s   [^ ]* //' >> newUrl
        sed -i 's/^./''/' newUrl && sed -i 's/.$/''/' newUrl

        sha256sum newUrl >> newHash
        sed -i s/'\w*$'// newHash && sed -i 's/ *$//' newHash
        sed -i "17s/.*/$(printf '    sha256 "%s" \n' "$(cat newHash)") /" kaytu.rb

        rm -rf newHash && rm -rf newUrl

        sed -n '24p' kaytu.rb | sed 's/\s   [^ ]* //' >> newUrl
        sed -i 's/^./''/' newUrl && sed -i 's/.$/''/' newUrl

        sha256sum newUrl >> newHash
        sed -i s/'\w*$'// newHash && sed -i 's/ *$//' newHash
        sed -i "25s/.*/$(printf '    sha256 "%s" \n' "$(cat newHash)") /" kaytu.rb

        rm -rf newHash && rm -rf newUrl

        sed -n '32p' kaytu.rb | sed 's/\s   [^ ]* //' >> newUrl
        sed -i 's/^./''/' newUrl && sed -i 's/.$/''/' newUrl

        sha256sum newUrl >> newHash
        sed -i s/'\w*$'// newHash && sed -i 's/ *$//' newHash
        sed -i "33s/.*/$(printf '    sha256 "%s"\n' "$(cat newHash)") /" kaytu.rb

        rm -rf newHash && rm -rf newUrl

        git checkout main
        git add .
        git commit -a -m "update hashes "
        git push homebrew-cli-tap-origin

        cd ..
        rm -rf homebrew-cli-tap