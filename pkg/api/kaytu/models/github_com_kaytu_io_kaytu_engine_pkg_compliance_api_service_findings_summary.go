// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GithubComKaytuIoKaytuEnginePkgComplianceAPIServiceFindingsSummary github com kaytu io kaytu engine pkg compliance api service findings summary
//
// swagger:model github_com_kaytu-io_kaytu-engine_pkg_compliance_api.ServiceFindingsSummary
type GithubComKaytuIoKaytuEnginePkgComplianceAPIServiceFindingsSummary struct {

	// security score
	SecurityScore float64 `json:"securityScore,omitempty"`

	// service label
	ServiceLabel string `json:"serviceLabel,omitempty"`

	// service name
	ServiceName string `json:"serviceName,omitempty"`

	// severities count
	SeveritiesCount *GithubComKaytuIoKaytuEnginePkgComplianceAPIServiceFindingsSummarySeveritiesCount `json:"severitiesCount,omitempty"`
}

// Validate validates this github com kaytu io kaytu engine pkg compliance api service findings summary
func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIServiceFindingsSummary) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSeveritiesCount(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIServiceFindingsSummary) validateSeveritiesCount(formats strfmt.Registry) error {
	if swag.IsZero(m.SeveritiesCount) { // not required
		return nil
	}

	if m.SeveritiesCount != nil {
		if err := m.SeveritiesCount.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("severitiesCount")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("severitiesCount")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this github com kaytu io kaytu engine pkg compliance api service findings summary based on the context it is used
func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIServiceFindingsSummary) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateSeveritiesCount(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIServiceFindingsSummary) contextValidateSeveritiesCount(ctx context.Context, formats strfmt.Registry) error {

	if m.SeveritiesCount != nil {

		if swag.IsZero(m.SeveritiesCount) { // not required
			return nil
		}

		if err := m.SeveritiesCount.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("severitiesCount")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("severitiesCount")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIServiceFindingsSummary) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIServiceFindingsSummary) UnmarshalBinary(b []byte) error {
	var res GithubComKaytuIoKaytuEnginePkgComplianceAPIServiceFindingsSummary
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// GithubComKaytuIoKaytuEnginePkgComplianceAPIServiceFindingsSummarySeveritiesCount github com kaytu io kaytu engine pkg compliance API service findings summary severities count
//
// swagger:model GithubComKaytuIoKaytuEnginePkgComplianceAPIServiceFindingsSummarySeveritiesCount
type GithubComKaytuIoKaytuEnginePkgComplianceAPIServiceFindingsSummarySeveritiesCount struct {

	// critical
	Critical int64 `json:"critical,omitempty"`

	// high
	High int64 `json:"high,omitempty"`

	// low
	Low int64 `json:"low,omitempty"`

	// medium
	Medium int64 `json:"medium,omitempty"`

	// none
	None int64 `json:"none,omitempty"`

	// passed
	Passed int64 `json:"passed,omitempty"`
}

// Validate validates this github com kaytu io kaytu engine pkg compliance API service findings summary severities count
func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIServiceFindingsSummarySeveritiesCount) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this github com kaytu io kaytu engine pkg compliance API service findings summary severities count based on context it is used
func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIServiceFindingsSummarySeveritiesCount) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIServiceFindingsSummarySeveritiesCount) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIServiceFindingsSummarySeveritiesCount) UnmarshalBinary(b []byte) error {
	var res GithubComKaytuIoKaytuEnginePkgComplianceAPIServiceFindingsSummarySeveritiesCount
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
