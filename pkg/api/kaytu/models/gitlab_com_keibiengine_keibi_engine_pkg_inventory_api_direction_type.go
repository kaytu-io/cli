// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// GitlabComKeibiengineKeibiEnginePkgInventoryAPIDirectionType gitlab com keibiengine keibi engine pkg inventory api direction type
//
// swagger:model gitlab_com_keibiengine_keibi-engine_pkg_inventory_api.DirectionType
type GitlabComKeibiengineKeibiEnginePkgInventoryAPIDirectionType string

func NewGitlabComKeibiengineKeibiEnginePkgInventoryAPIDirectionType(value GitlabComKeibiengineKeibiEnginePkgInventoryAPIDirectionType) *GitlabComKeibiengineKeibiEnginePkgInventoryAPIDirectionType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated GitlabComKeibiengineKeibiEnginePkgInventoryAPIDirectionType.
func (m GitlabComKeibiengineKeibiEnginePkgInventoryAPIDirectionType) Pointer() *GitlabComKeibiengineKeibiEnginePkgInventoryAPIDirectionType {
	return &m
}

const (

	// GitlabComKeibiengineKeibiEnginePkgInventoryAPIDirectionTypeAsc captures enum value "asc"
	GitlabComKeibiengineKeibiEnginePkgInventoryAPIDirectionTypeAsc GitlabComKeibiengineKeibiEnginePkgInventoryAPIDirectionType = "asc"

	// GitlabComKeibiengineKeibiEnginePkgInventoryAPIDirectionTypeDesc captures enum value "desc"
	GitlabComKeibiengineKeibiEnginePkgInventoryAPIDirectionTypeDesc GitlabComKeibiengineKeibiEnginePkgInventoryAPIDirectionType = "desc"
)

// for schema
var gitlabComKeibiengineKeibiEnginePkgInventoryApiDirectionTypeEnum []interface{}

func init() {
	var res []GitlabComKeibiengineKeibiEnginePkgInventoryAPIDirectionType
	if err := json.Unmarshal([]byte(`["asc","desc"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		gitlabComKeibiengineKeibiEnginePkgInventoryApiDirectionTypeEnum = append(gitlabComKeibiengineKeibiEnginePkgInventoryApiDirectionTypeEnum, v)
	}
}

func (m GitlabComKeibiengineKeibiEnginePkgInventoryAPIDirectionType) validateGitlabComKeibiengineKeibiEnginePkgInventoryAPIDirectionTypeEnum(path, location string, value GitlabComKeibiengineKeibiEnginePkgInventoryAPIDirectionType) error {
	if err := validate.EnumCase(path, location, value, gitlabComKeibiengineKeibiEnginePkgInventoryApiDirectionTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this gitlab com keibiengine keibi engine pkg inventory api direction type
func (m GitlabComKeibiengineKeibiEnginePkgInventoryAPIDirectionType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateGitlabComKeibiengineKeibiEnginePkgInventoryAPIDirectionTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this gitlab com keibiengine keibi engine pkg inventory api direction type based on context it is used
func (m GitlabComKeibiengineKeibiEnginePkgInventoryAPIDirectionType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
