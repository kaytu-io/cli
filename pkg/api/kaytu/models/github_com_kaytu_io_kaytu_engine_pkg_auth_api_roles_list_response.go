// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GithubComKaytuIoKaytuEnginePkgAuthAPIRolesListResponse github com kaytu io kaytu engine pkg auth api roles list response
//
// swagger:model github_com_kaytu-io_kaytu-engine_pkg_auth_api.RolesListResponse
type GithubComKaytuIoKaytuEnginePkgAuthAPIRolesListResponse struct {

	// Role Description and accesses
	// Example: The Administrator role is a super user role with all of the capabilities that can be assigned to a role, and its enables access to all data \u0026 configuration on a Kaytu Workspace. You cannot edit or delete the Administrator role.
	Description string `json:"description,omitempty"`

	// Name of the role
	// Example: admin
	// Enum: [admin editor viewer]
	RoleName GithubComKaytuIoKaytuEnginePkgAuthAPIRole `json:"roleName,omitempty"`

	// Number of users having this role in the workspace
	// Example: 1
	UserCount int64 `json:"userCount,omitempty"`
}

// Validate validates this github com kaytu io kaytu engine pkg auth api roles list response
func (m *GithubComKaytuIoKaytuEnginePkgAuthAPIRolesListResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRoleName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var githubComKaytuIoKaytuEnginePkgAuthApiRolesListResponseTypeRoleNamePropEnum []interface{}

func init() {
	var res []GithubComKaytuIoKaytuEnginePkgAuthAPIRole
	if err := json.Unmarshal([]byte(`["admin","editor","viewer"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		githubComKaytuIoKaytuEnginePkgAuthApiRolesListResponseTypeRoleNamePropEnum = append(githubComKaytuIoKaytuEnginePkgAuthApiRolesListResponseTypeRoleNamePropEnum, v)
	}
}

// prop value enum
func (m *GithubComKaytuIoKaytuEnginePkgAuthAPIRolesListResponse) validateRoleNameEnum(path, location string, value *struct {
	GithubComKaytuIoKaytuEnginePkgAuthAPIRole
}) error {
	if err := validate.EnumCase(path, location, value, githubComKaytuIoKaytuEnginePkgAuthApiRolesListResponseTypeRoleNamePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *GithubComKaytuIoKaytuEnginePkgAuthAPIRolesListResponse) validateRoleName(formats strfmt.Registry) error {
	if swag.IsZero(m.RoleName) { // not required
		return nil
	}

	return nil
}

// ContextValidate validate this github com kaytu io kaytu engine pkg auth api roles list response based on the context it is used
func (m *GithubComKaytuIoKaytuEnginePkgAuthAPIRolesListResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateRoleName(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GithubComKaytuIoKaytuEnginePkgAuthAPIRolesListResponse) contextValidateRoleName(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

// MarshalBinary interface implementation
func (m *GithubComKaytuIoKaytuEnginePkgAuthAPIRolesListResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GithubComKaytuIoKaytuEnginePkgAuthAPIRolesListResponse) UnmarshalBinary(b []byte) error {
	var res GithubComKaytuIoKaytuEnginePkgAuthAPIRolesListResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
