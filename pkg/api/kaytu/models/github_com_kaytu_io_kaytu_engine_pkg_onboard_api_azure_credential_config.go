// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GithubComKaytuIoKaytuEnginePkgOnboardAPIAzureCredentialConfig github com kaytu io kaytu engine pkg onboard api azure credential config
//
// swagger:model github_com_kaytu-io_kaytu-engine_pkg_onboard_api.AzureCredentialConfig
type GithubComKaytuIoKaytuEnginePkgOnboardAPIAzureCredentialConfig struct {

	// client Id
	// Required: true
	ClientID *string `json:"clientId"`

	// client secret
	// Required: true
	ClientSecret *string `json:"clientSecret"`

	// object Id
	// Required: true
	ObjectID *string `json:"objectId"`

	// secret Id
	// Required: true
	SecretID *string `json:"secretId"`

	// subscription Id
	SubscriptionID string `json:"subscriptionId,omitempty"`

	// tenant Id
	// Required: true
	TenantID *string `json:"tenantId"`
}

// Validate validates this github com kaytu io kaytu engine pkg onboard api azure credential config
func (m *GithubComKaytuIoKaytuEnginePkgOnboardAPIAzureCredentialConfig) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateClientID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateClientSecret(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateObjectID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSecretID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTenantID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GithubComKaytuIoKaytuEnginePkgOnboardAPIAzureCredentialConfig) validateClientID(formats strfmt.Registry) error {

	if err := validate.Required("clientId", "body", m.ClientID); err != nil {
		return err
	}

	return nil
}

func (m *GithubComKaytuIoKaytuEnginePkgOnboardAPIAzureCredentialConfig) validateClientSecret(formats strfmt.Registry) error {

	if err := validate.Required("clientSecret", "body", m.ClientSecret); err != nil {
		return err
	}

	return nil
}

func (m *GithubComKaytuIoKaytuEnginePkgOnboardAPIAzureCredentialConfig) validateObjectID(formats strfmt.Registry) error {

	if err := validate.Required("objectId", "body", m.ObjectID); err != nil {
		return err
	}

	return nil
}

func (m *GithubComKaytuIoKaytuEnginePkgOnboardAPIAzureCredentialConfig) validateSecretID(formats strfmt.Registry) error {

	if err := validate.Required("secretId", "body", m.SecretID); err != nil {
		return err
	}

	return nil
}

func (m *GithubComKaytuIoKaytuEnginePkgOnboardAPIAzureCredentialConfig) validateTenantID(formats strfmt.Registry) error {

	if err := validate.Required("tenantId", "body", m.TenantID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this github com kaytu io kaytu engine pkg onboard api azure credential config based on context it is used
func (m *GithubComKaytuIoKaytuEnginePkgOnboardAPIAzureCredentialConfig) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GithubComKaytuIoKaytuEnginePkgOnboardAPIAzureCredentialConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GithubComKaytuIoKaytuEnginePkgOnboardAPIAzureCredentialConfig) UnmarshalBinary(b []byte) error {
	var res GithubComKaytuIoKaytuEnginePkgOnboardAPIAzureCredentialConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
