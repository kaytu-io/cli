// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// GithubComKaytuIoKaytuEnginePkgInventoryAPIResourceCollectionStatus github com kaytu io kaytu engine pkg inventory api resource collection status
//
// swagger:model github_com_kaytu-io_kaytu-engine_pkg_inventory_api.ResourceCollectionStatus
type GithubComKaytuIoKaytuEnginePkgInventoryAPIResourceCollectionStatus string

func NewGithubComKaytuIoKaytuEnginePkgInventoryAPIResourceCollectionStatus(value GithubComKaytuIoKaytuEnginePkgInventoryAPIResourceCollectionStatus) *GithubComKaytuIoKaytuEnginePkgInventoryAPIResourceCollectionStatus {
	return &value
}

// Pointer returns a pointer to a freshly-allocated GithubComKaytuIoKaytuEnginePkgInventoryAPIResourceCollectionStatus.
func (m GithubComKaytuIoKaytuEnginePkgInventoryAPIResourceCollectionStatus) Pointer() *GithubComKaytuIoKaytuEnginePkgInventoryAPIResourceCollectionStatus {
	return &m
}

const (

	// GithubComKaytuIoKaytuEnginePkgInventoryAPIResourceCollectionStatusEmpty captures enum value ""
	GithubComKaytuIoKaytuEnginePkgInventoryAPIResourceCollectionStatusEmpty GithubComKaytuIoKaytuEnginePkgInventoryAPIResourceCollectionStatus = ""

	// GithubComKaytuIoKaytuEnginePkgInventoryAPIResourceCollectionStatusActive captures enum value "active"
	GithubComKaytuIoKaytuEnginePkgInventoryAPIResourceCollectionStatusActive GithubComKaytuIoKaytuEnginePkgInventoryAPIResourceCollectionStatus = "active"

	// GithubComKaytuIoKaytuEnginePkgInventoryAPIResourceCollectionStatusInactive captures enum value "inactive"
	GithubComKaytuIoKaytuEnginePkgInventoryAPIResourceCollectionStatusInactive GithubComKaytuIoKaytuEnginePkgInventoryAPIResourceCollectionStatus = "inactive"
)

// for schema
var githubComKaytuIoKaytuEnginePkgInventoryApiResourceCollectionStatusEnum []interface{}

func init() {
	var res []GithubComKaytuIoKaytuEnginePkgInventoryAPIResourceCollectionStatus
	if err := json.Unmarshal([]byte(`["","active","inactive"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		githubComKaytuIoKaytuEnginePkgInventoryApiResourceCollectionStatusEnum = append(githubComKaytuIoKaytuEnginePkgInventoryApiResourceCollectionStatusEnum, v)
	}
}

func (m GithubComKaytuIoKaytuEnginePkgInventoryAPIResourceCollectionStatus) validateGithubComKaytuIoKaytuEnginePkgInventoryAPIResourceCollectionStatusEnum(path, location string, value GithubComKaytuIoKaytuEnginePkgInventoryAPIResourceCollectionStatus) error {
	if err := validate.EnumCase(path, location, value, githubComKaytuIoKaytuEnginePkgInventoryApiResourceCollectionStatusEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this github com kaytu io kaytu engine pkg inventory api resource collection status
func (m GithubComKaytuIoKaytuEnginePkgInventoryAPIResourceCollectionStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateGithubComKaytuIoKaytuEnginePkgInventoryAPIResourceCollectionStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this github com kaytu io kaytu engine pkg inventory api resource collection status based on context it is used
func (m GithubComKaytuIoKaytuEnginePkgInventoryAPIResourceCollectionStatus) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
