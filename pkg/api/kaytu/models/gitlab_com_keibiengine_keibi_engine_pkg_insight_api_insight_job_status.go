// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// GitlabComKeibiengineKeibiEnginePkgInsightAPIInsightJobStatus gitlab com keibiengine keibi engine pkg insight api insight job status
//
// swagger:model gitlab_com_keibiengine_keibi-engine_pkg_insight_api.InsightJobStatus
type GitlabComKeibiengineKeibiEnginePkgInsightAPIInsightJobStatus string

func NewGitlabComKeibiengineKeibiEnginePkgInsightAPIInsightJobStatus(value GitlabComKeibiengineKeibiEnginePkgInsightAPIInsightJobStatus) *GitlabComKeibiengineKeibiEnginePkgInsightAPIInsightJobStatus {
	return &value
}

// Pointer returns a pointer to a freshly-allocated GitlabComKeibiengineKeibiEnginePkgInsightAPIInsightJobStatus.
func (m GitlabComKeibiengineKeibiEnginePkgInsightAPIInsightJobStatus) Pointer() *GitlabComKeibiengineKeibiEnginePkgInsightAPIInsightJobStatus {
	return &m
}

const (

	// GitlabComKeibiengineKeibiEnginePkgInsightAPIInsightJobStatusINPROGRESS captures enum value "IN_PROGRESS"
	GitlabComKeibiengineKeibiEnginePkgInsightAPIInsightJobStatusINPROGRESS GitlabComKeibiengineKeibiEnginePkgInsightAPIInsightJobStatus = "IN_PROGRESS"

	// GitlabComKeibiengineKeibiEnginePkgInsightAPIInsightJobStatusFAILED captures enum value "FAILED"
	GitlabComKeibiengineKeibiEnginePkgInsightAPIInsightJobStatusFAILED GitlabComKeibiengineKeibiEnginePkgInsightAPIInsightJobStatus = "FAILED"

	// GitlabComKeibiengineKeibiEnginePkgInsightAPIInsightJobStatusSUCCEEDED captures enum value "SUCCEEDED"
	GitlabComKeibiengineKeibiEnginePkgInsightAPIInsightJobStatusSUCCEEDED GitlabComKeibiengineKeibiEnginePkgInsightAPIInsightJobStatus = "SUCCEEDED"
)

// for schema
var gitlabComKeibiengineKeibiEnginePkgInsightApiInsightJobStatusEnum []interface{}

func init() {
	var res []GitlabComKeibiengineKeibiEnginePkgInsightAPIInsightJobStatus
	if err := json.Unmarshal([]byte(`["IN_PROGRESS","FAILED","SUCCEEDED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		gitlabComKeibiengineKeibiEnginePkgInsightApiInsightJobStatusEnum = append(gitlabComKeibiengineKeibiEnginePkgInsightApiInsightJobStatusEnum, v)
	}
}

func (m GitlabComKeibiengineKeibiEnginePkgInsightAPIInsightJobStatus) validateGitlabComKeibiengineKeibiEnginePkgInsightAPIInsightJobStatusEnum(path, location string, value GitlabComKeibiengineKeibiEnginePkgInsightAPIInsightJobStatus) error {
	if err := validate.EnumCase(path, location, value, gitlabComKeibiengineKeibiEnginePkgInsightApiInsightJobStatusEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this gitlab com keibiengine keibi engine pkg insight api insight job status
func (m GitlabComKeibiengineKeibiEnginePkgInsightAPIInsightJobStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateGitlabComKeibiengineKeibiEnginePkgInsightAPIInsightJobStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this gitlab com keibiengine keibi engine pkg insight api insight job status based on context it is used
func (m GitlabComKeibiengineKeibiEnginePkgInsightAPIInsightJobStatus) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
