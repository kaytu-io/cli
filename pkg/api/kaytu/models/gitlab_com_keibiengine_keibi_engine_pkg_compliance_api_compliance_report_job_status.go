// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// GitlabComKeibiengineKeibiEnginePkgComplianceAPIComplianceReportJobStatus gitlab com keibiengine keibi engine pkg compliance api compliance report job status
//
// swagger:model gitlab_com_keibiengine_keibi-engine_pkg_compliance_api.ComplianceReportJobStatus
type GitlabComKeibiengineKeibiEnginePkgComplianceAPIComplianceReportJobStatus string

func NewGitlabComKeibiengineKeibiEnginePkgComplianceAPIComplianceReportJobStatus(value GitlabComKeibiengineKeibiEnginePkgComplianceAPIComplianceReportJobStatus) *GitlabComKeibiengineKeibiEnginePkgComplianceAPIComplianceReportJobStatus {
	return &value
}

// Pointer returns a pointer to a freshly-allocated GitlabComKeibiengineKeibiEnginePkgComplianceAPIComplianceReportJobStatus.
func (m GitlabComKeibiengineKeibiEnginePkgComplianceAPIComplianceReportJobStatus) Pointer() *GitlabComKeibiengineKeibiEnginePkgComplianceAPIComplianceReportJobStatus {
	return &m
}

const (

	// GitlabComKeibiengineKeibiEnginePkgComplianceAPIComplianceReportJobStatusCREATED captures enum value "CREATED"
	GitlabComKeibiengineKeibiEnginePkgComplianceAPIComplianceReportJobStatusCREATED GitlabComKeibiengineKeibiEnginePkgComplianceAPIComplianceReportJobStatus = "CREATED"

	// GitlabComKeibiengineKeibiEnginePkgComplianceAPIComplianceReportJobStatusINPROGRESS captures enum value "IN_PROGRESS"
	GitlabComKeibiengineKeibiEnginePkgComplianceAPIComplianceReportJobStatusINPROGRESS GitlabComKeibiengineKeibiEnginePkgComplianceAPIComplianceReportJobStatus = "IN_PROGRESS"

	// GitlabComKeibiengineKeibiEnginePkgComplianceAPIComplianceReportJobStatusCOMPLETEDWITHFAILURE captures enum value "COMPLETED_WITH_FAILURE"
	GitlabComKeibiengineKeibiEnginePkgComplianceAPIComplianceReportJobStatusCOMPLETEDWITHFAILURE GitlabComKeibiengineKeibiEnginePkgComplianceAPIComplianceReportJobStatus = "COMPLETED_WITH_FAILURE"

	// GitlabComKeibiengineKeibiEnginePkgComplianceAPIComplianceReportJobStatusCOMPLETED captures enum value "COMPLETED"
	GitlabComKeibiengineKeibiEnginePkgComplianceAPIComplianceReportJobStatusCOMPLETED GitlabComKeibiengineKeibiEnginePkgComplianceAPIComplianceReportJobStatus = "COMPLETED"
)

// for schema
var gitlabComKeibiengineKeibiEnginePkgComplianceApiComplianceReportJobStatusEnum []interface{}

func init() {
	var res []GitlabComKeibiengineKeibiEnginePkgComplianceAPIComplianceReportJobStatus
	if err := json.Unmarshal([]byte(`["CREATED","IN_PROGRESS","COMPLETED_WITH_FAILURE","COMPLETED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		gitlabComKeibiengineKeibiEnginePkgComplianceApiComplianceReportJobStatusEnum = append(gitlabComKeibiengineKeibiEnginePkgComplianceApiComplianceReportJobStatusEnum, v)
	}
}

func (m GitlabComKeibiengineKeibiEnginePkgComplianceAPIComplianceReportJobStatus) validateGitlabComKeibiengineKeibiEnginePkgComplianceAPIComplianceReportJobStatusEnum(path, location string, value GitlabComKeibiengineKeibiEnginePkgComplianceAPIComplianceReportJobStatus) error {
	if err := validate.EnumCase(path, location, value, gitlabComKeibiengineKeibiEnginePkgComplianceApiComplianceReportJobStatusEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this gitlab com keibiengine keibi engine pkg compliance api compliance report job status
func (m GitlabComKeibiengineKeibiEnginePkgComplianceAPIComplianceReportJobStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateGitlabComKeibiengineKeibiEnginePkgComplianceAPIComplianceReportJobStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this gitlab com keibiengine keibi engine pkg compliance api compliance report job status based on context it is used
func (m GitlabComKeibiengineKeibiEnginePkgComplianceAPIComplianceReportJobStatus) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
