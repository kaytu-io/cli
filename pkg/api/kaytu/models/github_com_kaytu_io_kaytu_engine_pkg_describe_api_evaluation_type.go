// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// GithubComKaytuIoKaytuEnginePkgDescribeAPIEvaluationType github com kaytu io kaytu engine pkg describe api evaluation type
//
// swagger:model github_com_kaytu-io_kaytu-engine_pkg_describe_api.EvaluationType
type GithubComKaytuIoKaytuEnginePkgDescribeAPIEvaluationType string

func NewGithubComKaytuIoKaytuEnginePkgDescribeAPIEvaluationType(value GithubComKaytuIoKaytuEnginePkgDescribeAPIEvaluationType) *GithubComKaytuIoKaytuEnginePkgDescribeAPIEvaluationType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated GithubComKaytuIoKaytuEnginePkgDescribeAPIEvaluationType.
func (m GithubComKaytuIoKaytuEnginePkgDescribeAPIEvaluationType) Pointer() *GithubComKaytuIoKaytuEnginePkgDescribeAPIEvaluationType {
	return &m
}

const (

	// GithubComKaytuIoKaytuEnginePkgDescribeAPIEvaluationTypeINSIGHT captures enum value "INSIGHT"
	GithubComKaytuIoKaytuEnginePkgDescribeAPIEvaluationTypeINSIGHT GithubComKaytuIoKaytuEnginePkgDescribeAPIEvaluationType = "INSIGHT"

	// GithubComKaytuIoKaytuEnginePkgDescribeAPIEvaluationTypeBENCHMARK captures enum value "BENCHMARK"
	GithubComKaytuIoKaytuEnginePkgDescribeAPIEvaluationTypeBENCHMARK GithubComKaytuIoKaytuEnginePkgDescribeAPIEvaluationType = "BENCHMARK"
)

// for schema
var githubComKaytuIoKaytuEnginePkgDescribeApiEvaluationTypeEnum []interface{}

func init() {
	var res []GithubComKaytuIoKaytuEnginePkgDescribeAPIEvaluationType
	if err := json.Unmarshal([]byte(`["INSIGHT","BENCHMARK"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		githubComKaytuIoKaytuEnginePkgDescribeApiEvaluationTypeEnum = append(githubComKaytuIoKaytuEnginePkgDescribeApiEvaluationTypeEnum, v)
	}
}

func (m GithubComKaytuIoKaytuEnginePkgDescribeAPIEvaluationType) validateGithubComKaytuIoKaytuEnginePkgDescribeAPIEvaluationTypeEnum(path, location string, value GithubComKaytuIoKaytuEnginePkgDescribeAPIEvaluationType) error {
	if err := validate.EnumCase(path, location, value, githubComKaytuIoKaytuEnginePkgDescribeApiEvaluationTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this github com kaytu io kaytu engine pkg describe api evaluation type
func (m GithubComKaytuIoKaytuEnginePkgDescribeAPIEvaluationType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateGithubComKaytuIoKaytuEnginePkgDescribeAPIEvaluationTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this github com kaytu io kaytu engine pkg describe api evaluation type based on context it is used
func (m GithubComKaytuIoKaytuEnginePkgDescribeAPIEvaluationType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
