// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectorState gitlab com keibiengine keibi engine pkg onboard api connector state
//
// swagger:model gitlab_com_keibiengine_keibi-engine_pkg_onboard_api.ConnectorState
type GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectorState string

func NewGitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectorState(value GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectorState) *GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectorState {
	return &value
}

// Pointer returns a pointer to a freshly-allocated GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectorState.
func (m GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectorState) Pointer() *GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectorState {
	return &m
}

const (

	// GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectorStateACTIVE captures enum value "ACTIVE"
	GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectorStateACTIVE GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectorState = "ACTIVE"

	// GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectorStateNOTSETUP captures enum value "NOT_SETUP"
	GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectorStateNOTSETUP GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectorState = "NOT_SETUP"
)

// for schema
var gitlabComKeibiengineKeibiEnginePkgOnboardApiConnectorStateEnum []interface{}

func init() {
	var res []GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectorState
	if err := json.Unmarshal([]byte(`["ACTIVE","NOT_SETUP"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		gitlabComKeibiengineKeibiEnginePkgOnboardApiConnectorStateEnum = append(gitlabComKeibiengineKeibiEnginePkgOnboardApiConnectorStateEnum, v)
	}
}

func (m GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectorState) validateGitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectorStateEnum(path, location string, value GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectorState) error {
	if err := validate.EnumCase(path, location, value, gitlabComKeibiengineKeibiEnginePkgOnboardApiConnectorStateEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this gitlab com keibiengine keibi engine pkg onboard api connector state
func (m GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectorState) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateGitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectorStateEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this gitlab com keibiengine keibi engine pkg onboard api connector state based on context it is used
func (m GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectorState) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
