// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// GithubComKaytuIoKaytuEnginePkgInventoryAPISourceType github com kaytu io kaytu engine pkg inventory api source type
//
// swagger:model github_com_kaytu-io_kaytu-engine_pkg_inventory_api.SourceType
type GithubComKaytuIoKaytuEnginePkgInventoryAPISourceType string

func NewGithubComKaytuIoKaytuEnginePkgInventoryAPISourceType(value GithubComKaytuIoKaytuEnginePkgInventoryAPISourceType) *GithubComKaytuIoKaytuEnginePkgInventoryAPISourceType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated GithubComKaytuIoKaytuEnginePkgInventoryAPISourceType.
func (m GithubComKaytuIoKaytuEnginePkgInventoryAPISourceType) Pointer() *GithubComKaytuIoKaytuEnginePkgInventoryAPISourceType {
	return &m
}

const (

	// GithubComKaytuIoKaytuEnginePkgInventoryAPISourceTypeAWS captures enum value "AWS"
	GithubComKaytuIoKaytuEnginePkgInventoryAPISourceTypeAWS GithubComKaytuIoKaytuEnginePkgInventoryAPISourceType = "AWS"

	// GithubComKaytuIoKaytuEnginePkgInventoryAPISourceTypeAzure captures enum value "Azure"
	GithubComKaytuIoKaytuEnginePkgInventoryAPISourceTypeAzure GithubComKaytuIoKaytuEnginePkgInventoryAPISourceType = "Azure"
)

// for schema
var githubComKaytuIoKaytuEnginePkgInventoryApiSourceTypeEnum []interface{}

func init() {
	var res []GithubComKaytuIoKaytuEnginePkgInventoryAPISourceType
	if err := json.Unmarshal([]byte(`["AWS","Azure"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		githubComKaytuIoKaytuEnginePkgInventoryApiSourceTypeEnum = append(githubComKaytuIoKaytuEnginePkgInventoryApiSourceTypeEnum, v)
	}
}

func (m GithubComKaytuIoKaytuEnginePkgInventoryAPISourceType) validateGithubComKaytuIoKaytuEnginePkgInventoryAPISourceTypeEnum(path, location string, value GithubComKaytuIoKaytuEnginePkgInventoryAPISourceType) error {
	if err := validate.EnumCase(path, location, value, githubComKaytuIoKaytuEnginePkgInventoryApiSourceTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this github com kaytu io kaytu engine pkg inventory api source type
func (m GithubComKaytuIoKaytuEnginePkgInventoryAPISourceType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateGithubComKaytuIoKaytuEnginePkgInventoryAPISourceTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this github com kaytu io kaytu engine pkg inventory api source type based on context it is used
func (m GithubComKaytuIoKaytuEnginePkgInventoryAPISourceType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
