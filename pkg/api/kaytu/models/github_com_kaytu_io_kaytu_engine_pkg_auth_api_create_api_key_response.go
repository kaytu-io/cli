// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GithubComKaytuIoKaytuEnginePkgAuthAPICreateAPIKeyResponse github com kaytu io kaytu engine pkg auth api create API key response
//
// swagger:model github_com_kaytu-io_kaytu-engine_pkg_auth_api.CreateAPIKeyResponse
type GithubComKaytuIoKaytuEnginePkgAuthAPICreateAPIKeyResponse struct {

	// Activity state of the key
	// Example: true
	Active bool `json:"active,omitempty"`

	// Creation timestamp in UTC
	// Example: 2023-03-31T09:36:09.855Z
	CreatedAt string `json:"createdAt,omitempty"`

	// Unique identifier for the key
	// Example: 1
	ID int64 `json:"id,omitempty"`

	// Name of the key
	// Example: example
	Name string `json:"name,omitempty"`

	// Name of the role
	// Example: admin
	// Enum: [admin editor viewer]
	RoleName GithubComKaytuIoKaytuEnginePkgAuthAPIRole `json:"roleName,omitempty"`

	// Token of the key
	Token string `json:"token,omitempty"`
}

// Validate validates this github com kaytu io kaytu engine pkg auth api create API key response
func (m *GithubComKaytuIoKaytuEnginePkgAuthAPICreateAPIKeyResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRoleName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var githubComKaytuIoKaytuEnginePkgAuthApiCreateApiKeyResponseTypeRoleNamePropEnum []interface{}

func init() {
	var res []GithubComKaytuIoKaytuEnginePkgAuthAPIRole
	if err := json.Unmarshal([]byte(`["admin","editor","viewer"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		githubComKaytuIoKaytuEnginePkgAuthApiCreateApiKeyResponseTypeRoleNamePropEnum = append(githubComKaytuIoKaytuEnginePkgAuthApiCreateApiKeyResponseTypeRoleNamePropEnum, v)
	}
}

// prop value enum
func (m *GithubComKaytuIoKaytuEnginePkgAuthAPICreateAPIKeyResponse) validateRoleNameEnum(path, location string, value *struct {
	GithubComKaytuIoKaytuEnginePkgAuthAPIRole
}) error {
	if err := validate.EnumCase(path, location, value, githubComKaytuIoKaytuEnginePkgAuthApiCreateApiKeyResponseTypeRoleNamePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *GithubComKaytuIoKaytuEnginePkgAuthAPICreateAPIKeyResponse) validateRoleName(formats strfmt.Registry) error {
	if swag.IsZero(m.RoleName) { // not required
		return nil
	}

	return nil
}

// ContextValidate validate this github com kaytu io kaytu engine pkg auth api create API key response based on the context it is used
func (m *GithubComKaytuIoKaytuEnginePkgAuthAPICreateAPIKeyResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateRoleName(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GithubComKaytuIoKaytuEnginePkgAuthAPICreateAPIKeyResponse) contextValidateRoleName(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

// MarshalBinary interface implementation
func (m *GithubComKaytuIoKaytuEnginePkgAuthAPICreateAPIKeyResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GithubComKaytuIoKaytuEnginePkgAuthAPICreateAPIKeyResponse) UnmarshalBinary(b []byte) error {
	var res GithubComKaytuIoKaytuEnginePkgAuthAPICreateAPIKeyResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
