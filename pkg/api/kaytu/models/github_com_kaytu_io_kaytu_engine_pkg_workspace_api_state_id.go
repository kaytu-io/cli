// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// GithubComKaytuIoKaytuEnginePkgWorkspaceAPIStateID github com kaytu io kaytu engine pkg workspace api state ID
//
// swagger:model github_com_kaytu-io_kaytu-engine_pkg_workspace_api.StateID
type GithubComKaytuIoKaytuEnginePkgWorkspaceAPIStateID string

func NewGithubComKaytuIoKaytuEnginePkgWorkspaceAPIStateID(value GithubComKaytuIoKaytuEnginePkgWorkspaceAPIStateID) *GithubComKaytuIoKaytuEnginePkgWorkspaceAPIStateID {
	return &value
}

// Pointer returns a pointer to a freshly-allocated GithubComKaytuIoKaytuEnginePkgWorkspaceAPIStateID.
func (m GithubComKaytuIoKaytuEnginePkgWorkspaceAPIStateID) Pointer() *GithubComKaytuIoKaytuEnginePkgWorkspaceAPIStateID {
	return &m
}

const (

	// GithubComKaytuIoKaytuEnginePkgWorkspaceAPIStateIDRESERVING captures enum value "RESERVING"
	GithubComKaytuIoKaytuEnginePkgWorkspaceAPIStateIDRESERVING GithubComKaytuIoKaytuEnginePkgWorkspaceAPIStateID = "RESERVING"

	// GithubComKaytuIoKaytuEnginePkgWorkspaceAPIStateIDRESERVED captures enum value "RESERVED"
	GithubComKaytuIoKaytuEnginePkgWorkspaceAPIStateIDRESERVED GithubComKaytuIoKaytuEnginePkgWorkspaceAPIStateID = "RESERVED"

	// GithubComKaytuIoKaytuEnginePkgWorkspaceAPIStateIDWAITINGFORCREDENTIAL captures enum value "WAITING_FOR_CREDENTIAL"
	GithubComKaytuIoKaytuEnginePkgWorkspaceAPIStateIDWAITINGFORCREDENTIAL GithubComKaytuIoKaytuEnginePkgWorkspaceAPIStateID = "WAITING_FOR_CREDENTIAL"

	// GithubComKaytuIoKaytuEnginePkgWorkspaceAPIStateIDPROVISIONING captures enum value "PROVISIONING"
	GithubComKaytuIoKaytuEnginePkgWorkspaceAPIStateIDPROVISIONING GithubComKaytuIoKaytuEnginePkgWorkspaceAPIStateID = "PROVISIONING"

	// GithubComKaytuIoKaytuEnginePkgWorkspaceAPIStateIDPROVISIONED captures enum value "PROVISIONED"
	GithubComKaytuIoKaytuEnginePkgWorkspaceAPIStateIDPROVISIONED GithubComKaytuIoKaytuEnginePkgWorkspaceAPIStateID = "PROVISIONED"

	// GithubComKaytuIoKaytuEnginePkgWorkspaceAPIStateIDDELETING captures enum value "DELETING"
	GithubComKaytuIoKaytuEnginePkgWorkspaceAPIStateIDDELETING GithubComKaytuIoKaytuEnginePkgWorkspaceAPIStateID = "DELETING"

	// GithubComKaytuIoKaytuEnginePkgWorkspaceAPIStateIDDELETED captures enum value "DELETED"
	GithubComKaytuIoKaytuEnginePkgWorkspaceAPIStateIDDELETED GithubComKaytuIoKaytuEnginePkgWorkspaceAPIStateID = "DELETED"
)

// for schema
var githubComKaytuIoKaytuEnginePkgWorkspaceApiStateIdEnum []interface{}

func init() {
	var res []GithubComKaytuIoKaytuEnginePkgWorkspaceAPIStateID
	if err := json.Unmarshal([]byte(`["RESERVING","RESERVED","WAITING_FOR_CREDENTIAL","PROVISIONING","PROVISIONED","DELETING","DELETED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		githubComKaytuIoKaytuEnginePkgWorkspaceApiStateIdEnum = append(githubComKaytuIoKaytuEnginePkgWorkspaceApiStateIdEnum, v)
	}
}

func (m GithubComKaytuIoKaytuEnginePkgWorkspaceAPIStateID) validateGithubComKaytuIoKaytuEnginePkgWorkspaceAPIStateIDEnum(path, location string, value GithubComKaytuIoKaytuEnginePkgWorkspaceAPIStateID) error {
	if err := validate.EnumCase(path, location, value, githubComKaytuIoKaytuEnginePkgWorkspaceApiStateIdEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this github com kaytu io kaytu engine pkg workspace api state ID
func (m GithubComKaytuIoKaytuEnginePkgWorkspaceAPIStateID) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateGithubComKaytuIoKaytuEnginePkgWorkspaceAPIStateIDEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this github com kaytu io kaytu engine pkg workspace api state ID based on context it is used
func (m GithubComKaytuIoKaytuEnginePkgWorkspaceAPIStateID) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
