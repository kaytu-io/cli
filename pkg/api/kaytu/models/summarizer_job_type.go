// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// SummarizerJobType summarizer job type
//
// swagger:model summarizer.JobType
type SummarizerJobType string

func NewSummarizerJobType(value SummarizerJobType) *SummarizerJobType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated SummarizerJobType.
func (m SummarizerJobType) Pointer() *SummarizerJobType {
	return &m
}

const (

	// SummarizerJobTypeResourceMustSummarizer captures enum value "resourceMustSummarizer"
	SummarizerJobTypeResourceMustSummarizer SummarizerJobType = "resourceMustSummarizer"

	// SummarizerJobTypeComplianceSummarizer captures enum value "complianceSummarizer"
	SummarizerJobTypeComplianceSummarizer SummarizerJobType = "complianceSummarizer"
)

// for schema
var summarizerJobTypeEnum []interface{}

func init() {
	var res []SummarizerJobType
	if err := json.Unmarshal([]byte(`["resourceMustSummarizer","complianceSummarizer"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		summarizerJobTypeEnum = append(summarizerJobTypeEnum, v)
	}
}

func (m SummarizerJobType) validateSummarizerJobTypeEnum(path, location string, value SummarizerJobType) error {
	if err := validate.EnumCase(path, location, value, summarizerJobTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this summarizer job type
func (m SummarizerJobType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateSummarizerJobTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this summarizer job type based on context it is used
func (m SummarizerJobType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
