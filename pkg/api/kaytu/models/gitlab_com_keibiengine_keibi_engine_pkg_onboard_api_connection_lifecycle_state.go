// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectionLifecycleState gitlab com keibiengine keibi engine pkg onboard api connection lifecycle state
//
// swagger:model gitlab_com_keibiengine_keibi-engine_pkg_onboard_api.ConnectionLifecycleState
type GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectionLifecycleState string

func NewGitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectionLifecycleState(value GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectionLifecycleState) *GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectionLifecycleState {
	return &value
}

// Pointer returns a pointer to a freshly-allocated GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectionLifecycleState.
func (m GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectionLifecycleState) Pointer() *GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectionLifecycleState {
	return &m
}

const (

	// GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectionLifecycleStatePending captures enum value "pending"
	GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectionLifecycleStatePending GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectionLifecycleState = "pending"

	// GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectionLifecycleStateInitialDashDiscovery captures enum value "initial-discovery"
	GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectionLifecycleStateInitialDashDiscovery GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectionLifecycleState = "initial-discovery"

	// GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectionLifecycleStateEnabled captures enum value "enabled"
	GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectionLifecycleStateEnabled GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectionLifecycleState = "enabled"

	// GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectionLifecycleStateDisabled captures enum value "disabled"
	GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectionLifecycleStateDisabled GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectionLifecycleState = "disabled"

	// GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectionLifecycleStateDeleted captures enum value "deleted"
	GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectionLifecycleStateDeleted GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectionLifecycleState = "deleted"
)

// for schema
var gitlabComKeibiengineKeibiEnginePkgOnboardApiConnectionLifecycleStateEnum []interface{}

func init() {
	var res []GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectionLifecycleState
	if err := json.Unmarshal([]byte(`["pending","initial-discovery","enabled","disabled","deleted"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		gitlabComKeibiengineKeibiEnginePkgOnboardApiConnectionLifecycleStateEnum = append(gitlabComKeibiengineKeibiEnginePkgOnboardApiConnectionLifecycleStateEnum, v)
	}
}

func (m GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectionLifecycleState) validateGitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectionLifecycleStateEnum(path, location string, value GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectionLifecycleState) error {
	if err := validate.EnumCase(path, location, value, gitlabComKeibiengineKeibiEnginePkgOnboardApiConnectionLifecycleStateEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this gitlab com keibiengine keibi engine pkg onboard api connection lifecycle state
func (m GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectionLifecycleState) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateGitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectionLifecycleStateEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this gitlab com keibiengine keibi engine pkg onboard api connection lifecycle state based on context it is used
func (m GitlabComKeibiengineKeibiEnginePkgOnboardAPIConnectionLifecycleState) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
