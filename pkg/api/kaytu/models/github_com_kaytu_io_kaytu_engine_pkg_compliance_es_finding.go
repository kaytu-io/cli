// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GithubComKaytuIoKaytuEnginePkgComplianceEsFinding github com kaytu io kaytu engine pkg compliance es finding
//
// swagger:model github_com_kaytu-io_kaytu-engine_pkg_compliance_es.Finding
type GithubComKaytuIoKaytuEnginePkgComplianceEsFinding struct {

	// Finding ID
	// Example: /subscriptions/123/resourceGroups/rg-1/providers/Microsoft.Compute/virtualMachines/vm-1-azure_cis_v140_7_5
	ID string `json:"ID,omitempty"`

	// Benchmark ID
	// Example: azure_cis_v140
	BenchmarkID string `json:"benchmarkID,omitempty"`

	// Compliance job ID
	// Example: 1
	ComplianceJobID int64 `json:"complianceJobID,omitempty"`

	// Connection ID
	// Example: 8e0f8e7a-1b1c-4e6f-b7e4-9c6af9d2b1c8
	ConnectionID string `json:"connectionID,omitempty"`

	// Cloud provider
	// Example: Azure
	Connector SourceType `json:"connector,omitempty"`

	// Timestamp of the policy description
	// Example: 1589395200
	DescribedAt int64 `json:"describedAt,omitempty"`

	// Timestamp of the policy evaluation
	// Example: 1589395200
	EvaluatedAt int64 `json:"evaluatedAt,omitempty"`

	// Evaluator name
	// Example: steampipe-v0.5
	Evaluator string `json:"evaluator,omitempty"`

	// Policy ID
	// Example: azure_cis_v140_7_5
	PolicyID string `json:"policyID,omitempty"`

	// Reason for the policy evaluation result
	// Example: The VM is not using managed disks
	Reason string `json:"reason,omitempty"`

	// Resource ID
	// Example: /subscriptions/123/resourceGroups/rg-1/providers/Microsoft.Compute/virtualMachines/vm-1
	ResourceID string `json:"resourceID,omitempty"`

	// Resource location
	// Example: eastus
	ResourceLocation string `json:"resourceLocation,omitempty"`

	// Resource name
	// Example: vm-1
	ResourceName string `json:"resourceName,omitempty"`

	// Resource type
	// Example: Microsoft.Compute/virtualMachines
	ResourceType string `json:"resourceType,omitempty"`

	// Compliance result
	// Example: alarm
	Result TypesComplianceResult `json:"result,omitempty"`

	// Schedule job ID
	// Example: 1
	ScheduleJobID int64 `json:"scheduleJobID,omitempty"`

	// Compliance severity
	// Example: low
	Severity string `json:"severity,omitempty"`

	// Whether the policy is active or not
	// Example: true
	StateActive bool `json:"stateActive,omitempty"`
}

// Validate validates this github com kaytu io kaytu engine pkg compliance es finding
func (m *GithubComKaytuIoKaytuEnginePkgComplianceEsFinding) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateConnector(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateResult(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GithubComKaytuIoKaytuEnginePkgComplianceEsFinding) validateConnector(formats strfmt.Registry) error {
	if swag.IsZero(m.Connector) { // not required
		return nil
	}

	return nil
}

func (m *GithubComKaytuIoKaytuEnginePkgComplianceEsFinding) validateResult(formats strfmt.Registry) error {
	if swag.IsZero(m.Result) { // not required
		return nil
	}

	return nil
}

// ContextValidate validate this github com kaytu io kaytu engine pkg compliance es finding based on the context it is used
func (m *GithubComKaytuIoKaytuEnginePkgComplianceEsFinding) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateConnector(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateResult(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GithubComKaytuIoKaytuEnginePkgComplianceEsFinding) contextValidateConnector(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

func (m *GithubComKaytuIoKaytuEnginePkgComplianceEsFinding) contextValidateResult(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

// MarshalBinary interface implementation
func (m *GithubComKaytuIoKaytuEnginePkgComplianceEsFinding) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GithubComKaytuIoKaytuEnginePkgComplianceEsFinding) UnmarshalBinary(b []byte) error {
	var res GithubComKaytuIoKaytuEnginePkgComplianceEsFinding
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
