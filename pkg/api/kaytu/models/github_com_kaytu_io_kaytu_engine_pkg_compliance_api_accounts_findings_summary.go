// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GithubComKaytuIoKaytuEnginePkgComplianceAPIAccountsFindingsSummary github com kaytu io kaytu engine pkg compliance api accounts findings summary
//
// swagger:model github_com_kaytu-io_kaytu-engine_pkg_compliance_api.AccountsFindingsSummary
type GithubComKaytuIoKaytuEnginePkgComplianceAPIAccountsFindingsSummary struct {

	// account Id
	AccountID string `json:"accountId,omitempty"`

	// account name
	AccountName string `json:"accountName,omitempty"`

	// last check time
	LastCheckTime string `json:"lastCheckTime,omitempty"`

	// security score
	SecurityScore float64 `json:"securityScore,omitempty"`

	// severities count
	SeveritiesCount *GithubComKaytuIoKaytuEnginePkgComplianceAPIAccountsFindingsSummarySeveritiesCount `json:"severitiesCount,omitempty"`
}

// Validate validates this github com kaytu io kaytu engine pkg compliance api accounts findings summary
func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIAccountsFindingsSummary) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSeveritiesCount(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIAccountsFindingsSummary) validateSeveritiesCount(formats strfmt.Registry) error {
	if swag.IsZero(m.SeveritiesCount) { // not required
		return nil
	}

	if m.SeveritiesCount != nil {
		if err := m.SeveritiesCount.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("severitiesCount")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("severitiesCount")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this github com kaytu io kaytu engine pkg compliance api accounts findings summary based on the context it is used
func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIAccountsFindingsSummary) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateSeveritiesCount(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIAccountsFindingsSummary) contextValidateSeveritiesCount(ctx context.Context, formats strfmt.Registry) error {

	if m.SeveritiesCount != nil {

		if swag.IsZero(m.SeveritiesCount) { // not required
			return nil
		}

		if err := m.SeveritiesCount.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("severitiesCount")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("severitiesCount")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIAccountsFindingsSummary) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIAccountsFindingsSummary) UnmarshalBinary(b []byte) error {
	var res GithubComKaytuIoKaytuEnginePkgComplianceAPIAccountsFindingsSummary
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// GithubComKaytuIoKaytuEnginePkgComplianceAPIAccountsFindingsSummarySeveritiesCount github com kaytu io kaytu engine pkg compliance API accounts findings summary severities count
//
// swagger:model GithubComKaytuIoKaytuEnginePkgComplianceAPIAccountsFindingsSummarySeveritiesCount
type GithubComKaytuIoKaytuEnginePkgComplianceAPIAccountsFindingsSummarySeveritiesCount struct {

	// critical
	Critical int64 `json:"critical,omitempty"`

	// high
	High int64 `json:"high,omitempty"`

	// low
	Low int64 `json:"low,omitempty"`

	// medium
	Medium int64 `json:"medium,omitempty"`
}

// Validate validates this github com kaytu io kaytu engine pkg compliance API accounts findings summary severities count
func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIAccountsFindingsSummarySeveritiesCount) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this github com kaytu io kaytu engine pkg compliance API accounts findings summary severities count based on context it is used
func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIAccountsFindingsSummarySeveritiesCount) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIAccountsFindingsSummarySeveritiesCount) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIAccountsFindingsSummarySeveritiesCount) UnmarshalBinary(b []byte) error {
	var res GithubComKaytuIoKaytuEnginePkgComplianceAPIAccountsFindingsSummarySeveritiesCount
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
