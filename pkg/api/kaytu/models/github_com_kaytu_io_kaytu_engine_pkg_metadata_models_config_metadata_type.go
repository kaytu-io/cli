// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// GithubComKaytuIoKaytuEnginePkgMetadataModelsConfigMetadataType github com kaytu io kaytu engine pkg metadata models config metadata type
//
// swagger:model github_com_kaytu-io_kaytu-engine_pkg_metadata_models.ConfigMetadataType
type GithubComKaytuIoKaytuEnginePkgMetadataModelsConfigMetadataType string

func NewGithubComKaytuIoKaytuEnginePkgMetadataModelsConfigMetadataType(value GithubComKaytuIoKaytuEnginePkgMetadataModelsConfigMetadataType) *GithubComKaytuIoKaytuEnginePkgMetadataModelsConfigMetadataType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated GithubComKaytuIoKaytuEnginePkgMetadataModelsConfigMetadataType.
func (m GithubComKaytuIoKaytuEnginePkgMetadataModelsConfigMetadataType) Pointer() *GithubComKaytuIoKaytuEnginePkgMetadataModelsConfigMetadataType {
	return &m
}

const (

	// GithubComKaytuIoKaytuEnginePkgMetadataModelsConfigMetadataTypeString captures enum value "string"
	GithubComKaytuIoKaytuEnginePkgMetadataModelsConfigMetadataTypeString GithubComKaytuIoKaytuEnginePkgMetadataModelsConfigMetadataType = "string"

	// GithubComKaytuIoKaytuEnginePkgMetadataModelsConfigMetadataTypeInt captures enum value "int"
	GithubComKaytuIoKaytuEnginePkgMetadataModelsConfigMetadataTypeInt GithubComKaytuIoKaytuEnginePkgMetadataModelsConfigMetadataType = "int"

	// GithubComKaytuIoKaytuEnginePkgMetadataModelsConfigMetadataTypeBool captures enum value "bool"
	GithubComKaytuIoKaytuEnginePkgMetadataModelsConfigMetadataTypeBool GithubComKaytuIoKaytuEnginePkgMetadataModelsConfigMetadataType = "bool"

	// GithubComKaytuIoKaytuEnginePkgMetadataModelsConfigMetadataTypeJSON captures enum value "json"
	GithubComKaytuIoKaytuEnginePkgMetadataModelsConfigMetadataTypeJSON GithubComKaytuIoKaytuEnginePkgMetadataModelsConfigMetadataType = "json"
)

// for schema
var githubComKaytuIoKaytuEnginePkgMetadataModelsConfigMetadataTypeEnum []interface{}

func init() {
	var res []GithubComKaytuIoKaytuEnginePkgMetadataModelsConfigMetadataType
	if err := json.Unmarshal([]byte(`["string","int","bool","json"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		githubComKaytuIoKaytuEnginePkgMetadataModelsConfigMetadataTypeEnum = append(githubComKaytuIoKaytuEnginePkgMetadataModelsConfigMetadataTypeEnum, v)
	}
}

func (m GithubComKaytuIoKaytuEnginePkgMetadataModelsConfigMetadataType) validateGithubComKaytuIoKaytuEnginePkgMetadataModelsConfigMetadataTypeEnum(path, location string, value GithubComKaytuIoKaytuEnginePkgMetadataModelsConfigMetadataType) error {
	if err := validate.EnumCase(path, location, value, githubComKaytuIoKaytuEnginePkgMetadataModelsConfigMetadataTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this github com kaytu io kaytu engine pkg metadata models config metadata type
func (m GithubComKaytuIoKaytuEnginePkgMetadataModelsConfigMetadataType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateGithubComKaytuIoKaytuEnginePkgMetadataModelsConfigMetadataTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this github com kaytu io kaytu engine pkg metadata models config metadata type based on context it is used
func (m GithubComKaytuIoKaytuEnginePkgMetadataModelsConfigMetadataType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
