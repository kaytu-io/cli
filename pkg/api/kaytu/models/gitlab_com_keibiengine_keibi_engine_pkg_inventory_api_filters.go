// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GitlabComKeibiengineKeibiEnginePkgInventoryAPIFilters if you provide two values for same filter OR operation would be used if you provide value for two filters AND operation would be used
//
// swagger:model gitlab_com_keibiengine_keibi-engine_pkg_inventory_api.Filters
type GitlabComKeibiengineKeibiEnginePkgInventoryAPIFilters struct {

	// if you dont need to use this filter, leave them empty. (e.g. [])
	Category []string `json:"category"`

	// if you dont need to use this filter, leave them empty. (e.g. [])
	Location []string `json:"location"`

	// if you dont need to use this filter, leave them empty. (e.g. [])
	ResourceType []string `json:"resourceType"`

	// if you dont need to use this filter, leave them empty. (e.g. [])
	Service []string `json:"service"`

	// if you dont need to use this filter, leave them empty. (e.g. [])
	SourceID []string `json:"sourceID"`

	// if you dont need to use this filter, leave them empty. (e.g. {})
	Tags map[string]string `json:"tags,omitempty"`
}

// Validate validates this gitlab com keibiengine keibi engine pkg inventory api filters
func (m *GitlabComKeibiengineKeibiEnginePkgInventoryAPIFilters) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this gitlab com keibiengine keibi engine pkg inventory api filters based on context it is used
func (m *GitlabComKeibiengineKeibiEnginePkgInventoryAPIFilters) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GitlabComKeibiengineKeibiEnginePkgInventoryAPIFilters) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GitlabComKeibiengineKeibiEnginePkgInventoryAPIFilters) UnmarshalBinary(b []byte) error {
	var res GitlabComKeibiengineKeibiEnginePkgInventoryAPIFilters
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
