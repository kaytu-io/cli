// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// GitlabComKeibiengineKeibiEnginePkgAuthAPIInviteStatus gitlab com keibiengine keibi engine pkg auth api invite status
//
// swagger:model gitlab_com_keibiengine_keibi-engine_pkg_auth_api.InviteStatus
type GitlabComKeibiengineKeibiEnginePkgAuthAPIInviteStatus string

func NewGitlabComKeibiengineKeibiEnginePkgAuthAPIInviteStatus(value GitlabComKeibiengineKeibiEnginePkgAuthAPIInviteStatus) *GitlabComKeibiengineKeibiEnginePkgAuthAPIInviteStatus {
	return &value
}

// Pointer returns a pointer to a freshly-allocated GitlabComKeibiengineKeibiEnginePkgAuthAPIInviteStatus.
func (m GitlabComKeibiengineKeibiEnginePkgAuthAPIInviteStatus) Pointer() *GitlabComKeibiengineKeibiEnginePkgAuthAPIInviteStatus {
	return &m
}

const (

	// GitlabComKeibiengineKeibiEnginePkgAuthAPIInviteStatusAccepted captures enum value "accepted"
	GitlabComKeibiengineKeibiEnginePkgAuthAPIInviteStatusAccepted GitlabComKeibiengineKeibiEnginePkgAuthAPIInviteStatus = "accepted"

	// GitlabComKeibiengineKeibiEnginePkgAuthAPIInviteStatusPending captures enum value "pending"
	GitlabComKeibiengineKeibiEnginePkgAuthAPIInviteStatusPending GitlabComKeibiengineKeibiEnginePkgAuthAPIInviteStatus = "pending"
)

// for schema
var gitlabComKeibiengineKeibiEnginePkgAuthApiInviteStatusEnum []interface{}

func init() {
	var res []GitlabComKeibiengineKeibiEnginePkgAuthAPIInviteStatus
	if err := json.Unmarshal([]byte(`["accepted","pending"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		gitlabComKeibiengineKeibiEnginePkgAuthApiInviteStatusEnum = append(gitlabComKeibiengineKeibiEnginePkgAuthApiInviteStatusEnum, v)
	}
}

func (m GitlabComKeibiengineKeibiEnginePkgAuthAPIInviteStatus) validateGitlabComKeibiengineKeibiEnginePkgAuthAPIInviteStatusEnum(path, location string, value GitlabComKeibiengineKeibiEnginePkgAuthAPIInviteStatus) error {
	if err := validate.EnumCase(path, location, value, gitlabComKeibiengineKeibiEnginePkgAuthApiInviteStatusEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this gitlab com keibiengine keibi engine pkg auth api invite status
func (m GitlabComKeibiengineKeibiEnginePkgAuthAPIInviteStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateGitlabComKeibiengineKeibiEnginePkgAuthAPIInviteStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this gitlab com keibiengine keibi engine pkg auth api invite status based on context it is used
func (m GitlabComKeibiengineKeibiEnginePkgAuthAPIInviteStatus) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
