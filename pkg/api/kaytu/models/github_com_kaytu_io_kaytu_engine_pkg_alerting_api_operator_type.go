// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// GithubComKaytuIoKaytuEnginePkgAlertingAPIOperatorType github com kaytu io kaytu engine pkg alerting api operator type
//
// swagger:model github_com_kaytu-io_kaytu-engine_pkg_alerting_api.OperatorType
type GithubComKaytuIoKaytuEnginePkgAlertingAPIOperatorType string

func NewGithubComKaytuIoKaytuEnginePkgAlertingAPIOperatorType(value GithubComKaytuIoKaytuEnginePkgAlertingAPIOperatorType) *GithubComKaytuIoKaytuEnginePkgAlertingAPIOperatorType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated GithubComKaytuIoKaytuEnginePkgAlertingAPIOperatorType.
func (m GithubComKaytuIoKaytuEnginePkgAlertingAPIOperatorType) Pointer() *GithubComKaytuIoKaytuEnginePkgAlertingAPIOperatorType {
	return &m
}

const (

	// GithubComKaytuIoKaytuEnginePkgAlertingAPIOperatorTypeGreaterThan captures enum value "GreaterThan"
	GithubComKaytuIoKaytuEnginePkgAlertingAPIOperatorTypeGreaterThan GithubComKaytuIoKaytuEnginePkgAlertingAPIOperatorType = "GreaterThan"

	// GithubComKaytuIoKaytuEnginePkgAlertingAPIOperatorTypeLessThan captures enum value "LessThan"
	GithubComKaytuIoKaytuEnginePkgAlertingAPIOperatorTypeLessThan GithubComKaytuIoKaytuEnginePkgAlertingAPIOperatorType = "LessThan"

	// GithubComKaytuIoKaytuEnginePkgAlertingAPIOperatorTypeLessThanOrEqual captures enum value "LessThanOrEqual"
	GithubComKaytuIoKaytuEnginePkgAlertingAPIOperatorTypeLessThanOrEqual GithubComKaytuIoKaytuEnginePkgAlertingAPIOperatorType = "LessThanOrEqual"

	// GithubComKaytuIoKaytuEnginePkgAlertingAPIOperatorTypeGreaterThanOrEqual captures enum value "GreaterThanOrEqual"
	GithubComKaytuIoKaytuEnginePkgAlertingAPIOperatorTypeGreaterThanOrEqual GithubComKaytuIoKaytuEnginePkgAlertingAPIOperatorType = "GreaterThanOrEqual"

	// GithubComKaytuIoKaytuEnginePkgAlertingAPIOperatorTypeEqual captures enum value "Equal"
	GithubComKaytuIoKaytuEnginePkgAlertingAPIOperatorTypeEqual GithubComKaytuIoKaytuEnginePkgAlertingAPIOperatorType = "Equal"

	// GithubComKaytuIoKaytuEnginePkgAlertingAPIOperatorTypeDoesNotEqual captures enum value "DoesNotEqual"
	GithubComKaytuIoKaytuEnginePkgAlertingAPIOperatorTypeDoesNotEqual GithubComKaytuIoKaytuEnginePkgAlertingAPIOperatorType = "DoesNotEqual"
)

// for schema
var githubComKaytuIoKaytuEnginePkgAlertingApiOperatorTypeEnum []interface{}

func init() {
	var res []GithubComKaytuIoKaytuEnginePkgAlertingAPIOperatorType
	if err := json.Unmarshal([]byte(`["GreaterThan","LessThan","LessThanOrEqual","GreaterThanOrEqual","Equal","DoesNotEqual"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		githubComKaytuIoKaytuEnginePkgAlertingApiOperatorTypeEnum = append(githubComKaytuIoKaytuEnginePkgAlertingApiOperatorTypeEnum, v)
	}
}

func (m GithubComKaytuIoKaytuEnginePkgAlertingAPIOperatorType) validateGithubComKaytuIoKaytuEnginePkgAlertingAPIOperatorTypeEnum(path, location string, value GithubComKaytuIoKaytuEnginePkgAlertingAPIOperatorType) error {
	if err := validate.EnumCase(path, location, value, githubComKaytuIoKaytuEnginePkgAlertingApiOperatorTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this github com kaytu io kaytu engine pkg alerting api operator type
func (m GithubComKaytuIoKaytuEnginePkgAlertingAPIOperatorType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateGithubComKaytuIoKaytuEnginePkgAlertingAPIOperatorTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this github com kaytu io kaytu engine pkg alerting api operator type based on context it is used
func (m GithubComKaytuIoKaytuEnginePkgAlertingAPIOperatorType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
