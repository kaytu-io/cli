// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GithubComKaytuIoKaytuEnginePkgComplianceAPIFindingSortItem github com kaytu io kaytu engine pkg compliance api finding sort item
//
// swagger:model github_com_kaytu-io_kaytu-engine_pkg_compliance_api.FindingSortItem
type GithubComKaytuIoKaytuEnginePkgComplianceAPIFindingSortItem struct {

	// Sort direction
	// Example: asc
	// Enum: [asc desc]
	Direction GithubComKaytuIoKaytuEnginePkgComplianceAPIDirectionType `json:"direction,omitempty"`

	// Field to sort by
	// Example: status
	// Enum: [resourceID resourceName resourceType serviceName category resourceLocation status describedAt evaluatedAt sourceID connectionProviderID connectionProviderName sourceType benchmarkID policyID policySeverity]
	Field GithubComKaytuIoKaytuEnginePkgComplianceAPISortFieldType `json:"field,omitempty"`
}

// Validate validates this github com kaytu io kaytu engine pkg compliance api finding sort item
func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIFindingSortItem) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDirection(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateField(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var githubComKaytuIoKaytuEnginePkgComplianceApiFindingSortItemTypeDirectionPropEnum []interface{}

func init() {
	var res []GithubComKaytuIoKaytuEnginePkgComplianceAPIDirectionType
	if err := json.Unmarshal([]byte(`["asc","desc"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		githubComKaytuIoKaytuEnginePkgComplianceApiFindingSortItemTypeDirectionPropEnum = append(githubComKaytuIoKaytuEnginePkgComplianceApiFindingSortItemTypeDirectionPropEnum, v)
	}
}

// prop value enum
func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIFindingSortItem) validateDirectionEnum(path, location string, value *struct {
	GithubComKaytuIoKaytuEnginePkgComplianceAPIDirectionType
}) error {
	if err := validate.EnumCase(path, location, value, githubComKaytuIoKaytuEnginePkgComplianceApiFindingSortItemTypeDirectionPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIFindingSortItem) validateDirection(formats strfmt.Registry) error {
	if swag.IsZero(m.Direction) { // not required
		return nil
	}

	return nil
}

var githubComKaytuIoKaytuEnginePkgComplianceApiFindingSortItemTypeFieldPropEnum []interface{}

func init() {
	var res []GithubComKaytuIoKaytuEnginePkgComplianceAPISortFieldType
	if err := json.Unmarshal([]byte(`["resourceID","resourceName","resourceType","serviceName","category","resourceLocation","status","describedAt","evaluatedAt","sourceID","connectionProviderID","connectionProviderName","sourceType","benchmarkID","policyID","policySeverity"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		githubComKaytuIoKaytuEnginePkgComplianceApiFindingSortItemTypeFieldPropEnum = append(githubComKaytuIoKaytuEnginePkgComplianceApiFindingSortItemTypeFieldPropEnum, v)
	}
}

// prop value enum
func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIFindingSortItem) validateFieldEnum(path, location string, value *struct {
	GithubComKaytuIoKaytuEnginePkgComplianceAPISortFieldType
}) error {
	if err := validate.EnumCase(path, location, value, githubComKaytuIoKaytuEnginePkgComplianceApiFindingSortItemTypeFieldPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIFindingSortItem) validateField(formats strfmt.Registry) error {
	if swag.IsZero(m.Field) { // not required
		return nil
	}

	return nil
}

// ContextValidate validate this github com kaytu io kaytu engine pkg compliance api finding sort item based on the context it is used
func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIFindingSortItem) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateDirection(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateField(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIFindingSortItem) contextValidateDirection(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIFindingSortItem) contextValidateField(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

// MarshalBinary interface implementation
func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIFindingSortItem) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIFindingSortItem) UnmarshalBinary(b []byte) error {
	var res GithubComKaytuIoKaytuEnginePkgComplianceAPIFindingSortItem
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
