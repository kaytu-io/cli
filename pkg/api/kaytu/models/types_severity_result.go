// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// TypesSeverityResult types severity result
//
// swagger:model types.SeverityResult
type TypesSeverityResult struct {

	// critical count
	// Example: 1
	CriticalCount int64 `json:"criticalCount,omitempty"`

	// high count
	// Example: 1
	HighCount int64 `json:"highCount,omitempty"`

	// low count
	// Example: 1
	LowCount int64 `json:"lowCount,omitempty"`

	// medium count
	// Example: 1
	MediumCount int64 `json:"mediumCount,omitempty"`

	// passed count
	// Example: 1
	PassedCount int64 `json:"passedCount,omitempty"`

	// unknown count
	// Example: 1
	UnknownCount int64 `json:"unknownCount,omitempty"`
}

// Validate validates this types severity result
func (m *TypesSeverityResult) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this types severity result based on context it is used
func (m *TypesSeverityResult) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TypesSeverityResult) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TypesSeverityResult) UnmarshalBinary(b []byte) error {
	var res TypesSeverityResult
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
