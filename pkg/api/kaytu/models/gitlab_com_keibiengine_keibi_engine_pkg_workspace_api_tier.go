// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// GitlabComKeibiengineKeibiEnginePkgWorkspaceAPITier gitlab com keibiengine keibi engine pkg workspace api tier
//
// swagger:model gitlab_com_keibiengine_keibi-engine_pkg_workspace_api.Tier
type GitlabComKeibiengineKeibiEnginePkgWorkspaceAPITier string

func NewGitlabComKeibiengineKeibiEnginePkgWorkspaceAPITier(value GitlabComKeibiengineKeibiEnginePkgWorkspaceAPITier) *GitlabComKeibiengineKeibiEnginePkgWorkspaceAPITier {
	return &value
}

// Pointer returns a pointer to a freshly-allocated GitlabComKeibiengineKeibiEnginePkgWorkspaceAPITier.
func (m GitlabComKeibiengineKeibiEnginePkgWorkspaceAPITier) Pointer() *GitlabComKeibiengineKeibiEnginePkgWorkspaceAPITier {
	return &m
}

const (

	// GitlabComKeibiengineKeibiEnginePkgWorkspaceAPITierFREE captures enum value "FREE"
	GitlabComKeibiengineKeibiEnginePkgWorkspaceAPITierFREE GitlabComKeibiengineKeibiEnginePkgWorkspaceAPITier = "FREE"

	// GitlabComKeibiengineKeibiEnginePkgWorkspaceAPITierTEAMS captures enum value "TEAMS"
	GitlabComKeibiengineKeibiEnginePkgWorkspaceAPITierTEAMS GitlabComKeibiengineKeibiEnginePkgWorkspaceAPITier = "TEAMS"

	// GitlabComKeibiengineKeibiEnginePkgWorkspaceAPITierENTERPRISE captures enum value "ENTERPRISE"
	GitlabComKeibiengineKeibiEnginePkgWorkspaceAPITierENTERPRISE GitlabComKeibiengineKeibiEnginePkgWorkspaceAPITier = "ENTERPRISE"
)

// for schema
var gitlabComKeibiengineKeibiEnginePkgWorkspaceApiTierEnum []interface{}

func init() {
	var res []GitlabComKeibiengineKeibiEnginePkgWorkspaceAPITier
	if err := json.Unmarshal([]byte(`["FREE","TEAMS","ENTERPRISE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		gitlabComKeibiengineKeibiEnginePkgWorkspaceApiTierEnum = append(gitlabComKeibiengineKeibiEnginePkgWorkspaceApiTierEnum, v)
	}
}

func (m GitlabComKeibiengineKeibiEnginePkgWorkspaceAPITier) validateGitlabComKeibiengineKeibiEnginePkgWorkspaceAPITierEnum(path, location string, value GitlabComKeibiengineKeibiEnginePkgWorkspaceAPITier) error {
	if err := validate.EnumCase(path, location, value, gitlabComKeibiengineKeibiEnginePkgWorkspaceApiTierEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this gitlab com keibiengine keibi engine pkg workspace api tier
func (m GitlabComKeibiengineKeibiEnginePkgWorkspaceAPITier) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateGitlabComKeibiengineKeibiEnginePkgWorkspaceAPITierEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this gitlab com keibiengine keibi engine pkg workspace api tier based on context it is used
func (m GitlabComKeibiengineKeibiEnginePkgWorkspaceAPITier) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
