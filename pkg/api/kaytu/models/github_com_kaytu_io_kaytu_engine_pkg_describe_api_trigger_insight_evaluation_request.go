// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GithubComKaytuIoKaytuEnginePkgDescribeAPITriggerInsightEvaluationRequest github com kaytu io kaytu engine pkg describe api trigger insight evaluation request
//
// swagger:model github_com_kaytu-io_kaytu-engine_pkg_describe_api.TriggerInsightEvaluationRequest
type GithubComKaytuIoKaytuEnginePkgDescribeAPITriggerInsightEvaluationRequest struct {

	// Connection ID to evaluate
	// Example: 8e0f8e7a-1b1c-4e6f-b7e4-9c6af9d2b1c8
	ConnectionID string `json:"connectionID,omitempty"`

	// Insight ID to evaluate
	// Example: 1
	InsightID int64 `json:"insightID,omitempty"`

	// Resource IDs to evaluate
	// Example: ["/subscriptions/123/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1"]
	ResourceIDs []string `json:"resourceIDs"`
}

// Validate validates this github com kaytu io kaytu engine pkg describe api trigger insight evaluation request
func (m *GithubComKaytuIoKaytuEnginePkgDescribeAPITriggerInsightEvaluationRequest) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this github com kaytu io kaytu engine pkg describe api trigger insight evaluation request based on context it is used
func (m *GithubComKaytuIoKaytuEnginePkgDescribeAPITriggerInsightEvaluationRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GithubComKaytuIoKaytuEnginePkgDescribeAPITriggerInsightEvaluationRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GithubComKaytuIoKaytuEnginePkgDescribeAPITriggerInsightEvaluationRequest) UnmarshalBinary(b []byte) error {
	var res GithubComKaytuIoKaytuEnginePkgDescribeAPITriggerInsightEvaluationRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
