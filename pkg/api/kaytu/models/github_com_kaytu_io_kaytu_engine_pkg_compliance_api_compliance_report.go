// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GithubComKaytuIoKaytuEnginePkgComplianceAPIComplianceReport github com kaytu io kaytu engine pkg compliance api compliance report
//
// swagger:model github_com_kaytu-io_kaytu-engine_pkg_compliance_api.ComplianceReport
type GithubComKaytuIoKaytuEnginePkgComplianceAPIComplianceReport struct {

	// failure message
	FailureMessage string `json:"failureMessage,omitempty"`

	// id
	// Example: 1
	ID int64 `json:"id,omitempty"`

	// report created at
	// Example: 1619510400
	ReportCreatedAt int64 `json:"reportCreatedAt,omitempty"`

	// status
	// Example: InProgress
	Status GithubComKaytuIoKaytuEnginePkgComplianceAPIComplianceReportJobStatus `json:"status,omitempty"`

	// updated at
	// Example: 2021-01-01T00:00:00Z
	UpdatedAt string `json:"updatedAt,omitempty"`
}

// Validate validates this github com kaytu io kaytu engine pkg compliance api compliance report
func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIComplianceReport) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIComplianceReport) validateStatus(formats strfmt.Registry) error {
	if swag.IsZero(m.Status) { // not required
		return nil
	}

	return nil
}

// ContextValidate validate this github com kaytu io kaytu engine pkg compliance api compliance report based on the context it is used
func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIComplianceReport) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateStatus(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIComplianceReport) contextValidateStatus(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

// MarshalBinary interface implementation
func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIComplianceReport) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIComplianceReport) UnmarshalBinary(b []byte) error {
	var res GithubComKaytuIoKaytuEnginePkgComplianceAPIComplianceReport
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
