// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GithubComKaytuIoKaytuEnginePkgInventoryAPIListCostCompositionResponse github com kaytu io kaytu engine pkg inventory api list cost composition response
//
// swagger:model github_com_kaytu-io_kaytu-engine_pkg_inventory_api.ListCostCompositionResponse
type GithubComKaytuIoKaytuEnginePkgInventoryAPIListCostCompositionResponse struct {

	// others
	// Example: 100
	// Minimum: 0
	Others *float64 `json:"others,omitempty"`

	// top values
	TopValues map[string]float64 `json:"top_values,omitempty"`

	// total cost value
	// Example: 1000
	// Minimum: 0
	TotalCostValue *float64 `json:"total_cost_value,omitempty"`

	// total count
	// Example: 10
	// Minimum: 0
	TotalCount *int64 `json:"total_count,omitempty"`
}

// Validate validates this github com kaytu io kaytu engine pkg inventory api list cost composition response
func (m *GithubComKaytuIoKaytuEnginePkgInventoryAPIListCostCompositionResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOthers(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTotalCostValue(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTotalCount(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GithubComKaytuIoKaytuEnginePkgInventoryAPIListCostCompositionResponse) validateOthers(formats strfmt.Registry) error {
	if swag.IsZero(m.Others) { // not required
		return nil
	}

	if err := validate.Minimum("others", "body", *m.Others, 0, false); err != nil {
		return err
	}

	return nil
}

func (m *GithubComKaytuIoKaytuEnginePkgInventoryAPIListCostCompositionResponse) validateTotalCostValue(formats strfmt.Registry) error {
	if swag.IsZero(m.TotalCostValue) { // not required
		return nil
	}

	if err := validate.Minimum("total_cost_value", "body", *m.TotalCostValue, 0, false); err != nil {
		return err
	}

	return nil
}

func (m *GithubComKaytuIoKaytuEnginePkgInventoryAPIListCostCompositionResponse) validateTotalCount(formats strfmt.Registry) error {
	if swag.IsZero(m.TotalCount) { // not required
		return nil
	}

	if err := validate.MinimumInt("total_count", "body", *m.TotalCount, 0, false); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this github com kaytu io kaytu engine pkg inventory api list cost composition response based on context it is used
func (m *GithubComKaytuIoKaytuEnginePkgInventoryAPIListCostCompositionResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GithubComKaytuIoKaytuEnginePkgInventoryAPIListCostCompositionResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GithubComKaytuIoKaytuEnginePkgInventoryAPIListCostCompositionResponse) UnmarshalBinary(b []byte) error {
	var res GithubComKaytuIoKaytuEnginePkgInventoryAPIListCostCompositionResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
