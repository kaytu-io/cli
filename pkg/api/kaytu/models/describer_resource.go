// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DescriberResource describer resource
//
// swagger:model describer.Resource
type DescriberResource struct {

	// account
	Account string `json:"account,omitempty"`

	// ARN uniquely identifies an AWS resource across regions, accounts and types.
	Arn string `json:"arn,omitempty"`

	// description
	Description interface{} `json:"description,omitempty"`

	// ID doesn't uniquely identifies a resource. It will be used to create a
	// unique identifier by concating PARTITION|REGION|ACCOUNT|TYPE|ID
	ID string `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// partition
	Partition string `json:"partition,omitempty"`

	// region
	Region string `json:"region,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this describer resource
func (m *DescriberResource) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this describer resource based on context it is used
func (m *DescriberResource) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DescriberResource) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DescriberResource) UnmarshalBinary(b []byte) error {
	var res DescriberResource
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
