// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GithubComKaytuIoKaytuEnginePkgComplianceAPIControl github com kaytu io kaytu engine pkg compliance api control
//
// swagger:model github_com_kaytu-io_kaytu-engine_pkg_compliance_api.Control
type GithubComKaytuIoKaytuEnginePkgComplianceAPIControl struct {

	// connector
	// Example: Azure
	Connector SourceType `json:"connector,omitempty"`

	// created at
	// Example: 2020-01-01T00:00:00Z
	CreatedAt string `json:"createdAt,omitempty"`

	// description
	// Example: Enable multi-factor authentication for all user credentials who have write access to Azure resources. These include roles like 'Service Co-Administrators', 'Subscription Owners', 'Contributors'.
	Description string `json:"description,omitempty"`

	// document URI
	// Example: benchmarks/azure_cis_v140_1_1.md
	DocumentURI string `json:"documentURI,omitempty"`

	// enabled
	// Example: true
	Enabled bool `json:"enabled,omitempty"`

	// explanation
	// Example: Multi-factor authentication adds an additional layer of security by requiring users to enter a code from a mobile device or phone in addition to their username and password when signing into Azure.
	Explanation string `json:"explanation,omitempty"`

	// id
	// Example: azure_cis_v140_1_1
	ID string `json:"id,omitempty"`

	// managed
	// Example: true
	Managed bool `json:"managed,omitempty"`

	// manual verification
	// Example: true
	ManualVerification bool `json:"manualVerification,omitempty"`

	// non compliance cost
	// Example: Non-compliance to this control could result in several costs including...
	NonComplianceCost string `json:"nonComplianceCost,omitempty"`

	// query
	Query *GithubComKaytuIoKaytuEnginePkgComplianceAPIQuery `json:"query,omitempty"`

	// severity
	// Example: low
	Severity TypesFindingSeverity `json:"severity,omitempty"`

	// tags
	Tags map[string][]string `json:"tags,omitempty"`

	// title
	// Example: 1.1 Ensure that multi-factor authentication status is enabled for all privileged users
	Title string `json:"title,omitempty"`

	// updated at
	// Example: 2020-01-01T00:00:00Z
	UpdatedAt string `json:"updatedAt,omitempty"`

	// useful example
	// Example: Access to resources must be closely controlled to prevent malicious activity like data theft...
	UsefulExample string `json:"usefulExample,omitempty"`
}

// Validate validates this github com kaytu io kaytu engine pkg compliance api control
func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIControl) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateConnector(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateQuery(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSeverity(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIControl) validateConnector(formats strfmt.Registry) error {
	if swag.IsZero(m.Connector) { // not required
		return nil
	}

	return nil
}

func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIControl) validateQuery(formats strfmt.Registry) error {
	if swag.IsZero(m.Query) { // not required
		return nil
	}

	if m.Query != nil {
		if err := m.Query.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("query")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("query")
			}
			return err
		}
	}

	return nil
}

func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIControl) validateSeverity(formats strfmt.Registry) error {
	if swag.IsZero(m.Severity) { // not required
		return nil
	}

	return nil
}

// ContextValidate validate this github com kaytu io kaytu engine pkg compliance api control based on the context it is used
func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIControl) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateConnector(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateQuery(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateSeverity(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIControl) contextValidateConnector(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIControl) contextValidateQuery(ctx context.Context, formats strfmt.Registry) error {

	if m.Query != nil {

		if swag.IsZero(m.Query) { // not required
			return nil
		}

		if err := m.Query.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("query")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("query")
			}
			return err
		}
	}

	return nil
}

func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIControl) contextValidateSeverity(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

// MarshalBinary interface implementation
func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIControl) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GithubComKaytuIoKaytuEnginePkgComplianceAPIControl) UnmarshalBinary(b []byte) error {
	var res GithubComKaytuIoKaytuEnginePkgComplianceAPIControl
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
