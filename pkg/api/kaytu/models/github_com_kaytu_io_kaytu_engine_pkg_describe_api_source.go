// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GithubComKaytuIoKaytuEnginePkgDescribeAPISource github com kaytu io kaytu engine pkg describe api source
//
// swagger:model github_com_kaytu-io_kaytu-engine_pkg_describe_api.Source
type GithubComKaytuIoKaytuEnginePkgDescribeAPISource struct {

	// account Id
	// Example: 123456789012
	AccountID string `json:"accountId,omitempty"`

	// id
	// Example: 8e0f8e7a-1b1c-4e6f-b7e4-9c6af9d2b1c8
	ID string `json:"id,omitempty"`

	// last compliance report at
	// Example: 2021-01-01T00:00:00Z
	LastComplianceReportAt string `json:"lastComplianceReportAt,omitempty"`

	// last describe job status
	// Example: COMPLETED
	LastDescribeJobStatus string `json:"lastDescribeJobStatus,omitempty"`

	// last described at
	// Example: 2021-01-01T00:00:00Z
	LastDescribedAt string `json:"lastDescribedAt,omitempty"`

	// type
	// Example: Azure
	Type SourceType `json:"type,omitempty"`
}

// Validate validates this github com kaytu io kaytu engine pkg describe api source
func (m *GithubComKaytuIoKaytuEnginePkgDescribeAPISource) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GithubComKaytuIoKaytuEnginePkgDescribeAPISource) validateType(formats strfmt.Registry) error {
	if swag.IsZero(m.Type) { // not required
		return nil
	}

	return nil
}

// ContextValidate validate this github com kaytu io kaytu engine pkg describe api source based on the context it is used
func (m *GithubComKaytuIoKaytuEnginePkgDescribeAPISource) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateType(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GithubComKaytuIoKaytuEnginePkgDescribeAPISource) contextValidateType(ctx context.Context, formats strfmt.Registry) error {

	return nil
}

// MarshalBinary interface implementation
func (m *GithubComKaytuIoKaytuEnginePkgDescribeAPISource) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GithubComKaytuIoKaytuEnginePkgDescribeAPISource) UnmarshalBinary(b []byte) error {
	var res GithubComKaytuIoKaytuEnginePkgDescribeAPISource
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
