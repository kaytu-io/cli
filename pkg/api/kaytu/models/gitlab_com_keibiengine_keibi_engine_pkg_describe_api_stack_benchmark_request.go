// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GitlabComKeibiengineKeibiEnginePkgDescribeAPIStackBenchmarkRequest gitlab com keibiengine keibi engine pkg describe api stack benchmark request
//
// swagger:model gitlab_com_keibiengine_keibi-engine_pkg_describe_api.StackBenchmarkRequest
type GitlabComKeibiengineKeibiEnginePkgDescribeAPIStackBenchmarkRequest struct {

	// benchmarks
	// Required: true
	Benchmarks []string `json:"benchmarks"`

	// stack Id
	// Required: true
	StackID *string `json:"stackId"`
}

// Validate validates this gitlab com keibiengine keibi engine pkg describe api stack benchmark request
func (m *GitlabComKeibiengineKeibiEnginePkgDescribeAPIStackBenchmarkRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBenchmarks(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStackID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GitlabComKeibiengineKeibiEnginePkgDescribeAPIStackBenchmarkRequest) validateBenchmarks(formats strfmt.Registry) error {

	if err := validate.Required("benchmarks", "body", m.Benchmarks); err != nil {
		return err
	}

	return nil
}

func (m *GitlabComKeibiengineKeibiEnginePkgDescribeAPIStackBenchmarkRequest) validateStackID(formats strfmt.Registry) error {

	if err := validate.Required("stackId", "body", m.StackID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this gitlab com keibiengine keibi engine pkg describe api stack benchmark request based on context it is used
func (m *GitlabComKeibiengineKeibiEnginePkgDescribeAPIStackBenchmarkRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GitlabComKeibiengineKeibiEnginePkgDescribeAPIStackBenchmarkRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GitlabComKeibiengineKeibiEnginePkgDescribeAPIStackBenchmarkRequest) UnmarshalBinary(b []byte) error {
	var res GitlabComKeibiengineKeibiEnginePkgDescribeAPIStackBenchmarkRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
