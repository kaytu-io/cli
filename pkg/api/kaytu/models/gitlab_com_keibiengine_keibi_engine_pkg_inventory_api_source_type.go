// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// GitlabComKeibiengineKeibiEnginePkgInventoryAPISourceType gitlab com keibiengine keibi engine pkg inventory api source type
//
// swagger:model gitlab_com_keibiengine_keibi-engine_pkg_inventory_api.SourceType
type GitlabComKeibiengineKeibiEnginePkgInventoryAPISourceType string

func NewGitlabComKeibiengineKeibiEnginePkgInventoryAPISourceType(value GitlabComKeibiengineKeibiEnginePkgInventoryAPISourceType) *GitlabComKeibiengineKeibiEnginePkgInventoryAPISourceType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated GitlabComKeibiengineKeibiEnginePkgInventoryAPISourceType.
func (m GitlabComKeibiengineKeibiEnginePkgInventoryAPISourceType) Pointer() *GitlabComKeibiengineKeibiEnginePkgInventoryAPISourceType {
	return &m
}

const (

	// GitlabComKeibiengineKeibiEnginePkgInventoryAPISourceTypeAWS captures enum value "AWS"
	GitlabComKeibiengineKeibiEnginePkgInventoryAPISourceTypeAWS GitlabComKeibiengineKeibiEnginePkgInventoryAPISourceType = "AWS"

	// GitlabComKeibiengineKeibiEnginePkgInventoryAPISourceTypeAzure captures enum value "Azure"
	GitlabComKeibiengineKeibiEnginePkgInventoryAPISourceTypeAzure GitlabComKeibiengineKeibiEnginePkgInventoryAPISourceType = "Azure"
)

// for schema
var gitlabComKeibiengineKeibiEnginePkgInventoryApiSourceTypeEnum []interface{}

func init() {
	var res []GitlabComKeibiengineKeibiEnginePkgInventoryAPISourceType
	if err := json.Unmarshal([]byte(`["AWS","Azure"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		gitlabComKeibiengineKeibiEnginePkgInventoryApiSourceTypeEnum = append(gitlabComKeibiengineKeibiEnginePkgInventoryApiSourceTypeEnum, v)
	}
}

func (m GitlabComKeibiengineKeibiEnginePkgInventoryAPISourceType) validateGitlabComKeibiengineKeibiEnginePkgInventoryAPISourceTypeEnum(path, location string, value GitlabComKeibiengineKeibiEnginePkgInventoryAPISourceType) error {
	if err := validate.EnumCase(path, location, value, gitlabComKeibiengineKeibiEnginePkgInventoryApiSourceTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this gitlab com keibiengine keibi engine pkg inventory api source type
func (m GitlabComKeibiengineKeibiEnginePkgInventoryAPISourceType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateGitlabComKeibiengineKeibiEnginePkgInventoryAPISourceTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this gitlab com keibiengine keibi engine pkg inventory api source type based on context it is used
func (m GitlabComKeibiengineKeibiEnginePkgInventoryAPISourceType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
