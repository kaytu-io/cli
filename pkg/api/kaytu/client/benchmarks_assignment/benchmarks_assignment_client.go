// Code generated by go-swagger; DO NOT EDIT.

package benchmarks_assignment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new benchmarks assignment API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for benchmarks assignment API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteComplianceAPIV1AssignmentsBenchmarkIDConnectionConnectionID(params *DeleteComplianceAPIV1AssignmentsBenchmarkIDConnectionConnectionIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeleteComplianceAPIV1AssignmentsBenchmarkIDConnectionConnectionIDOK, error)

	GetComplianceAPIV1AssignmentsBenchmarkBenchmarkID(params *GetComplianceAPIV1AssignmentsBenchmarkBenchmarkIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetComplianceAPIV1AssignmentsBenchmarkBenchmarkIDOK, error)

	PostComplianceAPIV1AssignmentsBenchmarkIDConnectionConnectionID(params *PostComplianceAPIV1AssignmentsBenchmarkIDConnectionConnectionIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PostComplianceAPIV1AssignmentsBenchmarkIDConnectionConnectionIDOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
DeleteComplianceAPIV1AssignmentsBenchmarkIDConnectionConnectionID deletes benchmark assignment for inventory service

Delete benchmark assignment with source id and benchmark id
*/
func (a *Client) DeleteComplianceAPIV1AssignmentsBenchmarkIDConnectionConnectionID(params *DeleteComplianceAPIV1AssignmentsBenchmarkIDConnectionConnectionIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeleteComplianceAPIV1AssignmentsBenchmarkIDConnectionConnectionIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteComplianceAPIV1AssignmentsBenchmarkIDConnectionConnectionIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "DeleteComplianceAPIV1AssignmentsBenchmarkIDConnectionConnectionID",
		Method:             "DELETE",
		PathPattern:        "/compliance/api/v1/assignments/{benchmark_id}/connection/{connection_id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteComplianceAPIV1AssignmentsBenchmarkIDConnectionConnectionIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteComplianceAPIV1AssignmentsBenchmarkIDConnectionConnectionIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteComplianceAPIV1AssignmentsBenchmarkIDConnectionConnectionID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetComplianceAPIV1AssignmentsBenchmarkBenchmarkID gets all benchmark assigned sources with benchmark id

Returns all benchmark assigned sources with benchmark id
*/
func (a *Client) GetComplianceAPIV1AssignmentsBenchmarkBenchmarkID(params *GetComplianceAPIV1AssignmentsBenchmarkBenchmarkIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetComplianceAPIV1AssignmentsBenchmarkBenchmarkIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetComplianceAPIV1AssignmentsBenchmarkBenchmarkIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetComplianceAPIV1AssignmentsBenchmarkBenchmarkID",
		Method:             "GET",
		PathPattern:        "/compliance/api/v1/assignments/benchmark/{benchmark_id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetComplianceAPIV1AssignmentsBenchmarkBenchmarkIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetComplianceAPIV1AssignmentsBenchmarkBenchmarkIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetComplianceAPIV1AssignmentsBenchmarkBenchmarkID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
PostComplianceAPIV1AssignmentsBenchmarkIDConnectionConnectionID creates benchmark assignment for inventory service

Returns benchmark assignment which insert
*/
func (a *Client) PostComplianceAPIV1AssignmentsBenchmarkIDConnectionConnectionID(params *PostComplianceAPIV1AssignmentsBenchmarkIDConnectionConnectionIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PostComplianceAPIV1AssignmentsBenchmarkIDConnectionConnectionIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostComplianceAPIV1AssignmentsBenchmarkIDConnectionConnectionIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "PostComplianceAPIV1AssignmentsBenchmarkIDConnectionConnectionID",
		Method:             "POST",
		PathPattern:        "/compliance/api/v1/assignments/{benchmark_id}/connection/{connection_id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostComplianceAPIV1AssignmentsBenchmarkIDConnectionConnectionIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostComplianceAPIV1AssignmentsBenchmarkIDConnectionConnectionIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostComplianceAPIV1AssignmentsBenchmarkIDConnectionConnectionID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
