// Code generated by go-swagger; DO NOT EDIT.

package compliance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams creates a new GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams() *GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams {
	return &GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetComplianceAPIV1BenchmarksBenchmarkIDSummaryParamsWithTimeout creates a new GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams object
// with the ability to set a timeout on a request.
func NewGetComplianceAPIV1BenchmarksBenchmarkIDSummaryParamsWithTimeout(timeout time.Duration) *GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams {
	return &GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams{
		timeout: timeout,
	}
}

// NewGetComplianceAPIV1BenchmarksBenchmarkIDSummaryParamsWithContext creates a new GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams object
// with the ability to set a context for a request.
func NewGetComplianceAPIV1BenchmarksBenchmarkIDSummaryParamsWithContext(ctx context.Context) *GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams {
	return &GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams{
		Context: ctx,
	}
}

// NewGetComplianceAPIV1BenchmarksBenchmarkIDSummaryParamsWithHTTPClient creates a new GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetComplianceAPIV1BenchmarksBenchmarkIDSummaryParamsWithHTTPClient(client *http.Client) *GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams {
	return &GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams{
		HTTPClient: client,
	}
}

/*
GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams contains all the parameters to send to the API endpoint

	for the get compliance API v1 benchmarks benchmark ID summary operation.

	Typically these are written to a http.Request.
*/
type GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams struct {

	/* BenchmarkID.

	   Benchmark ID
	*/
	BenchmarkID string

	/* ConnectionGroup.

	   Connection groups to filter by
	*/
	ConnectionGroup []string

	/* ConnectionID.

	   Connection IDs to filter by
	*/
	ConnectionID []string

	/* Connector.

	   Connector type to filter by
	*/
	Connector []string

	/* ResourceCollection.

	   Resource collection IDs to filter by
	*/
	ResourceCollection []string

	/* TimeAt.

	   timestamp for values in epoch seconds
	*/
	TimeAt *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get compliance API v1 benchmarks benchmark ID summary params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams) WithDefaults() *GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get compliance API v1 benchmarks benchmark ID summary params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get compliance API v1 benchmarks benchmark ID summary params
func (o *GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams) WithTimeout(timeout time.Duration) *GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get compliance API v1 benchmarks benchmark ID summary params
func (o *GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get compliance API v1 benchmarks benchmark ID summary params
func (o *GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams) WithContext(ctx context.Context) *GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get compliance API v1 benchmarks benchmark ID summary params
func (o *GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get compliance API v1 benchmarks benchmark ID summary params
func (o *GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams) WithHTTPClient(client *http.Client) *GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get compliance API v1 benchmarks benchmark ID summary params
func (o *GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBenchmarkID adds the benchmarkID to the get compliance API v1 benchmarks benchmark ID summary params
func (o *GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams) WithBenchmarkID(benchmarkID string) *GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams {
	o.SetBenchmarkID(benchmarkID)
	return o
}

// SetBenchmarkID adds the benchmarkId to the get compliance API v1 benchmarks benchmark ID summary params
func (o *GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams) SetBenchmarkID(benchmarkID string) {
	o.BenchmarkID = benchmarkID
}

// WithConnectionGroup adds the connectionGroup to the get compliance API v1 benchmarks benchmark ID summary params
func (o *GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams) WithConnectionGroup(connectionGroup []string) *GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams {
	o.SetConnectionGroup(connectionGroup)
	return o
}

// SetConnectionGroup adds the connectionGroup to the get compliance API v1 benchmarks benchmark ID summary params
func (o *GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams) SetConnectionGroup(connectionGroup []string) {
	o.ConnectionGroup = connectionGroup
}

// WithConnectionID adds the connectionID to the get compliance API v1 benchmarks benchmark ID summary params
func (o *GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams) WithConnectionID(connectionID []string) *GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams {
	o.SetConnectionID(connectionID)
	return o
}

// SetConnectionID adds the connectionId to the get compliance API v1 benchmarks benchmark ID summary params
func (o *GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams) SetConnectionID(connectionID []string) {
	o.ConnectionID = connectionID
}

// WithConnector adds the connector to the get compliance API v1 benchmarks benchmark ID summary params
func (o *GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams) WithConnector(connector []string) *GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams {
	o.SetConnector(connector)
	return o
}

// SetConnector adds the connector to the get compliance API v1 benchmarks benchmark ID summary params
func (o *GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams) SetConnector(connector []string) {
	o.Connector = connector
}

// WithResourceCollection adds the resourceCollection to the get compliance API v1 benchmarks benchmark ID summary params
func (o *GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams) WithResourceCollection(resourceCollection []string) *GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams {
	o.SetResourceCollection(resourceCollection)
	return o
}

// SetResourceCollection adds the resourceCollection to the get compliance API v1 benchmarks benchmark ID summary params
func (o *GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams) SetResourceCollection(resourceCollection []string) {
	o.ResourceCollection = resourceCollection
}

// WithTimeAt adds the timeAt to the get compliance API v1 benchmarks benchmark ID summary params
func (o *GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams) WithTimeAt(timeAt *int64) *GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams {
	o.SetTimeAt(timeAt)
	return o
}

// SetTimeAt adds the timeAt to the get compliance API v1 benchmarks benchmark ID summary params
func (o *GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams) SetTimeAt(timeAt *int64) {
	o.TimeAt = timeAt
}

// WriteToRequest writes these params to a swagger request
func (o *GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param benchmark_id
	if err := r.SetPathParam("benchmark_id", o.BenchmarkID); err != nil {
		return err
	}

	if o.ConnectionGroup != nil {

		// binding items for connectionGroup
		joinedConnectionGroup := o.bindParamConnectionGroup(reg)

		// query array param connectionGroup
		if err := r.SetQueryParam("connectionGroup", joinedConnectionGroup...); err != nil {
			return err
		}
	}

	if o.ConnectionID != nil {

		// binding items for connectionId
		joinedConnectionID := o.bindParamConnectionID(reg)

		// query array param connectionId
		if err := r.SetQueryParam("connectionId", joinedConnectionID...); err != nil {
			return err
		}
	}

	if o.Connector != nil {

		// binding items for connector
		joinedConnector := o.bindParamConnector(reg)

		// query array param connector
		if err := r.SetQueryParam("connector", joinedConnector...); err != nil {
			return err
		}
	}

	if o.ResourceCollection != nil {

		// binding items for resourceCollection
		joinedResourceCollection := o.bindParamResourceCollection(reg)

		// query array param resourceCollection
		if err := r.SetQueryParam("resourceCollection", joinedResourceCollection...); err != nil {
			return err
		}
	}

	if o.TimeAt != nil {

		// query param timeAt
		var qrTimeAt int64

		if o.TimeAt != nil {
			qrTimeAt = *o.TimeAt
		}
		qTimeAt := swag.FormatInt64(qrTimeAt)
		if qTimeAt != "" {

			if err := r.SetQueryParam("timeAt", qTimeAt); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetComplianceAPIV1BenchmarksBenchmarkIDSummary binds the parameter connectionGroup
func (o *GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams) bindParamConnectionGroup(formats strfmt.Registry) []string {
	connectionGroupIR := o.ConnectionGroup

	var connectionGroupIC []string
	for _, connectionGroupIIR := range connectionGroupIR { // explode []string

		connectionGroupIIV := connectionGroupIIR // string as string
		connectionGroupIC = append(connectionGroupIC, connectionGroupIIV)
	}

	// items.CollectionFormat: "csv"
	connectionGroupIS := swag.JoinByFormat(connectionGroupIC, "csv")

	return connectionGroupIS
}

// bindParamGetComplianceAPIV1BenchmarksBenchmarkIDSummary binds the parameter connectionId
func (o *GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams) bindParamConnectionID(formats strfmt.Registry) []string {
	connectionIDIR := o.ConnectionID

	var connectionIDIC []string
	for _, connectionIDIIR := range connectionIDIR { // explode []string

		connectionIDIIV := connectionIDIIR // string as string
		connectionIDIC = append(connectionIDIC, connectionIDIIV)
	}

	// items.CollectionFormat: "csv"
	connectionIDIS := swag.JoinByFormat(connectionIDIC, "csv")

	return connectionIDIS
}

// bindParamGetComplianceAPIV1BenchmarksBenchmarkIDSummary binds the parameter connector
func (o *GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams) bindParamConnector(formats strfmt.Registry) []string {
	connectorIR := o.Connector

	var connectorIC []string
	for _, connectorIIR := range connectorIR { // explode []string

		connectorIIV := connectorIIR // string as string
		connectorIC = append(connectorIC, connectorIIV)
	}

	// items.CollectionFormat: "csv"
	connectorIS := swag.JoinByFormat(connectorIC, "csv")

	return connectorIS
}

// bindParamGetComplianceAPIV1BenchmarksBenchmarkIDSummary binds the parameter resourceCollection
func (o *GetComplianceAPIV1BenchmarksBenchmarkIDSummaryParams) bindParamResourceCollection(formats strfmt.Registry) []string {
	resourceCollectionIR := o.ResourceCollection

	var resourceCollectionIC []string
	for _, resourceCollectionIIR := range resourceCollectionIR { // explode []string

		resourceCollectionIIV := resourceCollectionIIR // string as string
		resourceCollectionIC = append(resourceCollectionIC, resourceCollectionIIV)
	}

	// items.CollectionFormat: "csv"
	resourceCollectionIS := swag.JoinByFormat(resourceCollectionIC, "csv")

	return resourceCollectionIS
}
