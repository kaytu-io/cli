// Code generated by go-swagger; DO NOT EDIT.

package compliance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetComplianceAPIV1FindingsBenchmarkIDServicesParams creates a new GetComplianceAPIV1FindingsBenchmarkIDServicesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetComplianceAPIV1FindingsBenchmarkIDServicesParams() *GetComplianceAPIV1FindingsBenchmarkIDServicesParams {
	return &GetComplianceAPIV1FindingsBenchmarkIDServicesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetComplianceAPIV1FindingsBenchmarkIDServicesParamsWithTimeout creates a new GetComplianceAPIV1FindingsBenchmarkIDServicesParams object
// with the ability to set a timeout on a request.
func NewGetComplianceAPIV1FindingsBenchmarkIDServicesParamsWithTimeout(timeout time.Duration) *GetComplianceAPIV1FindingsBenchmarkIDServicesParams {
	return &GetComplianceAPIV1FindingsBenchmarkIDServicesParams{
		timeout: timeout,
	}
}

// NewGetComplianceAPIV1FindingsBenchmarkIDServicesParamsWithContext creates a new GetComplianceAPIV1FindingsBenchmarkIDServicesParams object
// with the ability to set a context for a request.
func NewGetComplianceAPIV1FindingsBenchmarkIDServicesParamsWithContext(ctx context.Context) *GetComplianceAPIV1FindingsBenchmarkIDServicesParams {
	return &GetComplianceAPIV1FindingsBenchmarkIDServicesParams{
		Context: ctx,
	}
}

// NewGetComplianceAPIV1FindingsBenchmarkIDServicesParamsWithHTTPClient creates a new GetComplianceAPIV1FindingsBenchmarkIDServicesParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetComplianceAPIV1FindingsBenchmarkIDServicesParamsWithHTTPClient(client *http.Client) *GetComplianceAPIV1FindingsBenchmarkIDServicesParams {
	return &GetComplianceAPIV1FindingsBenchmarkIDServicesParams{
		HTTPClient: client,
	}
}

/*
GetComplianceAPIV1FindingsBenchmarkIDServicesParams contains all the parameters to send to the API endpoint

	for the get compliance API v1 findings benchmark ID services operation.

	Typically these are written to a http.Request.
*/
type GetComplianceAPIV1FindingsBenchmarkIDServicesParams struct {

	/* BenchmarkID.

	   BenchmarkID
	*/
	BenchmarkID string

	/* ConnectionGroup.

	   Connection groups to filter by
	*/
	ConnectionGroup []string

	/* ConnectionID.

	   Connection IDs to filter by
	*/
	ConnectionID []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get compliance API v1 findings benchmark ID services params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetComplianceAPIV1FindingsBenchmarkIDServicesParams) WithDefaults() *GetComplianceAPIV1FindingsBenchmarkIDServicesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get compliance API v1 findings benchmark ID services params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetComplianceAPIV1FindingsBenchmarkIDServicesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get compliance API v1 findings benchmark ID services params
func (o *GetComplianceAPIV1FindingsBenchmarkIDServicesParams) WithTimeout(timeout time.Duration) *GetComplianceAPIV1FindingsBenchmarkIDServicesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get compliance API v1 findings benchmark ID services params
func (o *GetComplianceAPIV1FindingsBenchmarkIDServicesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get compliance API v1 findings benchmark ID services params
func (o *GetComplianceAPIV1FindingsBenchmarkIDServicesParams) WithContext(ctx context.Context) *GetComplianceAPIV1FindingsBenchmarkIDServicesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get compliance API v1 findings benchmark ID services params
func (o *GetComplianceAPIV1FindingsBenchmarkIDServicesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get compliance API v1 findings benchmark ID services params
func (o *GetComplianceAPIV1FindingsBenchmarkIDServicesParams) WithHTTPClient(client *http.Client) *GetComplianceAPIV1FindingsBenchmarkIDServicesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get compliance API v1 findings benchmark ID services params
func (o *GetComplianceAPIV1FindingsBenchmarkIDServicesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBenchmarkID adds the benchmarkID to the get compliance API v1 findings benchmark ID services params
func (o *GetComplianceAPIV1FindingsBenchmarkIDServicesParams) WithBenchmarkID(benchmarkID string) *GetComplianceAPIV1FindingsBenchmarkIDServicesParams {
	o.SetBenchmarkID(benchmarkID)
	return o
}

// SetBenchmarkID adds the benchmarkId to the get compliance API v1 findings benchmark ID services params
func (o *GetComplianceAPIV1FindingsBenchmarkIDServicesParams) SetBenchmarkID(benchmarkID string) {
	o.BenchmarkID = benchmarkID
}

// WithConnectionGroup adds the connectionGroup to the get compliance API v1 findings benchmark ID services params
func (o *GetComplianceAPIV1FindingsBenchmarkIDServicesParams) WithConnectionGroup(connectionGroup []string) *GetComplianceAPIV1FindingsBenchmarkIDServicesParams {
	o.SetConnectionGroup(connectionGroup)
	return o
}

// SetConnectionGroup adds the connectionGroup to the get compliance API v1 findings benchmark ID services params
func (o *GetComplianceAPIV1FindingsBenchmarkIDServicesParams) SetConnectionGroup(connectionGroup []string) {
	o.ConnectionGroup = connectionGroup
}

// WithConnectionID adds the connectionID to the get compliance API v1 findings benchmark ID services params
func (o *GetComplianceAPIV1FindingsBenchmarkIDServicesParams) WithConnectionID(connectionID []string) *GetComplianceAPIV1FindingsBenchmarkIDServicesParams {
	o.SetConnectionID(connectionID)
	return o
}

// SetConnectionID adds the connectionId to the get compliance API v1 findings benchmark ID services params
func (o *GetComplianceAPIV1FindingsBenchmarkIDServicesParams) SetConnectionID(connectionID []string) {
	o.ConnectionID = connectionID
}

// WriteToRequest writes these params to a swagger request
func (o *GetComplianceAPIV1FindingsBenchmarkIDServicesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param benchmarkId
	if err := r.SetPathParam("benchmarkId", o.BenchmarkID); err != nil {
		return err
	}

	if o.ConnectionGroup != nil {

		// binding items for connectionGroup
		joinedConnectionGroup := o.bindParamConnectionGroup(reg)

		// query array param connectionGroup
		if err := r.SetQueryParam("connectionGroup", joinedConnectionGroup...); err != nil {
			return err
		}
	}

	if o.ConnectionID != nil {

		// binding items for connectionId
		joinedConnectionID := o.bindParamConnectionID(reg)

		// query array param connectionId
		if err := r.SetQueryParam("connectionId", joinedConnectionID...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetComplianceAPIV1FindingsBenchmarkIDServices binds the parameter connectionGroup
func (o *GetComplianceAPIV1FindingsBenchmarkIDServicesParams) bindParamConnectionGroup(formats strfmt.Registry) []string {
	connectionGroupIR := o.ConnectionGroup

	var connectionGroupIC []string
	for _, connectionGroupIIR := range connectionGroupIR { // explode []string

		connectionGroupIIV := connectionGroupIIR // string as string
		connectionGroupIC = append(connectionGroupIC, connectionGroupIIV)
	}

	// items.CollectionFormat: "csv"
	connectionGroupIS := swag.JoinByFormat(connectionGroupIC, "csv")

	return connectionGroupIS
}

// bindParamGetComplianceAPIV1FindingsBenchmarkIDServices binds the parameter connectionId
func (o *GetComplianceAPIV1FindingsBenchmarkIDServicesParams) bindParamConnectionID(formats strfmt.Registry) []string {
	connectionIDIR := o.ConnectionID

	var connectionIDIC []string
	for _, connectionIDIIR := range connectionIDIR { // explode []string

		connectionIDIIV := connectionIDIIR // string as string
		connectionIDIC = append(connectionIDIC, connectionIDIIV)
	}

	// items.CollectionFormat: "csv"
	connectionIDIS := swag.JoinByFormat(connectionIDIC, "csv")

	return connectionIDIS
}
