// Code generated by go-swagger; DO NOT EDIT.

package compliance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPostComplianceAPIV1AiControlControlIDRemediationParams creates a new PostComplianceAPIV1AiControlControlIDRemediationParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostComplianceAPIV1AiControlControlIDRemediationParams() *PostComplianceAPIV1AiControlControlIDRemediationParams {
	return &PostComplianceAPIV1AiControlControlIDRemediationParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostComplianceAPIV1AiControlControlIDRemediationParamsWithTimeout creates a new PostComplianceAPIV1AiControlControlIDRemediationParams object
// with the ability to set a timeout on a request.
func NewPostComplianceAPIV1AiControlControlIDRemediationParamsWithTimeout(timeout time.Duration) *PostComplianceAPIV1AiControlControlIDRemediationParams {
	return &PostComplianceAPIV1AiControlControlIDRemediationParams{
		timeout: timeout,
	}
}

// NewPostComplianceAPIV1AiControlControlIDRemediationParamsWithContext creates a new PostComplianceAPIV1AiControlControlIDRemediationParams object
// with the ability to set a context for a request.
func NewPostComplianceAPIV1AiControlControlIDRemediationParamsWithContext(ctx context.Context) *PostComplianceAPIV1AiControlControlIDRemediationParams {
	return &PostComplianceAPIV1AiControlControlIDRemediationParams{
		Context: ctx,
	}
}

// NewPostComplianceAPIV1AiControlControlIDRemediationParamsWithHTTPClient creates a new PostComplianceAPIV1AiControlControlIDRemediationParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostComplianceAPIV1AiControlControlIDRemediationParamsWithHTTPClient(client *http.Client) *PostComplianceAPIV1AiControlControlIDRemediationParams {
	return &PostComplianceAPIV1AiControlControlIDRemediationParams{
		HTTPClient: client,
	}
}

/*
PostComplianceAPIV1AiControlControlIDRemediationParams contains all the parameters to send to the API endpoint

	for the post compliance API v1 ai control control ID remediation operation.

	Typically these are written to a http.Request.
*/
type PostComplianceAPIV1AiControlControlIDRemediationParams struct {

	/* ControlID.

	   ControlID
	*/
	ControlID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post compliance API v1 ai control control ID remediation params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostComplianceAPIV1AiControlControlIDRemediationParams) WithDefaults() *PostComplianceAPIV1AiControlControlIDRemediationParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post compliance API v1 ai control control ID remediation params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostComplianceAPIV1AiControlControlIDRemediationParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the post compliance API v1 ai control control ID remediation params
func (o *PostComplianceAPIV1AiControlControlIDRemediationParams) WithTimeout(timeout time.Duration) *PostComplianceAPIV1AiControlControlIDRemediationParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post compliance API v1 ai control control ID remediation params
func (o *PostComplianceAPIV1AiControlControlIDRemediationParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post compliance API v1 ai control control ID remediation params
func (o *PostComplianceAPIV1AiControlControlIDRemediationParams) WithContext(ctx context.Context) *PostComplianceAPIV1AiControlControlIDRemediationParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post compliance API v1 ai control control ID remediation params
func (o *PostComplianceAPIV1AiControlControlIDRemediationParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post compliance API v1 ai control control ID remediation params
func (o *PostComplianceAPIV1AiControlControlIDRemediationParams) WithHTTPClient(client *http.Client) *PostComplianceAPIV1AiControlControlIDRemediationParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post compliance API v1 ai control control ID remediation params
func (o *PostComplianceAPIV1AiControlControlIDRemediationParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithControlID adds the controlID to the post compliance API v1 ai control control ID remediation params
func (o *PostComplianceAPIV1AiControlControlIDRemediationParams) WithControlID(controlID string) *PostComplianceAPIV1AiControlControlIDRemediationParams {
	o.SetControlID(controlID)
	return o
}

// SetControlID adds the controlId to the post compliance API v1 ai control control ID remediation params
func (o *PostComplianceAPIV1AiControlControlIDRemediationParams) SetControlID(controlID string) {
	o.ControlID = controlID
}

// WriteToRequest writes these params to a swagger request
func (o *PostComplianceAPIV1AiControlControlIDRemediationParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param controlID
	if err := r.SetPathParam("controlID", o.ControlID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
