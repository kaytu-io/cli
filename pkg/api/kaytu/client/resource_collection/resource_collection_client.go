// Code generated by go-swagger; DO NOT EDIT.

package resource_collection

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new resource collection API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for resource collection API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	GetInventoryAPIV2MetadataResourceCollection(params *GetInventoryAPIV2MetadataResourceCollectionParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetInventoryAPIV2MetadataResourceCollectionOK, error)

	GetInventoryAPIV2MetadataResourceCollectionResourceCollectionID(params *GetInventoryAPIV2MetadataResourceCollectionResourceCollectionIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetInventoryAPIV2MetadataResourceCollectionResourceCollectionIDOK, error)

	GetInventoryAPIV2ResourceCollection(params *GetInventoryAPIV2ResourceCollectionParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetInventoryAPIV2ResourceCollectionOK, error)

	GetInventoryAPIV2ResourceCollectionResourceCollectionID(params *GetInventoryAPIV2ResourceCollectionResourceCollectionIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetInventoryAPIV2ResourceCollectionResourceCollectionIDOK, error)

	GetInventoryAPIV2ResourceCollectionResourceCollectionIDLandscape(params *GetInventoryAPIV2ResourceCollectionResourceCollectionIDLandscapeParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetInventoryAPIV2ResourceCollectionResourceCollectionIDLandscapeOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
GetInventoryAPIV2MetadataResourceCollection lists resource collections

Retrieving list of resource collections by specified filters
*/
func (a *Client) GetInventoryAPIV2MetadataResourceCollection(params *GetInventoryAPIV2MetadataResourceCollectionParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetInventoryAPIV2MetadataResourceCollectionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetInventoryAPIV2MetadataResourceCollectionParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetInventoryAPIV2MetadataResourceCollection",
		Method:             "GET",
		PathPattern:        "/inventory/api/v2/metadata/resource-collection",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetInventoryAPIV2MetadataResourceCollectionReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetInventoryAPIV2MetadataResourceCollectionOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetInventoryAPIV2MetadataResourceCollection: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetInventoryAPIV2MetadataResourceCollectionResourceCollectionID gets resource collection

Retrieving resource collection by specified ID
*/
func (a *Client) GetInventoryAPIV2MetadataResourceCollectionResourceCollectionID(params *GetInventoryAPIV2MetadataResourceCollectionResourceCollectionIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetInventoryAPIV2MetadataResourceCollectionResourceCollectionIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetInventoryAPIV2MetadataResourceCollectionResourceCollectionIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetInventoryAPIV2MetadataResourceCollectionResourceCollectionID",
		Method:             "GET",
		PathPattern:        "/inventory/api/v2/metadata/resource-collection/{resourceCollectionId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetInventoryAPIV2MetadataResourceCollectionResourceCollectionIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetInventoryAPIV2MetadataResourceCollectionResourceCollectionIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetInventoryAPIV2MetadataResourceCollectionResourceCollectionID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetInventoryAPIV2ResourceCollection lists resource collections with inventory data

Retrieving list of resource collections by specified filters with inventory data
*/
func (a *Client) GetInventoryAPIV2ResourceCollection(params *GetInventoryAPIV2ResourceCollectionParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetInventoryAPIV2ResourceCollectionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetInventoryAPIV2ResourceCollectionParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetInventoryAPIV2ResourceCollection",
		Method:             "GET",
		PathPattern:        "/inventory/api/v2/resource-collection",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetInventoryAPIV2ResourceCollectionReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetInventoryAPIV2ResourceCollectionOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetInventoryAPIV2ResourceCollection: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetInventoryAPIV2ResourceCollectionResourceCollectionID gets resource collection with inventory data

Retrieving resource collection by specified ID with inventory data
*/
func (a *Client) GetInventoryAPIV2ResourceCollectionResourceCollectionID(params *GetInventoryAPIV2ResourceCollectionResourceCollectionIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetInventoryAPIV2ResourceCollectionResourceCollectionIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetInventoryAPIV2ResourceCollectionResourceCollectionIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetInventoryAPIV2ResourceCollectionResourceCollectionID",
		Method:             "GET",
		PathPattern:        "/inventory/api/v2/resource-collection/{resourceCollectionId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetInventoryAPIV2ResourceCollectionResourceCollectionIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetInventoryAPIV2ResourceCollectionResourceCollectionIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetInventoryAPIV2ResourceCollectionResourceCollectionID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetInventoryAPIV2ResourceCollectionResourceCollectionIDLandscape gets resource collection landscape

Retrieving resource collection landscape by specified ID
*/
func (a *Client) GetInventoryAPIV2ResourceCollectionResourceCollectionIDLandscape(params *GetInventoryAPIV2ResourceCollectionResourceCollectionIDLandscapeParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetInventoryAPIV2ResourceCollectionResourceCollectionIDLandscapeOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetInventoryAPIV2ResourceCollectionResourceCollectionIDLandscapeParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetInventoryAPIV2ResourceCollectionResourceCollectionIDLandscape",
		Method:             "GET",
		PathPattern:        "/inventory/api/v2/resource-collection/{resourceCollectionId}/landscape",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetInventoryAPIV2ResourceCollectionResourceCollectionIDLandscapeReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetInventoryAPIV2ResourceCollectionResourceCollectionIDLandscapeOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetInventoryAPIV2ResourceCollectionResourceCollectionIDLandscape: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
