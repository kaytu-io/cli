// Code generated by go-swagger; DO NOT EDIT.

package insights

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetComplianceAPIV1InsightGroupParams creates a new GetComplianceAPIV1InsightGroupParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetComplianceAPIV1InsightGroupParams() *GetComplianceAPIV1InsightGroupParams {
	return &GetComplianceAPIV1InsightGroupParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetComplianceAPIV1InsightGroupParamsWithTimeout creates a new GetComplianceAPIV1InsightGroupParams object
// with the ability to set a timeout on a request.
func NewGetComplianceAPIV1InsightGroupParamsWithTimeout(timeout time.Duration) *GetComplianceAPIV1InsightGroupParams {
	return &GetComplianceAPIV1InsightGroupParams{
		timeout: timeout,
	}
}

// NewGetComplianceAPIV1InsightGroupParamsWithContext creates a new GetComplianceAPIV1InsightGroupParams object
// with the ability to set a context for a request.
func NewGetComplianceAPIV1InsightGroupParamsWithContext(ctx context.Context) *GetComplianceAPIV1InsightGroupParams {
	return &GetComplianceAPIV1InsightGroupParams{
		Context: ctx,
	}
}

// NewGetComplianceAPIV1InsightGroupParamsWithHTTPClient creates a new GetComplianceAPIV1InsightGroupParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetComplianceAPIV1InsightGroupParamsWithHTTPClient(client *http.Client) *GetComplianceAPIV1InsightGroupParams {
	return &GetComplianceAPIV1InsightGroupParams{
		HTTPClient: client,
	}
}

/*
GetComplianceAPIV1InsightGroupParams contains all the parameters to send to the API endpoint

	for the get compliance API v1 insight group operation.

	Typically these are written to a http.Request.
*/
type GetComplianceAPIV1InsightGroupParams struct {

	/* ConnectionID.

	   filter the result by source id
	*/
	ConnectionID []string

	/* Connector.

	   filter insights by connector
	*/
	Connector []string

	/* EndTime.

	   unix seconds for the end time of the trend
	*/
	EndTime *int64

	/* StartTime.

	   unix seconds for the start time of the trend
	*/
	StartTime *int64

	/* Tag.

	   Key-Value tags in key=value format to filter by
	*/
	Tag []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get compliance API v1 insight group params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetComplianceAPIV1InsightGroupParams) WithDefaults() *GetComplianceAPIV1InsightGroupParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get compliance API v1 insight group params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetComplianceAPIV1InsightGroupParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get compliance API v1 insight group params
func (o *GetComplianceAPIV1InsightGroupParams) WithTimeout(timeout time.Duration) *GetComplianceAPIV1InsightGroupParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get compliance API v1 insight group params
func (o *GetComplianceAPIV1InsightGroupParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get compliance API v1 insight group params
func (o *GetComplianceAPIV1InsightGroupParams) WithContext(ctx context.Context) *GetComplianceAPIV1InsightGroupParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get compliance API v1 insight group params
func (o *GetComplianceAPIV1InsightGroupParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get compliance API v1 insight group params
func (o *GetComplianceAPIV1InsightGroupParams) WithHTTPClient(client *http.Client) *GetComplianceAPIV1InsightGroupParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get compliance API v1 insight group params
func (o *GetComplianceAPIV1InsightGroupParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithConnectionID adds the connectionID to the get compliance API v1 insight group params
func (o *GetComplianceAPIV1InsightGroupParams) WithConnectionID(connectionID []string) *GetComplianceAPIV1InsightGroupParams {
	o.SetConnectionID(connectionID)
	return o
}

// SetConnectionID adds the connectionId to the get compliance API v1 insight group params
func (o *GetComplianceAPIV1InsightGroupParams) SetConnectionID(connectionID []string) {
	o.ConnectionID = connectionID
}

// WithConnector adds the connector to the get compliance API v1 insight group params
func (o *GetComplianceAPIV1InsightGroupParams) WithConnector(connector []string) *GetComplianceAPIV1InsightGroupParams {
	o.SetConnector(connector)
	return o
}

// SetConnector adds the connector to the get compliance API v1 insight group params
func (o *GetComplianceAPIV1InsightGroupParams) SetConnector(connector []string) {
	o.Connector = connector
}

// WithEndTime adds the endTime to the get compliance API v1 insight group params
func (o *GetComplianceAPIV1InsightGroupParams) WithEndTime(endTime *int64) *GetComplianceAPIV1InsightGroupParams {
	o.SetEndTime(endTime)
	return o
}

// SetEndTime adds the endTime to the get compliance API v1 insight group params
func (o *GetComplianceAPIV1InsightGroupParams) SetEndTime(endTime *int64) {
	o.EndTime = endTime
}

// WithStartTime adds the startTime to the get compliance API v1 insight group params
func (o *GetComplianceAPIV1InsightGroupParams) WithStartTime(startTime *int64) *GetComplianceAPIV1InsightGroupParams {
	o.SetStartTime(startTime)
	return o
}

// SetStartTime adds the startTime to the get compliance API v1 insight group params
func (o *GetComplianceAPIV1InsightGroupParams) SetStartTime(startTime *int64) {
	o.StartTime = startTime
}

// WithTag adds the tag to the get compliance API v1 insight group params
func (o *GetComplianceAPIV1InsightGroupParams) WithTag(tag []string) *GetComplianceAPIV1InsightGroupParams {
	o.SetTag(tag)
	return o
}

// SetTag adds the tag to the get compliance API v1 insight group params
func (o *GetComplianceAPIV1InsightGroupParams) SetTag(tag []string) {
	o.Tag = tag
}

// WriteToRequest writes these params to a swagger request
func (o *GetComplianceAPIV1InsightGroupParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ConnectionID != nil {

		// binding items for connectionId
		joinedConnectionID := o.bindParamConnectionID(reg)

		// query array param connectionId
		if err := r.SetQueryParam("connectionId", joinedConnectionID...); err != nil {
			return err
		}
	}

	if o.Connector != nil {

		// binding items for connector
		joinedConnector := o.bindParamConnector(reg)

		// query array param connector
		if err := r.SetQueryParam("connector", joinedConnector...); err != nil {
			return err
		}
	}

	if o.EndTime != nil {

		// query param endTime
		var qrEndTime int64

		if o.EndTime != nil {
			qrEndTime = *o.EndTime
		}
		qEndTime := swag.FormatInt64(qrEndTime)
		if qEndTime != "" {

			if err := r.SetQueryParam("endTime", qEndTime); err != nil {
				return err
			}
		}
	}

	if o.StartTime != nil {

		// query param startTime
		var qrStartTime int64

		if o.StartTime != nil {
			qrStartTime = *o.StartTime
		}
		qStartTime := swag.FormatInt64(qrStartTime)
		if qStartTime != "" {

			if err := r.SetQueryParam("startTime", qStartTime); err != nil {
				return err
			}
		}
	}

	if o.Tag != nil {

		// binding items for tag
		joinedTag := o.bindParamTag(reg)

		// query array param tag
		if err := r.SetQueryParam("tag", joinedTag...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetComplianceAPIV1InsightGroup binds the parameter connectionId
func (o *GetComplianceAPIV1InsightGroupParams) bindParamConnectionID(formats strfmt.Registry) []string {
	connectionIDIR := o.ConnectionID

	var connectionIDIC []string
	for _, connectionIDIIR := range connectionIDIR { // explode []string

		connectionIDIIV := connectionIDIIR // string as string
		connectionIDIC = append(connectionIDIC, connectionIDIIV)
	}

	// items.CollectionFormat: "csv"
	connectionIDIS := swag.JoinByFormat(connectionIDIC, "csv")

	return connectionIDIS
}

// bindParamGetComplianceAPIV1InsightGroup binds the parameter connector
func (o *GetComplianceAPIV1InsightGroupParams) bindParamConnector(formats strfmt.Registry) []string {
	connectorIR := o.Connector

	var connectorIC []string
	for _, connectorIIR := range connectorIR { // explode []string

		connectorIIV := connectorIIR // string as string
		connectorIC = append(connectorIC, connectorIIV)
	}

	// items.CollectionFormat: "csv"
	connectorIS := swag.JoinByFormat(connectorIC, "csv")

	return connectorIS
}

// bindParamGetComplianceAPIV1InsightGroup binds the parameter tag
func (o *GetComplianceAPIV1InsightGroupParams) bindParamTag(formats strfmt.Registry) []string {
	tagIR := o.Tag

	var tagIC []string
	for _, tagIIR := range tagIR { // explode []string

		tagIIV := tagIIR // string as string
		tagIC = append(tagIC, tagIIV)
	}

	// items.CollectionFormat: "csv"
	tagIS := swag.JoinByFormat(tagIC, "csv")

	return tagIS
}
