// Code generated by go-swagger; DO NOT EDIT.

package insights

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetComplianceAPIV1MetadataInsightParams creates a new GetComplianceAPIV1MetadataInsightParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetComplianceAPIV1MetadataInsightParams() *GetComplianceAPIV1MetadataInsightParams {
	return &GetComplianceAPIV1MetadataInsightParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetComplianceAPIV1MetadataInsightParamsWithTimeout creates a new GetComplianceAPIV1MetadataInsightParams object
// with the ability to set a timeout on a request.
func NewGetComplianceAPIV1MetadataInsightParamsWithTimeout(timeout time.Duration) *GetComplianceAPIV1MetadataInsightParams {
	return &GetComplianceAPIV1MetadataInsightParams{
		timeout: timeout,
	}
}

// NewGetComplianceAPIV1MetadataInsightParamsWithContext creates a new GetComplianceAPIV1MetadataInsightParams object
// with the ability to set a context for a request.
func NewGetComplianceAPIV1MetadataInsightParamsWithContext(ctx context.Context) *GetComplianceAPIV1MetadataInsightParams {
	return &GetComplianceAPIV1MetadataInsightParams{
		Context: ctx,
	}
}

// NewGetComplianceAPIV1MetadataInsightParamsWithHTTPClient creates a new GetComplianceAPIV1MetadataInsightParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetComplianceAPIV1MetadataInsightParamsWithHTTPClient(client *http.Client) *GetComplianceAPIV1MetadataInsightParams {
	return &GetComplianceAPIV1MetadataInsightParams{
		HTTPClient: client,
	}
}

/*
GetComplianceAPIV1MetadataInsightParams contains all the parameters to send to the API endpoint

	for the get compliance API v1 metadata insight operation.

	Typically these are written to a http.Request.
*/
type GetComplianceAPIV1MetadataInsightParams struct {

	/* Connector.

	   filter by connector
	*/
	Connector []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get compliance API v1 metadata insight params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetComplianceAPIV1MetadataInsightParams) WithDefaults() *GetComplianceAPIV1MetadataInsightParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get compliance API v1 metadata insight params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetComplianceAPIV1MetadataInsightParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get compliance API v1 metadata insight params
func (o *GetComplianceAPIV1MetadataInsightParams) WithTimeout(timeout time.Duration) *GetComplianceAPIV1MetadataInsightParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get compliance API v1 metadata insight params
func (o *GetComplianceAPIV1MetadataInsightParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get compliance API v1 metadata insight params
func (o *GetComplianceAPIV1MetadataInsightParams) WithContext(ctx context.Context) *GetComplianceAPIV1MetadataInsightParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get compliance API v1 metadata insight params
func (o *GetComplianceAPIV1MetadataInsightParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get compliance API v1 metadata insight params
func (o *GetComplianceAPIV1MetadataInsightParams) WithHTTPClient(client *http.Client) *GetComplianceAPIV1MetadataInsightParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get compliance API v1 metadata insight params
func (o *GetComplianceAPIV1MetadataInsightParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithConnector adds the connector to the get compliance API v1 metadata insight params
func (o *GetComplianceAPIV1MetadataInsightParams) WithConnector(connector []string) *GetComplianceAPIV1MetadataInsightParams {
	o.SetConnector(connector)
	return o
}

// SetConnector adds the connector to the get compliance API v1 metadata insight params
func (o *GetComplianceAPIV1MetadataInsightParams) SetConnector(connector []string) {
	o.Connector = connector
}

// WriteToRequest writes these params to a swagger request
func (o *GetComplianceAPIV1MetadataInsightParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Connector != nil {

		// binding items for connector
		joinedConnector := o.bindParamConnector(reg)

		// query array param connector
		if err := r.SetQueryParam("connector", joinedConnector...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetComplianceAPIV1MetadataInsight binds the parameter connector
func (o *GetComplianceAPIV1MetadataInsightParams) bindParamConnector(formats strfmt.Registry) []string {
	connectorIR := o.Connector

	var connectorIC []string
	for _, connectorIIR := range connectorIR { // explode []string

		connectorIIV := connectorIIR // string as string
		connectorIC = append(connectorIC, connectorIIV)
	}

	// items.CollectionFormat: "csv"
	connectorIS := swag.JoinByFormat(connectorIC, "csv")

	return connectorIS
}
