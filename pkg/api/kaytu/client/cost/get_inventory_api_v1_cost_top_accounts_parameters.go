// Code generated by go-swagger; DO NOT EDIT.

package cost

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetInventoryAPIV1CostTopAccountsParams creates a new GetInventoryAPIV1CostTopAccountsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetInventoryAPIV1CostTopAccountsParams() *GetInventoryAPIV1CostTopAccountsParams {
	return &GetInventoryAPIV1CostTopAccountsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetInventoryAPIV1CostTopAccountsParamsWithTimeout creates a new GetInventoryAPIV1CostTopAccountsParams object
// with the ability to set a timeout on a request.
func NewGetInventoryAPIV1CostTopAccountsParamsWithTimeout(timeout time.Duration) *GetInventoryAPIV1CostTopAccountsParams {
	return &GetInventoryAPIV1CostTopAccountsParams{
		timeout: timeout,
	}
}

// NewGetInventoryAPIV1CostTopAccountsParamsWithContext creates a new GetInventoryAPIV1CostTopAccountsParams object
// with the ability to set a context for a request.
func NewGetInventoryAPIV1CostTopAccountsParamsWithContext(ctx context.Context) *GetInventoryAPIV1CostTopAccountsParams {
	return &GetInventoryAPIV1CostTopAccountsParams{
		Context: ctx,
	}
}

// NewGetInventoryAPIV1CostTopAccountsParamsWithHTTPClient creates a new GetInventoryAPIV1CostTopAccountsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetInventoryAPIV1CostTopAccountsParamsWithHTTPClient(client *http.Client) *GetInventoryAPIV1CostTopAccountsParams {
	return &GetInventoryAPIV1CostTopAccountsParams{
		HTTPClient: client,
	}
}

/*
GetInventoryAPIV1CostTopAccountsParams contains all the parameters to send to the API endpoint

	for the get inventory API v1 cost top accounts operation.

	Typically these are written to a http.Request.
*/
type GetInventoryAPIV1CostTopAccountsParams struct {

	/* Count.

	   Number of top accounts returning.
	*/
	Count int64

	/* Provider.

	   Provider
	*/
	Provider string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get inventory API v1 cost top accounts params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInventoryAPIV1CostTopAccountsParams) WithDefaults() *GetInventoryAPIV1CostTopAccountsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get inventory API v1 cost top accounts params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInventoryAPIV1CostTopAccountsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get inventory API v1 cost top accounts params
func (o *GetInventoryAPIV1CostTopAccountsParams) WithTimeout(timeout time.Duration) *GetInventoryAPIV1CostTopAccountsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get inventory API v1 cost top accounts params
func (o *GetInventoryAPIV1CostTopAccountsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get inventory API v1 cost top accounts params
func (o *GetInventoryAPIV1CostTopAccountsParams) WithContext(ctx context.Context) *GetInventoryAPIV1CostTopAccountsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get inventory API v1 cost top accounts params
func (o *GetInventoryAPIV1CostTopAccountsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get inventory API v1 cost top accounts params
func (o *GetInventoryAPIV1CostTopAccountsParams) WithHTTPClient(client *http.Client) *GetInventoryAPIV1CostTopAccountsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get inventory API v1 cost top accounts params
func (o *GetInventoryAPIV1CostTopAccountsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCount adds the count to the get inventory API v1 cost top accounts params
func (o *GetInventoryAPIV1CostTopAccountsParams) WithCount(count int64) *GetInventoryAPIV1CostTopAccountsParams {
	o.SetCount(count)
	return o
}

// SetCount adds the count to the get inventory API v1 cost top accounts params
func (o *GetInventoryAPIV1CostTopAccountsParams) SetCount(count int64) {
	o.Count = count
}

// WithProvider adds the provider to the get inventory API v1 cost top accounts params
func (o *GetInventoryAPIV1CostTopAccountsParams) WithProvider(provider string) *GetInventoryAPIV1CostTopAccountsParams {
	o.SetProvider(provider)
	return o
}

// SetProvider adds the provider to the get inventory API v1 cost top accounts params
func (o *GetInventoryAPIV1CostTopAccountsParams) SetProvider(provider string) {
	o.Provider = provider
}

// WriteToRequest writes these params to a swagger request
func (o *GetInventoryAPIV1CostTopAccountsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param count
	qrCount := o.Count
	qCount := swag.FormatInt64(qrCount)
	if qCount != "" {

		if err := r.SetQueryParam("count", qCount); err != nil {
			return err
		}
	}

	// query param provider
	qrProvider := o.Provider
	qProvider := qrProvider
	if qProvider != "" {

		if err := r.SetQueryParam("provider", qProvider); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
