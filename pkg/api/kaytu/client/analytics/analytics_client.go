// Code generated by go-swagger; DO NOT EDIT.

package analytics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new analytics API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for analytics API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	GetInventoryAPIV2AnalyticsCategories(params *GetInventoryAPIV2AnalyticsCategoriesParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetInventoryAPIV2AnalyticsCategoriesOK, error)

	GetInventoryAPIV2AnalyticsCompositionKey(params *GetInventoryAPIV2AnalyticsCompositionKeyParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetInventoryAPIV2AnalyticsCompositionKeyOK, error)

	GetInventoryAPIV2AnalyticsMetric(params *GetInventoryAPIV2AnalyticsMetricParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetInventoryAPIV2AnalyticsMetricOK, error)

	GetInventoryAPIV2AnalyticsRegionsSummary(params *GetInventoryAPIV2AnalyticsRegionsSummaryParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetInventoryAPIV2AnalyticsRegionsSummaryOK, error)

	GetInventoryAPIV2AnalyticsTag(params *GetInventoryAPIV2AnalyticsTagParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetInventoryAPIV2AnalyticsTagOK, error)

	GetInventoryAPIV2AnalyticsTrend(params *GetInventoryAPIV2AnalyticsTrendParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetInventoryAPIV2AnalyticsTrendOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
GetInventoryAPIV2AnalyticsCategories lists analytics categories

Returns list of categories for analytics summary
*/
func (a *Client) GetInventoryAPIV2AnalyticsCategories(params *GetInventoryAPIV2AnalyticsCategoriesParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetInventoryAPIV2AnalyticsCategoriesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetInventoryAPIV2AnalyticsCategoriesParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetInventoryAPIV2AnalyticsCategories",
		Method:             "GET",
		PathPattern:        "/inventory/api/v2/analytics/categories",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetInventoryAPIV2AnalyticsCategoriesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetInventoryAPIV2AnalyticsCategoriesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetInventoryAPIV2AnalyticsCategories: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetInventoryAPIV2AnalyticsCompositionKey lists analytics composition

This API allows users to retrieve tag values with the most resources for the given key.
*/
func (a *Client) GetInventoryAPIV2AnalyticsCompositionKey(params *GetInventoryAPIV2AnalyticsCompositionKeyParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetInventoryAPIV2AnalyticsCompositionKeyOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetInventoryAPIV2AnalyticsCompositionKeyParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetInventoryAPIV2AnalyticsCompositionKey",
		Method:             "GET",
		PathPattern:        "/inventory/api/v2/analytics/composition/{key}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetInventoryAPIV2AnalyticsCompositionKeyReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetInventoryAPIV2AnalyticsCompositionKeyOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetInventoryAPIV2AnalyticsCompositionKey: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetInventoryAPIV2AnalyticsMetric lists analytics metrics

Get list of analytics with metrics of each type based on the given input filters.
*/
func (a *Client) GetInventoryAPIV2AnalyticsMetric(params *GetInventoryAPIV2AnalyticsMetricParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetInventoryAPIV2AnalyticsMetricOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetInventoryAPIV2AnalyticsMetricParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetInventoryAPIV2AnalyticsMetric",
		Method:             "GET",
		PathPattern:        "/inventory/api/v2/analytics/metric",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetInventoryAPIV2AnalyticsMetricReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetInventoryAPIV2AnalyticsMetricOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetInventoryAPIV2AnalyticsMetric: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetInventoryAPIV2AnalyticsRegionsSummary lists regions summary

Returns list of regions analytics summary
*/
func (a *Client) GetInventoryAPIV2AnalyticsRegionsSummary(params *GetInventoryAPIV2AnalyticsRegionsSummaryParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetInventoryAPIV2AnalyticsRegionsSummaryOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetInventoryAPIV2AnalyticsRegionsSummaryParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetInventoryAPIV2AnalyticsRegionsSummary",
		Method:             "GET",
		PathPattern:        "/inventory/api/v2/analytics/regions/summary",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetInventoryAPIV2AnalyticsRegionsSummaryReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetInventoryAPIV2AnalyticsRegionsSummaryOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetInventoryAPIV2AnalyticsRegionsSummary: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetInventoryAPIV2AnalyticsTag lists analytics tags

This API allows users to retrieve a list of tag keys with their possible values for all analytic metrics.
*/
func (a *Client) GetInventoryAPIV2AnalyticsTag(params *GetInventoryAPIV2AnalyticsTagParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetInventoryAPIV2AnalyticsTagOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetInventoryAPIV2AnalyticsTagParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetInventoryAPIV2AnalyticsTag",
		Method:             "GET",
		PathPattern:        "/inventory/api/v2/analytics/tag",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetInventoryAPIV2AnalyticsTagReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetInventoryAPIV2AnalyticsTagOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetInventoryAPIV2AnalyticsTag: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetInventoryAPIV2AnalyticsTrend gets metric trend

This API allows users to retrieve a list of resource counts over the course of the specified time frame based on the given input filters
*/
func (a *Client) GetInventoryAPIV2AnalyticsTrend(params *GetInventoryAPIV2AnalyticsTrendParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetInventoryAPIV2AnalyticsTrendOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetInventoryAPIV2AnalyticsTrendParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetInventoryAPIV2AnalyticsTrend",
		Method:             "GET",
		PathPattern:        "/inventory/api/v2/analytics/trend",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetInventoryAPIV2AnalyticsTrendReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetInventoryAPIV2AnalyticsTrendOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetInventoryAPIV2AnalyticsTrend: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
