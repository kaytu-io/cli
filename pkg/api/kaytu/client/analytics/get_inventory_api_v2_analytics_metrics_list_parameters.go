// Code generated by go-swagger; DO NOT EDIT.

package analytics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetInventoryAPIV2AnalyticsMetricsListParams creates a new GetInventoryAPIV2AnalyticsMetricsListParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetInventoryAPIV2AnalyticsMetricsListParams() *GetInventoryAPIV2AnalyticsMetricsListParams {
	return &GetInventoryAPIV2AnalyticsMetricsListParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetInventoryAPIV2AnalyticsMetricsListParamsWithTimeout creates a new GetInventoryAPIV2AnalyticsMetricsListParams object
// with the ability to set a timeout on a request.
func NewGetInventoryAPIV2AnalyticsMetricsListParamsWithTimeout(timeout time.Duration) *GetInventoryAPIV2AnalyticsMetricsListParams {
	return &GetInventoryAPIV2AnalyticsMetricsListParams{
		timeout: timeout,
	}
}

// NewGetInventoryAPIV2AnalyticsMetricsListParamsWithContext creates a new GetInventoryAPIV2AnalyticsMetricsListParams object
// with the ability to set a context for a request.
func NewGetInventoryAPIV2AnalyticsMetricsListParamsWithContext(ctx context.Context) *GetInventoryAPIV2AnalyticsMetricsListParams {
	return &GetInventoryAPIV2AnalyticsMetricsListParams{
		Context: ctx,
	}
}

// NewGetInventoryAPIV2AnalyticsMetricsListParamsWithHTTPClient creates a new GetInventoryAPIV2AnalyticsMetricsListParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetInventoryAPIV2AnalyticsMetricsListParamsWithHTTPClient(client *http.Client) *GetInventoryAPIV2AnalyticsMetricsListParams {
	return &GetInventoryAPIV2AnalyticsMetricsListParams{
		HTTPClient: client,
	}
}

/*
GetInventoryAPIV2AnalyticsMetricsListParams contains all the parameters to send to the API endpoint

	for the get inventory API v2 analytics metrics list operation.

	Typically these are written to a http.Request.
*/
type GetInventoryAPIV2AnalyticsMetricsListParams struct {

	/* Connector.

	   Connector type to filter by
	*/
	Connector []string

	/* MetricType.

	   Metric type, default: assets
	*/
	MetricType *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get inventory API v2 analytics metrics list params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInventoryAPIV2AnalyticsMetricsListParams) WithDefaults() *GetInventoryAPIV2AnalyticsMetricsListParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get inventory API v2 analytics metrics list params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInventoryAPIV2AnalyticsMetricsListParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get inventory API v2 analytics metrics list params
func (o *GetInventoryAPIV2AnalyticsMetricsListParams) WithTimeout(timeout time.Duration) *GetInventoryAPIV2AnalyticsMetricsListParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get inventory API v2 analytics metrics list params
func (o *GetInventoryAPIV2AnalyticsMetricsListParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get inventory API v2 analytics metrics list params
func (o *GetInventoryAPIV2AnalyticsMetricsListParams) WithContext(ctx context.Context) *GetInventoryAPIV2AnalyticsMetricsListParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get inventory API v2 analytics metrics list params
func (o *GetInventoryAPIV2AnalyticsMetricsListParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get inventory API v2 analytics metrics list params
func (o *GetInventoryAPIV2AnalyticsMetricsListParams) WithHTTPClient(client *http.Client) *GetInventoryAPIV2AnalyticsMetricsListParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get inventory API v2 analytics metrics list params
func (o *GetInventoryAPIV2AnalyticsMetricsListParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithConnector adds the connector to the get inventory API v2 analytics metrics list params
func (o *GetInventoryAPIV2AnalyticsMetricsListParams) WithConnector(connector []string) *GetInventoryAPIV2AnalyticsMetricsListParams {
	o.SetConnector(connector)
	return o
}

// SetConnector adds the connector to the get inventory API v2 analytics metrics list params
func (o *GetInventoryAPIV2AnalyticsMetricsListParams) SetConnector(connector []string) {
	o.Connector = connector
}

// WithMetricType adds the metricType to the get inventory API v2 analytics metrics list params
func (o *GetInventoryAPIV2AnalyticsMetricsListParams) WithMetricType(metricType *string) *GetInventoryAPIV2AnalyticsMetricsListParams {
	o.SetMetricType(metricType)
	return o
}

// SetMetricType adds the metricType to the get inventory API v2 analytics metrics list params
func (o *GetInventoryAPIV2AnalyticsMetricsListParams) SetMetricType(metricType *string) {
	o.MetricType = metricType
}

// WriteToRequest writes these params to a swagger request
func (o *GetInventoryAPIV2AnalyticsMetricsListParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Connector != nil {

		// binding items for connector
		joinedConnector := o.bindParamConnector(reg)

		// query array param connector
		if err := r.SetQueryParam("connector", joinedConnector...); err != nil {
			return err
		}
	}

	if o.MetricType != nil {

		// query param metricType
		var qrMetricType string

		if o.MetricType != nil {
			qrMetricType = *o.MetricType
		}
		qMetricType := qrMetricType
		if qMetricType != "" {

			if err := r.SetQueryParam("metricType", qMetricType); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetInventoryAPIV2AnalyticsMetricsList binds the parameter connector
func (o *GetInventoryAPIV2AnalyticsMetricsListParams) bindParamConnector(formats strfmt.Registry) []string {
	connectorIR := o.Connector

	var connectorIC []string
	for _, connectorIIR := range connectorIR { // explode []string

		connectorIIV := connectorIIR // string as string
		connectorIC = append(connectorIC, connectorIIV)
	}

	// items.CollectionFormat: "csv"
	connectorIS := swag.JoinByFormat(connectorIC, "csv")

	return connectorIS
}
