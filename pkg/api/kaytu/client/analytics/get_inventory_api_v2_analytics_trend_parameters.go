// Code generated by go-swagger; DO NOT EDIT.

package analytics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetInventoryAPIV2AnalyticsTrendParams creates a new GetInventoryAPIV2AnalyticsTrendParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetInventoryAPIV2AnalyticsTrendParams() *GetInventoryAPIV2AnalyticsTrendParams {
	return &GetInventoryAPIV2AnalyticsTrendParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetInventoryAPIV2AnalyticsTrendParamsWithTimeout creates a new GetInventoryAPIV2AnalyticsTrendParams object
// with the ability to set a timeout on a request.
func NewGetInventoryAPIV2AnalyticsTrendParamsWithTimeout(timeout time.Duration) *GetInventoryAPIV2AnalyticsTrendParams {
	return &GetInventoryAPIV2AnalyticsTrendParams{
		timeout: timeout,
	}
}

// NewGetInventoryAPIV2AnalyticsTrendParamsWithContext creates a new GetInventoryAPIV2AnalyticsTrendParams object
// with the ability to set a context for a request.
func NewGetInventoryAPIV2AnalyticsTrendParamsWithContext(ctx context.Context) *GetInventoryAPIV2AnalyticsTrendParams {
	return &GetInventoryAPIV2AnalyticsTrendParams{
		Context: ctx,
	}
}

// NewGetInventoryAPIV2AnalyticsTrendParamsWithHTTPClient creates a new GetInventoryAPIV2AnalyticsTrendParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetInventoryAPIV2AnalyticsTrendParamsWithHTTPClient(client *http.Client) *GetInventoryAPIV2AnalyticsTrendParams {
	return &GetInventoryAPIV2AnalyticsTrendParams{
		HTTPClient: client,
	}
}

/*
GetInventoryAPIV2AnalyticsTrendParams contains all the parameters to send to the API endpoint

	for the get inventory API v2 analytics trend operation.

	Typically these are written to a http.Request.
*/
type GetInventoryAPIV2AnalyticsTrendParams struct {

	/* ConnectionGroup.

	   Connection group to filter by - mutually exclusive with connectionId
	*/
	ConnectionGroup []string

	/* ConnectionID.

	   Connection IDs to filter by - mutually exclusive with connectionGroup
	*/
	ConnectionID []string

	/* Connector.

	   Connector type to filter by
	*/
	Connector []string

	/* EndTime.

	   timestamp for end in epoch seconds
	*/
	EndTime *int64

	/* Granularity.

	   Granularity of the table, default is daily
	*/
	Granularity *string

	/* Ids.

	   Metric IDs to filter by
	*/
	Ids []string

	/* MetricType.

	   Metric type, default: assets
	*/
	MetricType *string

	/* ResourceCollection.

	   Resource collection IDs to filter by
	*/
	ResourceCollection []string

	/* StartTime.

	   timestamp for start in epoch seconds
	*/
	StartTime *int64

	/* Tag.

	   Key-Value tags in key=value format to filter by
	*/
	Tag []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get inventory API v2 analytics trend params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInventoryAPIV2AnalyticsTrendParams) WithDefaults() *GetInventoryAPIV2AnalyticsTrendParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get inventory API v2 analytics trend params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInventoryAPIV2AnalyticsTrendParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get inventory API v2 analytics trend params
func (o *GetInventoryAPIV2AnalyticsTrendParams) WithTimeout(timeout time.Duration) *GetInventoryAPIV2AnalyticsTrendParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get inventory API v2 analytics trend params
func (o *GetInventoryAPIV2AnalyticsTrendParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get inventory API v2 analytics trend params
func (o *GetInventoryAPIV2AnalyticsTrendParams) WithContext(ctx context.Context) *GetInventoryAPIV2AnalyticsTrendParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get inventory API v2 analytics trend params
func (o *GetInventoryAPIV2AnalyticsTrendParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get inventory API v2 analytics trend params
func (o *GetInventoryAPIV2AnalyticsTrendParams) WithHTTPClient(client *http.Client) *GetInventoryAPIV2AnalyticsTrendParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get inventory API v2 analytics trend params
func (o *GetInventoryAPIV2AnalyticsTrendParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithConnectionGroup adds the connectionGroup to the get inventory API v2 analytics trend params
func (o *GetInventoryAPIV2AnalyticsTrendParams) WithConnectionGroup(connectionGroup []string) *GetInventoryAPIV2AnalyticsTrendParams {
	o.SetConnectionGroup(connectionGroup)
	return o
}

// SetConnectionGroup adds the connectionGroup to the get inventory API v2 analytics trend params
func (o *GetInventoryAPIV2AnalyticsTrendParams) SetConnectionGroup(connectionGroup []string) {
	o.ConnectionGroup = connectionGroup
}

// WithConnectionID adds the connectionID to the get inventory API v2 analytics trend params
func (o *GetInventoryAPIV2AnalyticsTrendParams) WithConnectionID(connectionID []string) *GetInventoryAPIV2AnalyticsTrendParams {
	o.SetConnectionID(connectionID)
	return o
}

// SetConnectionID adds the connectionId to the get inventory API v2 analytics trend params
func (o *GetInventoryAPIV2AnalyticsTrendParams) SetConnectionID(connectionID []string) {
	o.ConnectionID = connectionID
}

// WithConnector adds the connector to the get inventory API v2 analytics trend params
func (o *GetInventoryAPIV2AnalyticsTrendParams) WithConnector(connector []string) *GetInventoryAPIV2AnalyticsTrendParams {
	o.SetConnector(connector)
	return o
}

// SetConnector adds the connector to the get inventory API v2 analytics trend params
func (o *GetInventoryAPIV2AnalyticsTrendParams) SetConnector(connector []string) {
	o.Connector = connector
}

// WithEndTime adds the endTime to the get inventory API v2 analytics trend params
func (o *GetInventoryAPIV2AnalyticsTrendParams) WithEndTime(endTime *int64) *GetInventoryAPIV2AnalyticsTrendParams {
	o.SetEndTime(endTime)
	return o
}

// SetEndTime adds the endTime to the get inventory API v2 analytics trend params
func (o *GetInventoryAPIV2AnalyticsTrendParams) SetEndTime(endTime *int64) {
	o.EndTime = endTime
}

// WithGranularity adds the granularity to the get inventory API v2 analytics trend params
func (o *GetInventoryAPIV2AnalyticsTrendParams) WithGranularity(granularity *string) *GetInventoryAPIV2AnalyticsTrendParams {
	o.SetGranularity(granularity)
	return o
}

// SetGranularity adds the granularity to the get inventory API v2 analytics trend params
func (o *GetInventoryAPIV2AnalyticsTrendParams) SetGranularity(granularity *string) {
	o.Granularity = granularity
}

// WithIds adds the ids to the get inventory API v2 analytics trend params
func (o *GetInventoryAPIV2AnalyticsTrendParams) WithIds(ids []string) *GetInventoryAPIV2AnalyticsTrendParams {
	o.SetIds(ids)
	return o
}

// SetIds adds the ids to the get inventory API v2 analytics trend params
func (o *GetInventoryAPIV2AnalyticsTrendParams) SetIds(ids []string) {
	o.Ids = ids
}

// WithMetricType adds the metricType to the get inventory API v2 analytics trend params
func (o *GetInventoryAPIV2AnalyticsTrendParams) WithMetricType(metricType *string) *GetInventoryAPIV2AnalyticsTrendParams {
	o.SetMetricType(metricType)
	return o
}

// SetMetricType adds the metricType to the get inventory API v2 analytics trend params
func (o *GetInventoryAPIV2AnalyticsTrendParams) SetMetricType(metricType *string) {
	o.MetricType = metricType
}

// WithResourceCollection adds the resourceCollection to the get inventory API v2 analytics trend params
func (o *GetInventoryAPIV2AnalyticsTrendParams) WithResourceCollection(resourceCollection []string) *GetInventoryAPIV2AnalyticsTrendParams {
	o.SetResourceCollection(resourceCollection)
	return o
}

// SetResourceCollection adds the resourceCollection to the get inventory API v2 analytics trend params
func (o *GetInventoryAPIV2AnalyticsTrendParams) SetResourceCollection(resourceCollection []string) {
	o.ResourceCollection = resourceCollection
}

// WithStartTime adds the startTime to the get inventory API v2 analytics trend params
func (o *GetInventoryAPIV2AnalyticsTrendParams) WithStartTime(startTime *int64) *GetInventoryAPIV2AnalyticsTrendParams {
	o.SetStartTime(startTime)
	return o
}

// SetStartTime adds the startTime to the get inventory API v2 analytics trend params
func (o *GetInventoryAPIV2AnalyticsTrendParams) SetStartTime(startTime *int64) {
	o.StartTime = startTime
}

// WithTag adds the tag to the get inventory API v2 analytics trend params
func (o *GetInventoryAPIV2AnalyticsTrendParams) WithTag(tag []string) *GetInventoryAPIV2AnalyticsTrendParams {
	o.SetTag(tag)
	return o
}

// SetTag adds the tag to the get inventory API v2 analytics trend params
func (o *GetInventoryAPIV2AnalyticsTrendParams) SetTag(tag []string) {
	o.Tag = tag
}

// WriteToRequest writes these params to a swagger request
func (o *GetInventoryAPIV2AnalyticsTrendParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ConnectionGroup != nil {

		// binding items for connectionGroup
		joinedConnectionGroup := o.bindParamConnectionGroup(reg)

		// query array param connectionGroup
		if err := r.SetQueryParam("connectionGroup", joinedConnectionGroup...); err != nil {
			return err
		}
	}

	if o.ConnectionID != nil {

		// binding items for connectionId
		joinedConnectionID := o.bindParamConnectionID(reg)

		// query array param connectionId
		if err := r.SetQueryParam("connectionId", joinedConnectionID...); err != nil {
			return err
		}
	}

	if o.Connector != nil {

		// binding items for connector
		joinedConnector := o.bindParamConnector(reg)

		// query array param connector
		if err := r.SetQueryParam("connector", joinedConnector...); err != nil {
			return err
		}
	}

	if o.EndTime != nil {

		// query param endTime
		var qrEndTime int64

		if o.EndTime != nil {
			qrEndTime = *o.EndTime
		}
		qEndTime := swag.FormatInt64(qrEndTime)
		if qEndTime != "" {

			if err := r.SetQueryParam("endTime", qEndTime); err != nil {
				return err
			}
		}
	}

	if o.Granularity != nil {

		// query param granularity
		var qrGranularity string

		if o.Granularity != nil {
			qrGranularity = *o.Granularity
		}
		qGranularity := qrGranularity
		if qGranularity != "" {

			if err := r.SetQueryParam("granularity", qGranularity); err != nil {
				return err
			}
		}
	}

	if o.Ids != nil {

		// binding items for ids
		joinedIds := o.bindParamIds(reg)

		// query array param ids
		if err := r.SetQueryParam("ids", joinedIds...); err != nil {
			return err
		}
	}

	if o.MetricType != nil {

		// query param metricType
		var qrMetricType string

		if o.MetricType != nil {
			qrMetricType = *o.MetricType
		}
		qMetricType := qrMetricType
		if qMetricType != "" {

			if err := r.SetQueryParam("metricType", qMetricType); err != nil {
				return err
			}
		}
	}

	if o.ResourceCollection != nil {

		// binding items for resourceCollection
		joinedResourceCollection := o.bindParamResourceCollection(reg)

		// query array param resourceCollection
		if err := r.SetQueryParam("resourceCollection", joinedResourceCollection...); err != nil {
			return err
		}
	}

	if o.StartTime != nil {

		// query param startTime
		var qrStartTime int64

		if o.StartTime != nil {
			qrStartTime = *o.StartTime
		}
		qStartTime := swag.FormatInt64(qrStartTime)
		if qStartTime != "" {

			if err := r.SetQueryParam("startTime", qStartTime); err != nil {
				return err
			}
		}
	}

	if o.Tag != nil {

		// binding items for tag
		joinedTag := o.bindParamTag(reg)

		// query array param tag
		if err := r.SetQueryParam("tag", joinedTag...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetInventoryAPIV2AnalyticsTrend binds the parameter connectionGroup
func (o *GetInventoryAPIV2AnalyticsTrendParams) bindParamConnectionGroup(formats strfmt.Registry) []string {
	connectionGroupIR := o.ConnectionGroup

	var connectionGroupIC []string
	for _, connectionGroupIIR := range connectionGroupIR { // explode []string

		connectionGroupIIV := connectionGroupIIR // string as string
		connectionGroupIC = append(connectionGroupIC, connectionGroupIIV)
	}

	// items.CollectionFormat: "csv"
	connectionGroupIS := swag.JoinByFormat(connectionGroupIC, "csv")

	return connectionGroupIS
}

// bindParamGetInventoryAPIV2AnalyticsTrend binds the parameter connectionId
func (o *GetInventoryAPIV2AnalyticsTrendParams) bindParamConnectionID(formats strfmt.Registry) []string {
	connectionIDIR := o.ConnectionID

	var connectionIDIC []string
	for _, connectionIDIIR := range connectionIDIR { // explode []string

		connectionIDIIV := connectionIDIIR // string as string
		connectionIDIC = append(connectionIDIC, connectionIDIIV)
	}

	// items.CollectionFormat: "csv"
	connectionIDIS := swag.JoinByFormat(connectionIDIC, "csv")

	return connectionIDIS
}

// bindParamGetInventoryAPIV2AnalyticsTrend binds the parameter connector
func (o *GetInventoryAPIV2AnalyticsTrendParams) bindParamConnector(formats strfmt.Registry) []string {
	connectorIR := o.Connector

	var connectorIC []string
	for _, connectorIIR := range connectorIR { // explode []string

		connectorIIV := connectorIIR // string as string
		connectorIC = append(connectorIC, connectorIIV)
	}

	// items.CollectionFormat: "csv"
	connectorIS := swag.JoinByFormat(connectorIC, "csv")

	return connectorIS
}

// bindParamGetInventoryAPIV2AnalyticsTrend binds the parameter ids
func (o *GetInventoryAPIV2AnalyticsTrendParams) bindParamIds(formats strfmt.Registry) []string {
	idsIR := o.Ids

	var idsIC []string
	for _, idsIIR := range idsIR { // explode []string

		idsIIV := idsIIR // string as string
		idsIC = append(idsIC, idsIIV)
	}

	// items.CollectionFormat: "csv"
	idsIS := swag.JoinByFormat(idsIC, "csv")

	return idsIS
}

// bindParamGetInventoryAPIV2AnalyticsTrend binds the parameter resourceCollection
func (o *GetInventoryAPIV2AnalyticsTrendParams) bindParamResourceCollection(formats strfmt.Registry) []string {
	resourceCollectionIR := o.ResourceCollection

	var resourceCollectionIC []string
	for _, resourceCollectionIIR := range resourceCollectionIR { // explode []string

		resourceCollectionIIV := resourceCollectionIIR // string as string
		resourceCollectionIC = append(resourceCollectionIC, resourceCollectionIIV)
	}

	// items.CollectionFormat: "csv"
	resourceCollectionIS := swag.JoinByFormat(resourceCollectionIC, "csv")

	return resourceCollectionIS
}

// bindParamGetInventoryAPIV2AnalyticsTrend binds the parameter tag
func (o *GetInventoryAPIV2AnalyticsTrendParams) bindParamTag(formats strfmt.Registry) []string {
	tagIR := o.Tag

	var tagIC []string
	for _, tagIIR := range tagIR { // explode []string

		tagIIV := tagIIR // string as string
		tagIC = append(tagIC, tagIIV)
	}

	// items.CollectionFormat: "csv"
	tagIS := swag.JoinByFormat(tagIC, "csv")

	return tagIS
}
