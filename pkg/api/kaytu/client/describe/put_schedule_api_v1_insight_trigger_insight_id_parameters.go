// Code generated by go-swagger; DO NOT EDIT.

package describe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPutScheduleAPIV1InsightTriggerInsightIDParams creates a new PutScheduleAPIV1InsightTriggerInsightIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPutScheduleAPIV1InsightTriggerInsightIDParams() *PutScheduleAPIV1InsightTriggerInsightIDParams {
	return &PutScheduleAPIV1InsightTriggerInsightIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPutScheduleAPIV1InsightTriggerInsightIDParamsWithTimeout creates a new PutScheduleAPIV1InsightTriggerInsightIDParams object
// with the ability to set a timeout on a request.
func NewPutScheduleAPIV1InsightTriggerInsightIDParamsWithTimeout(timeout time.Duration) *PutScheduleAPIV1InsightTriggerInsightIDParams {
	return &PutScheduleAPIV1InsightTriggerInsightIDParams{
		timeout: timeout,
	}
}

// NewPutScheduleAPIV1InsightTriggerInsightIDParamsWithContext creates a new PutScheduleAPIV1InsightTriggerInsightIDParams object
// with the ability to set a context for a request.
func NewPutScheduleAPIV1InsightTriggerInsightIDParamsWithContext(ctx context.Context) *PutScheduleAPIV1InsightTriggerInsightIDParams {
	return &PutScheduleAPIV1InsightTriggerInsightIDParams{
		Context: ctx,
	}
}

// NewPutScheduleAPIV1InsightTriggerInsightIDParamsWithHTTPClient creates a new PutScheduleAPIV1InsightTriggerInsightIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewPutScheduleAPIV1InsightTriggerInsightIDParamsWithHTTPClient(client *http.Client) *PutScheduleAPIV1InsightTriggerInsightIDParams {
	return &PutScheduleAPIV1InsightTriggerInsightIDParams{
		HTTPClient: client,
	}
}

/*
PutScheduleAPIV1InsightTriggerInsightIDParams contains all the parameters to send to the API endpoint

	for the put schedule API v1 insight trigger insight ID operation.

	Typically these are written to a http.Request.
*/
type PutScheduleAPIV1InsightTriggerInsightIDParams struct {

	/* InsightID.

	   Insight ID
	*/
	InsightID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the put schedule API v1 insight trigger insight ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutScheduleAPIV1InsightTriggerInsightIDParams) WithDefaults() *PutScheduleAPIV1InsightTriggerInsightIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the put schedule API v1 insight trigger insight ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutScheduleAPIV1InsightTriggerInsightIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the put schedule API v1 insight trigger insight ID params
func (o *PutScheduleAPIV1InsightTriggerInsightIDParams) WithTimeout(timeout time.Duration) *PutScheduleAPIV1InsightTriggerInsightIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put schedule API v1 insight trigger insight ID params
func (o *PutScheduleAPIV1InsightTriggerInsightIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put schedule API v1 insight trigger insight ID params
func (o *PutScheduleAPIV1InsightTriggerInsightIDParams) WithContext(ctx context.Context) *PutScheduleAPIV1InsightTriggerInsightIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put schedule API v1 insight trigger insight ID params
func (o *PutScheduleAPIV1InsightTriggerInsightIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put schedule API v1 insight trigger insight ID params
func (o *PutScheduleAPIV1InsightTriggerInsightIDParams) WithHTTPClient(client *http.Client) *PutScheduleAPIV1InsightTriggerInsightIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put schedule API v1 insight trigger insight ID params
func (o *PutScheduleAPIV1InsightTriggerInsightIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithInsightID adds the insightID to the put schedule API v1 insight trigger insight ID params
func (o *PutScheduleAPIV1InsightTriggerInsightIDParams) WithInsightID(insightID string) *PutScheduleAPIV1InsightTriggerInsightIDParams {
	o.SetInsightID(insightID)
	return o
}

// SetInsightID adds the insightId to the put schedule API v1 insight trigger insight ID params
func (o *PutScheduleAPIV1InsightTriggerInsightIDParams) SetInsightID(insightID string) {
	o.InsightID = insightID
}

// WriteToRequest writes these params to a swagger request
func (o *PutScheduleAPIV1InsightTriggerInsightIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param insight_id
	if err := r.SetPathParam("insight_id", o.InsightID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
