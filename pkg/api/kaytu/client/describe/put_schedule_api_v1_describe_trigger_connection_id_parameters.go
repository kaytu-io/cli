// Code generated by go-swagger; DO NOT EDIT.

package describe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewPutScheduleAPIV1DescribeTriggerConnectionIDParams creates a new PutScheduleAPIV1DescribeTriggerConnectionIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPutScheduleAPIV1DescribeTriggerConnectionIDParams() *PutScheduleAPIV1DescribeTriggerConnectionIDParams {
	return &PutScheduleAPIV1DescribeTriggerConnectionIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPutScheduleAPIV1DescribeTriggerConnectionIDParamsWithTimeout creates a new PutScheduleAPIV1DescribeTriggerConnectionIDParams object
// with the ability to set a timeout on a request.
func NewPutScheduleAPIV1DescribeTriggerConnectionIDParamsWithTimeout(timeout time.Duration) *PutScheduleAPIV1DescribeTriggerConnectionIDParams {
	return &PutScheduleAPIV1DescribeTriggerConnectionIDParams{
		timeout: timeout,
	}
}

// NewPutScheduleAPIV1DescribeTriggerConnectionIDParamsWithContext creates a new PutScheduleAPIV1DescribeTriggerConnectionIDParams object
// with the ability to set a context for a request.
func NewPutScheduleAPIV1DescribeTriggerConnectionIDParamsWithContext(ctx context.Context) *PutScheduleAPIV1DescribeTriggerConnectionIDParams {
	return &PutScheduleAPIV1DescribeTriggerConnectionIDParams{
		Context: ctx,
	}
}

// NewPutScheduleAPIV1DescribeTriggerConnectionIDParamsWithHTTPClient creates a new PutScheduleAPIV1DescribeTriggerConnectionIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewPutScheduleAPIV1DescribeTriggerConnectionIDParamsWithHTTPClient(client *http.Client) *PutScheduleAPIV1DescribeTriggerConnectionIDParams {
	return &PutScheduleAPIV1DescribeTriggerConnectionIDParams{
		HTTPClient: client,
	}
}

/*
PutScheduleAPIV1DescribeTriggerConnectionIDParams contains all the parameters to send to the API endpoint

	for the put schedule API v1 describe trigger connection ID operation.

	Typically these are written to a http.Request.
*/
type PutScheduleAPIV1DescribeTriggerConnectionIDParams struct {

	/* ConnectionID.

	   Connection ID
	*/
	ConnectionID string

	/* ResourceType.

	   Resource Type
	*/
	ResourceType []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the put schedule API v1 describe trigger connection ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutScheduleAPIV1DescribeTriggerConnectionIDParams) WithDefaults() *PutScheduleAPIV1DescribeTriggerConnectionIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the put schedule API v1 describe trigger connection ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutScheduleAPIV1DescribeTriggerConnectionIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the put schedule API v1 describe trigger connection ID params
func (o *PutScheduleAPIV1DescribeTriggerConnectionIDParams) WithTimeout(timeout time.Duration) *PutScheduleAPIV1DescribeTriggerConnectionIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put schedule API v1 describe trigger connection ID params
func (o *PutScheduleAPIV1DescribeTriggerConnectionIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put schedule API v1 describe trigger connection ID params
func (o *PutScheduleAPIV1DescribeTriggerConnectionIDParams) WithContext(ctx context.Context) *PutScheduleAPIV1DescribeTriggerConnectionIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put schedule API v1 describe trigger connection ID params
func (o *PutScheduleAPIV1DescribeTriggerConnectionIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put schedule API v1 describe trigger connection ID params
func (o *PutScheduleAPIV1DescribeTriggerConnectionIDParams) WithHTTPClient(client *http.Client) *PutScheduleAPIV1DescribeTriggerConnectionIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put schedule API v1 describe trigger connection ID params
func (o *PutScheduleAPIV1DescribeTriggerConnectionIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithConnectionID adds the connectionID to the put schedule API v1 describe trigger connection ID params
func (o *PutScheduleAPIV1DescribeTriggerConnectionIDParams) WithConnectionID(connectionID string) *PutScheduleAPIV1DescribeTriggerConnectionIDParams {
	o.SetConnectionID(connectionID)
	return o
}

// SetConnectionID adds the connectionId to the put schedule API v1 describe trigger connection ID params
func (o *PutScheduleAPIV1DescribeTriggerConnectionIDParams) SetConnectionID(connectionID string) {
	o.ConnectionID = connectionID
}

// WithResourceType adds the resourceType to the put schedule API v1 describe trigger connection ID params
func (o *PutScheduleAPIV1DescribeTriggerConnectionIDParams) WithResourceType(resourceType []string) *PutScheduleAPIV1DescribeTriggerConnectionIDParams {
	o.SetResourceType(resourceType)
	return o
}

// SetResourceType adds the resourceType to the put schedule API v1 describe trigger connection ID params
func (o *PutScheduleAPIV1DescribeTriggerConnectionIDParams) SetResourceType(resourceType []string) {
	o.ResourceType = resourceType
}

// WriteToRequest writes these params to a swagger request
func (o *PutScheduleAPIV1DescribeTriggerConnectionIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param connection_id
	if err := r.SetPathParam("connection_id", o.ConnectionID); err != nil {
		return err
	}

	if o.ResourceType != nil {

		// binding items for resource_type
		joinedResourceType := o.bindParamResourceType(reg)

		// query array param resource_type
		if err := r.SetQueryParam("resource_type", joinedResourceType...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamPutScheduleAPIV1DescribeTriggerConnectionID binds the parameter resource_type
func (o *PutScheduleAPIV1DescribeTriggerConnectionIDParams) bindParamResourceType(formats strfmt.Registry) []string {
	resourceTypeIR := o.ResourceType

	var resourceTypeIC []string
	for _, resourceTypeIIR := range resourceTypeIR { // explode []string

		resourceTypeIIV := resourceTypeIIR // string as string
		resourceTypeIC = append(resourceTypeIC, resourceTypeIIV)
	}

	// items.CollectionFormat: "csv"
	resourceTypeIS := swag.JoinByFormat(resourceTypeIC, "csv")

	return resourceTypeIS
}
