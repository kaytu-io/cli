// Code generated by go-swagger; DO NOT EDIT.

package describe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new describe API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for describe API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	GetScheduleAPIV0ComplianceSummarizerTrigger(params *GetScheduleAPIV0ComplianceSummarizerTriggerParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetScheduleAPIV0ComplianceSummarizerTriggerOK, error)

	GetScheduleAPIV0ComplianceTrigger(params *GetScheduleAPIV0ComplianceTriggerParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetScheduleAPIV0ComplianceTriggerOK, error)

	GetScheduleAPIV0DescribeTrigger(params *GetScheduleAPIV0DescribeTriggerParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetScheduleAPIV0DescribeTriggerOK, error)

	GetScheduleAPIV0InsightTrigger(params *GetScheduleAPIV0InsightTriggerParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetScheduleAPIV0InsightTriggerOK, error)

	GetScheduleAPIV0SummarizeTrigger(params *GetScheduleAPIV0SummarizeTriggerParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetScheduleAPIV0SummarizeTriggerOK, error)

	GetScheduleAPIV1InsightJobJobID(params *GetScheduleAPIV1InsightJobJobIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetScheduleAPIV1InsightJobJobIDOK, error)

	PostScheduleAPIV1DescribeResource(params *PostScheduleAPIV1DescribeResourceParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PostScheduleAPIV1DescribeResourceOK, error)

	PostScheduleAPIV1StacksInsightTrigger(params *PostScheduleAPIV1StacksInsightTriggerParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PostScheduleAPIV1StacksInsightTriggerOK, error)

	PutScheduleAPIV1BenchmarkEvaluationTrigger(params *PutScheduleAPIV1BenchmarkEvaluationTriggerParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PutScheduleAPIV1BenchmarkEvaluationTriggerOK, error)

	PutScheduleAPIV1DescribeTriggerConnectionID(params *PutScheduleAPIV1DescribeTriggerConnectionIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PutScheduleAPIV1DescribeTriggerConnectionIDOK, error)

	PutScheduleAPIV1InsightEvaluationTrigger(params *PutScheduleAPIV1InsightEvaluationTriggerParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PutScheduleAPIV1InsightEvaluationTriggerOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
GetScheduleAPIV0ComplianceSummarizerTrigger triggers a compliance summarizer job to run immediately
*/
func (a *Client) GetScheduleAPIV0ComplianceSummarizerTrigger(params *GetScheduleAPIV0ComplianceSummarizerTriggerParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetScheduleAPIV0ComplianceSummarizerTriggerOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetScheduleAPIV0ComplianceSummarizerTriggerParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetScheduleAPIV0ComplianceSummarizerTrigger",
		Method:             "GET",
		PathPattern:        "/schedule/api/v0/compliance/summarizer/trigger",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetScheduleAPIV0ComplianceSummarizerTriggerReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetScheduleAPIV0ComplianceSummarizerTriggerOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetScheduleAPIV0ComplianceSummarizerTrigger: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetScheduleAPIV0ComplianceTrigger triggers a compliance job to run immediately

Triggers a compliance job to run immediately
*/
func (a *Client) GetScheduleAPIV0ComplianceTrigger(params *GetScheduleAPIV0ComplianceTriggerParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetScheduleAPIV0ComplianceTriggerOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetScheduleAPIV0ComplianceTriggerParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetScheduleAPIV0ComplianceTrigger",
		Method:             "GET",
		PathPattern:        "/schedule/api/v0/compliance/trigger",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetScheduleAPIV0ComplianceTriggerReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetScheduleAPIV0ComplianceTriggerOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetScheduleAPIV0ComplianceTrigger: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetScheduleAPIV0DescribeTrigger triggers a describe job to run immediately

Triggers a describe job to run immediately
*/
func (a *Client) GetScheduleAPIV0DescribeTrigger(params *GetScheduleAPIV0DescribeTriggerParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetScheduleAPIV0DescribeTriggerOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetScheduleAPIV0DescribeTriggerParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetScheduleAPIV0DescribeTrigger",
		Method:             "GET",
		PathPattern:        "/schedule/api/v0/describe/trigger",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetScheduleAPIV0DescribeTriggerReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetScheduleAPIV0DescribeTriggerOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetScheduleAPIV0DescribeTrigger: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetScheduleAPIV0InsightTrigger triggers an insight job to run immediately

Triggers an insight job to run immediately
*/
func (a *Client) GetScheduleAPIV0InsightTrigger(params *GetScheduleAPIV0InsightTriggerParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetScheduleAPIV0InsightTriggerOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetScheduleAPIV0InsightTriggerParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetScheduleAPIV0InsightTrigger",
		Method:             "GET",
		PathPattern:        "/schedule/api/v0/insight/trigger",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetScheduleAPIV0InsightTriggerReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetScheduleAPIV0InsightTriggerOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetScheduleAPIV0InsightTrigger: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetScheduleAPIV0SummarizeTrigger triggers a summarize job to run immediately

Triggers a summarize job to run immediately
*/
func (a *Client) GetScheduleAPIV0SummarizeTrigger(params *GetScheduleAPIV0SummarizeTriggerParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetScheduleAPIV0SummarizeTriggerOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetScheduleAPIV0SummarizeTriggerParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetScheduleAPIV0SummarizeTrigger",
		Method:             "GET",
		PathPattern:        "/schedule/api/v0/summarize/trigger",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetScheduleAPIV0SummarizeTriggerReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetScheduleAPIV0SummarizeTriggerOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetScheduleAPIV0SummarizeTrigger: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetScheduleAPIV1InsightJobJobID gets an insight job

Get an Insight Job details by ID
*/
func (a *Client) GetScheduleAPIV1InsightJobJobID(params *GetScheduleAPIV1InsightJobJobIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetScheduleAPIV1InsightJobJobIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetScheduleAPIV1InsightJobJobIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetScheduleAPIV1InsightJobJobID",
		Method:             "GET",
		PathPattern:        "/schedule/api/v1/insight/job/{jobId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetScheduleAPIV1InsightJobJobIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetScheduleAPIV1InsightJobJobIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetScheduleAPIV1InsightJobJobID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
PostScheduleAPIV1DescribeResource describes single resource
*/
func (a *Client) PostScheduleAPIV1DescribeResource(params *PostScheduleAPIV1DescribeResourceParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PostScheduleAPIV1DescribeResourceOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostScheduleAPIV1DescribeResourceParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "PostScheduleAPIV1DescribeResource",
		Method:             "POST",
		PathPattern:        "/schedule/api/v1/describe/resource",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostScheduleAPIV1DescribeResourceReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostScheduleAPIV1DescribeResourceOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostScheduleAPIV1DescribeResource: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
PostScheduleAPIV1StacksInsightTrigger triggers an insight evaluation job to run immediately
*/
func (a *Client) PostScheduleAPIV1StacksInsightTrigger(params *PostScheduleAPIV1StacksInsightTriggerParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PostScheduleAPIV1StacksInsightTriggerOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostScheduleAPIV1StacksInsightTriggerParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "PostScheduleAPIV1StacksInsightTrigger",
		Method:             "POST",
		PathPattern:        "/schedule/api/v1/stacks/insight/trigger",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostScheduleAPIV1StacksInsightTriggerReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostScheduleAPIV1StacksInsightTriggerOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostScheduleAPIV1StacksInsightTrigger: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
PutScheduleAPIV1BenchmarkEvaluationTrigger triggers a benchmark evaluation job to run immediately
*/
func (a *Client) PutScheduleAPIV1BenchmarkEvaluationTrigger(params *PutScheduleAPIV1BenchmarkEvaluationTriggerParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PutScheduleAPIV1BenchmarkEvaluationTriggerOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPutScheduleAPIV1BenchmarkEvaluationTriggerParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "PutScheduleAPIV1BenchmarkEvaluationTrigger",
		Method:             "PUT",
		PathPattern:        "/schedule/api/v1/benchmark/evaluation/trigger",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PutScheduleAPIV1BenchmarkEvaluationTriggerReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PutScheduleAPIV1BenchmarkEvaluationTriggerOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PutScheduleAPIV1BenchmarkEvaluationTrigger: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
PutScheduleAPIV1DescribeTriggerConnectionID triggers a describe job to run immediately

Triggers a describe job to run immediately
*/
func (a *Client) PutScheduleAPIV1DescribeTriggerConnectionID(params *PutScheduleAPIV1DescribeTriggerConnectionIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PutScheduleAPIV1DescribeTriggerConnectionIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPutScheduleAPIV1DescribeTriggerConnectionIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "PutScheduleAPIV1DescribeTriggerConnectionID",
		Method:             "PUT",
		PathPattern:        "/schedule/api/v1/describe/trigger/{connection_id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PutScheduleAPIV1DescribeTriggerConnectionIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PutScheduleAPIV1DescribeTriggerConnectionIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PutScheduleAPIV1DescribeTriggerConnectionID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
PutScheduleAPIV1InsightEvaluationTrigger triggers a insight evaluation job to run immediately
*/
func (a *Client) PutScheduleAPIV1InsightEvaluationTrigger(params *PutScheduleAPIV1InsightEvaluationTriggerParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*PutScheduleAPIV1InsightEvaluationTriggerOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPutScheduleAPIV1InsightEvaluationTriggerParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "PutScheduleAPIV1InsightEvaluationTrigger",
		Method:             "PUT",
		PathPattern:        "/schedule/api/v1/insight/evaluation/trigger",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PutScheduleAPIV1InsightEvaluationTriggerReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PutScheduleAPIV1InsightEvaluationTriggerOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PutScheduleAPIV1InsightEvaluationTrigger: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
