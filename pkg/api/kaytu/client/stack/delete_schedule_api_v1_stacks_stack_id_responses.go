// Code generated by go-swagger; DO NOT EDIT.

package stack

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteScheduleAPIV1StacksStackIDReader is a Reader for the DeleteScheduleAPIV1StacksStackID structure.
type DeleteScheduleAPIV1StacksStackIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteScheduleAPIV1StacksStackIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteScheduleAPIV1StacksStackIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("[DELETE /schedule/api/v1/stacks/{stackId}] DeleteScheduleAPIV1StacksStackID", response, response.Code())
	}
}

// NewDeleteScheduleAPIV1StacksStackIDOK creates a DeleteScheduleAPIV1StacksStackIDOK with default headers values
func NewDeleteScheduleAPIV1StacksStackIDOK() *DeleteScheduleAPIV1StacksStackIDOK {
	return &DeleteScheduleAPIV1StacksStackIDOK{}
}

/*
DeleteScheduleAPIV1StacksStackIDOK describes a response with status code 200, with default header values.

OK
*/
type DeleteScheduleAPIV1StacksStackIDOK struct {
}

// IsSuccess returns true when this delete schedule Api v1 stacks stack Id o k response has a 2xx status code
func (o *DeleteScheduleAPIV1StacksStackIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete schedule Api v1 stacks stack Id o k response has a 3xx status code
func (o *DeleteScheduleAPIV1StacksStackIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete schedule Api v1 stacks stack Id o k response has a 4xx status code
func (o *DeleteScheduleAPIV1StacksStackIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete schedule Api v1 stacks stack Id o k response has a 5xx status code
func (o *DeleteScheduleAPIV1StacksStackIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete schedule Api v1 stacks stack Id o k response a status code equal to that given
func (o *DeleteScheduleAPIV1StacksStackIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete schedule Api v1 stacks stack Id o k response
func (o *DeleteScheduleAPIV1StacksStackIDOK) Code() int {
	return 200
}

func (o *DeleteScheduleAPIV1StacksStackIDOK) Error() string {
	return fmt.Sprintf("[DELETE /schedule/api/v1/stacks/{stackId}][%d] deleteScheduleApiV1StacksStackIdOK ", 200)
}

func (o *DeleteScheduleAPIV1StacksStackIDOK) String() string {
	return fmt.Sprintf("[DELETE /schedule/api/v1/stacks/{stackId}][%d] deleteScheduleApiV1StacksStackIdOK ", 200)
}

func (o *DeleteScheduleAPIV1StacksStackIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
