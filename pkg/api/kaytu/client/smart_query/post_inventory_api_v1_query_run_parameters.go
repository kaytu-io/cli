// Code generated by go-swagger; DO NOT EDIT.

package smart_query

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/kaytu-io/cli-program/pkg/api/kaytu/models"
)

// NewPostInventoryAPIV1QueryRunParams creates a new PostInventoryAPIV1QueryRunParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostInventoryAPIV1QueryRunParams() *PostInventoryAPIV1QueryRunParams {
	return &PostInventoryAPIV1QueryRunParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostInventoryAPIV1QueryRunParamsWithTimeout creates a new PostInventoryAPIV1QueryRunParams object
// with the ability to set a timeout on a request.
func NewPostInventoryAPIV1QueryRunParamsWithTimeout(timeout time.Duration) *PostInventoryAPIV1QueryRunParams {
	return &PostInventoryAPIV1QueryRunParams{
		timeout: timeout,
	}
}

// NewPostInventoryAPIV1QueryRunParamsWithContext creates a new PostInventoryAPIV1QueryRunParams object
// with the ability to set a context for a request.
func NewPostInventoryAPIV1QueryRunParamsWithContext(ctx context.Context) *PostInventoryAPIV1QueryRunParams {
	return &PostInventoryAPIV1QueryRunParams{
		Context: ctx,
	}
}

// NewPostInventoryAPIV1QueryRunParamsWithHTTPClient creates a new PostInventoryAPIV1QueryRunParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostInventoryAPIV1QueryRunParamsWithHTTPClient(client *http.Client) *PostInventoryAPIV1QueryRunParams {
	return &PostInventoryAPIV1QueryRunParams{
		HTTPClient: client,
	}
}

/*
PostInventoryAPIV1QueryRunParams contains all the parameters to send to the API endpoint

	for the post inventory API v1 query run operation.

	Typically these are written to a http.Request.
*/
type PostInventoryAPIV1QueryRunParams struct {

	/* Accept.

	   Accept header
	*/
	Accept string

	/* Request.

	   Request Body
	*/
	Request *models.GithubComKaytuIoKaytuEnginePkgInventoryAPIRunQueryRequest

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post inventory API v1 query run params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostInventoryAPIV1QueryRunParams) WithDefaults() *PostInventoryAPIV1QueryRunParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post inventory API v1 query run params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostInventoryAPIV1QueryRunParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the post inventory API v1 query run params
func (o *PostInventoryAPIV1QueryRunParams) WithTimeout(timeout time.Duration) *PostInventoryAPIV1QueryRunParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post inventory API v1 query run params
func (o *PostInventoryAPIV1QueryRunParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post inventory API v1 query run params
func (o *PostInventoryAPIV1QueryRunParams) WithContext(ctx context.Context) *PostInventoryAPIV1QueryRunParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post inventory API v1 query run params
func (o *PostInventoryAPIV1QueryRunParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post inventory API v1 query run params
func (o *PostInventoryAPIV1QueryRunParams) WithHTTPClient(client *http.Client) *PostInventoryAPIV1QueryRunParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post inventory API v1 query run params
func (o *PostInventoryAPIV1QueryRunParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccept adds the accept to the post inventory API v1 query run params
func (o *PostInventoryAPIV1QueryRunParams) WithAccept(accept string) *PostInventoryAPIV1QueryRunParams {
	o.SetAccept(accept)
	return o
}

// SetAccept adds the accept to the post inventory API v1 query run params
func (o *PostInventoryAPIV1QueryRunParams) SetAccept(accept string) {
	o.Accept = accept
}

// WithRequest adds the request to the post inventory API v1 query run params
func (o *PostInventoryAPIV1QueryRunParams) WithRequest(request *models.GithubComKaytuIoKaytuEnginePkgInventoryAPIRunQueryRequest) *PostInventoryAPIV1QueryRunParams {
	o.SetRequest(request)
	return o
}

// SetRequest adds the request to the post inventory API v1 query run params
func (o *PostInventoryAPIV1QueryRunParams) SetRequest(request *models.GithubComKaytuIoKaytuEnginePkgInventoryAPIRunQueryRequest) {
	o.Request = request
}

// WriteToRequest writes these params to a swagger request
func (o *PostInventoryAPIV1QueryRunParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param accept
	if err := r.SetHeaderParam("accept", o.Accept); err != nil {
		return err
	}
	if o.Request != nil {
		if err := r.SetBodyParam(o.Request); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
