// Code generated by go-swagger; DO NOT EDIT.

package resource

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetInventoryAPIV2ResourcesRegionsCompositionParams creates a new GetInventoryAPIV2ResourcesRegionsCompositionParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetInventoryAPIV2ResourcesRegionsCompositionParams() *GetInventoryAPIV2ResourcesRegionsCompositionParams {
	return &GetInventoryAPIV2ResourcesRegionsCompositionParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetInventoryAPIV2ResourcesRegionsCompositionParamsWithTimeout creates a new GetInventoryAPIV2ResourcesRegionsCompositionParams object
// with the ability to set a timeout on a request.
func NewGetInventoryAPIV2ResourcesRegionsCompositionParamsWithTimeout(timeout time.Duration) *GetInventoryAPIV2ResourcesRegionsCompositionParams {
	return &GetInventoryAPIV2ResourcesRegionsCompositionParams{
		timeout: timeout,
	}
}

// NewGetInventoryAPIV2ResourcesRegionsCompositionParamsWithContext creates a new GetInventoryAPIV2ResourcesRegionsCompositionParams object
// with the ability to set a context for a request.
func NewGetInventoryAPIV2ResourcesRegionsCompositionParamsWithContext(ctx context.Context) *GetInventoryAPIV2ResourcesRegionsCompositionParams {
	return &GetInventoryAPIV2ResourcesRegionsCompositionParams{
		Context: ctx,
	}
}

// NewGetInventoryAPIV2ResourcesRegionsCompositionParamsWithHTTPClient creates a new GetInventoryAPIV2ResourcesRegionsCompositionParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetInventoryAPIV2ResourcesRegionsCompositionParamsWithHTTPClient(client *http.Client) *GetInventoryAPIV2ResourcesRegionsCompositionParams {
	return &GetInventoryAPIV2ResourcesRegionsCompositionParams{
		HTTPClient: client,
	}
}

/*
GetInventoryAPIV2ResourcesRegionsCompositionParams contains all the parameters to send to the API endpoint

	for the get inventory API v2 resources regions composition operation.

	Typically these are written to a http.Request.
*/
type GetInventoryAPIV2ResourcesRegionsCompositionParams struct {

	/* ConnectionID.

	   Connection IDs to filter by
	*/
	ConnectionID []string

	/* Connector.

	   Connector type to filter by
	*/
	Connector []string

	/* EndTime.

	   end time in unix seconds - default is one week ago
	*/
	EndTime *int64

	/* StartTime.

	   start time in unix seconds - default is now
	*/
	StartTime *int64

	/* Top.

	   How many top values to return default is 5
	*/
	Top int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get inventory API v2 resources regions composition params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInventoryAPIV2ResourcesRegionsCompositionParams) WithDefaults() *GetInventoryAPIV2ResourcesRegionsCompositionParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get inventory API v2 resources regions composition params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInventoryAPIV2ResourcesRegionsCompositionParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get inventory API v2 resources regions composition params
func (o *GetInventoryAPIV2ResourcesRegionsCompositionParams) WithTimeout(timeout time.Duration) *GetInventoryAPIV2ResourcesRegionsCompositionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get inventory API v2 resources regions composition params
func (o *GetInventoryAPIV2ResourcesRegionsCompositionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get inventory API v2 resources regions composition params
func (o *GetInventoryAPIV2ResourcesRegionsCompositionParams) WithContext(ctx context.Context) *GetInventoryAPIV2ResourcesRegionsCompositionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get inventory API v2 resources regions composition params
func (o *GetInventoryAPIV2ResourcesRegionsCompositionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get inventory API v2 resources regions composition params
func (o *GetInventoryAPIV2ResourcesRegionsCompositionParams) WithHTTPClient(client *http.Client) *GetInventoryAPIV2ResourcesRegionsCompositionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get inventory API v2 resources regions composition params
func (o *GetInventoryAPIV2ResourcesRegionsCompositionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithConnectionID adds the connectionID to the get inventory API v2 resources regions composition params
func (o *GetInventoryAPIV2ResourcesRegionsCompositionParams) WithConnectionID(connectionID []string) *GetInventoryAPIV2ResourcesRegionsCompositionParams {
	o.SetConnectionID(connectionID)
	return o
}

// SetConnectionID adds the connectionId to the get inventory API v2 resources regions composition params
func (o *GetInventoryAPIV2ResourcesRegionsCompositionParams) SetConnectionID(connectionID []string) {
	o.ConnectionID = connectionID
}

// WithConnector adds the connector to the get inventory API v2 resources regions composition params
func (o *GetInventoryAPIV2ResourcesRegionsCompositionParams) WithConnector(connector []string) *GetInventoryAPIV2ResourcesRegionsCompositionParams {
	o.SetConnector(connector)
	return o
}

// SetConnector adds the connector to the get inventory API v2 resources regions composition params
func (o *GetInventoryAPIV2ResourcesRegionsCompositionParams) SetConnector(connector []string) {
	o.Connector = connector
}

// WithEndTime adds the endTime to the get inventory API v2 resources regions composition params
func (o *GetInventoryAPIV2ResourcesRegionsCompositionParams) WithEndTime(endTime *int64) *GetInventoryAPIV2ResourcesRegionsCompositionParams {
	o.SetEndTime(endTime)
	return o
}

// SetEndTime adds the endTime to the get inventory API v2 resources regions composition params
func (o *GetInventoryAPIV2ResourcesRegionsCompositionParams) SetEndTime(endTime *int64) {
	o.EndTime = endTime
}

// WithStartTime adds the startTime to the get inventory API v2 resources regions composition params
func (o *GetInventoryAPIV2ResourcesRegionsCompositionParams) WithStartTime(startTime *int64) *GetInventoryAPIV2ResourcesRegionsCompositionParams {
	o.SetStartTime(startTime)
	return o
}

// SetStartTime adds the startTime to the get inventory API v2 resources regions composition params
func (o *GetInventoryAPIV2ResourcesRegionsCompositionParams) SetStartTime(startTime *int64) {
	o.StartTime = startTime
}

// WithTop adds the top to the get inventory API v2 resources regions composition params
func (o *GetInventoryAPIV2ResourcesRegionsCompositionParams) WithTop(top int64) *GetInventoryAPIV2ResourcesRegionsCompositionParams {
	o.SetTop(top)
	return o
}

// SetTop adds the top to the get inventory API v2 resources regions composition params
func (o *GetInventoryAPIV2ResourcesRegionsCompositionParams) SetTop(top int64) {
	o.Top = top
}

// WriteToRequest writes these params to a swagger request
func (o *GetInventoryAPIV2ResourcesRegionsCompositionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ConnectionID != nil {

		// binding items for connectionId
		joinedConnectionID := o.bindParamConnectionID(reg)

		// query array param connectionId
		if err := r.SetQueryParam("connectionId", joinedConnectionID...); err != nil {
			return err
		}
	}

	if o.Connector != nil {

		// binding items for connector
		joinedConnector := o.bindParamConnector(reg)

		// query array param connector
		if err := r.SetQueryParam("connector", joinedConnector...); err != nil {
			return err
		}
	}

	if o.EndTime != nil {

		// query param endTime
		var qrEndTime int64

		if o.EndTime != nil {
			qrEndTime = *o.EndTime
		}
		qEndTime := swag.FormatInt64(qrEndTime)
		if qEndTime != "" {

			if err := r.SetQueryParam("endTime", qEndTime); err != nil {
				return err
			}
		}
	}

	if o.StartTime != nil {

		// query param startTime
		var qrStartTime int64

		if o.StartTime != nil {
			qrStartTime = *o.StartTime
		}
		qStartTime := swag.FormatInt64(qrStartTime)
		if qStartTime != "" {

			if err := r.SetQueryParam("startTime", qStartTime); err != nil {
				return err
			}
		}
	}

	// query param top
	qrTop := o.Top
	qTop := swag.FormatInt64(qrTop)
	if qTop != "" {

		if err := r.SetQueryParam("top", qTop); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetInventoryAPIV2ResourcesRegionsComposition binds the parameter connectionId
func (o *GetInventoryAPIV2ResourcesRegionsCompositionParams) bindParamConnectionID(formats strfmt.Registry) []string {
	connectionIDIR := o.ConnectionID

	var connectionIDIC []string
	for _, connectionIDIIR := range connectionIDIR { // explode []string

		connectionIDIIV := connectionIDIIR // string as string
		connectionIDIC = append(connectionIDIC, connectionIDIIV)
	}

	// items.CollectionFormat: "csv"
	connectionIDIS := swag.JoinByFormat(connectionIDIC, "csv")

	return connectionIDIS
}

// bindParamGetInventoryAPIV2ResourcesRegionsComposition binds the parameter connector
func (o *GetInventoryAPIV2ResourcesRegionsCompositionParams) bindParamConnector(formats strfmt.Registry) []string {
	connectorIR := o.Connector

	var connectorIC []string
	for _, connectorIIR := range connectorIR { // explode []string

		connectorIIV := connectorIIR // string as string
		connectorIC = append(connectorIC, connectorIIV)
	}

	// items.CollectionFormat: "csv"
	connectorIS := swag.JoinByFormat(connectorIC, "csv")

	return connectorIS
}
