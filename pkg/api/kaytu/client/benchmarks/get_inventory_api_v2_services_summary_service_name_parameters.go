// Code generated by go-swagger; DO NOT EDIT.

package benchmarks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetInventoryAPIV2ServicesSummaryServiceNameParams creates a new GetInventoryAPIV2ServicesSummaryServiceNameParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetInventoryAPIV2ServicesSummaryServiceNameParams() *GetInventoryAPIV2ServicesSummaryServiceNameParams {
	return &GetInventoryAPIV2ServicesSummaryServiceNameParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetInventoryAPIV2ServicesSummaryServiceNameParamsWithTimeout creates a new GetInventoryAPIV2ServicesSummaryServiceNameParams object
// with the ability to set a timeout on a request.
func NewGetInventoryAPIV2ServicesSummaryServiceNameParamsWithTimeout(timeout time.Duration) *GetInventoryAPIV2ServicesSummaryServiceNameParams {
	return &GetInventoryAPIV2ServicesSummaryServiceNameParams{
		timeout: timeout,
	}
}

// NewGetInventoryAPIV2ServicesSummaryServiceNameParamsWithContext creates a new GetInventoryAPIV2ServicesSummaryServiceNameParams object
// with the ability to set a context for a request.
func NewGetInventoryAPIV2ServicesSummaryServiceNameParamsWithContext(ctx context.Context) *GetInventoryAPIV2ServicesSummaryServiceNameParams {
	return &GetInventoryAPIV2ServicesSummaryServiceNameParams{
		Context: ctx,
	}
}

// NewGetInventoryAPIV2ServicesSummaryServiceNameParamsWithHTTPClient creates a new GetInventoryAPIV2ServicesSummaryServiceNameParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetInventoryAPIV2ServicesSummaryServiceNameParamsWithHTTPClient(client *http.Client) *GetInventoryAPIV2ServicesSummaryServiceNameParams {
	return &GetInventoryAPIV2ServicesSummaryServiceNameParams{
		HTTPClient: client,
	}
}

/*
GetInventoryAPIV2ServicesSummaryServiceNameParams contains all the parameters to send to the API endpoint

	for the get inventory API v2 services summary service name operation.

	Typically these are written to a http.Request.
*/
type GetInventoryAPIV2ServicesSummaryServiceNameParams struct {

	/* Connector.

	   filter: connector
	*/
	Connector *string

	/* ConnectorID.

	   filter: connectorId
	*/
	ConnectorID *string

	/* EndTime.

	   time for resource count in epoch seconds
	*/
	EndTime string

	/* ServiceName.

	   ServiceName
	*/
	ServiceName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get inventory API v2 services summary service name params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInventoryAPIV2ServicesSummaryServiceNameParams) WithDefaults() *GetInventoryAPIV2ServicesSummaryServiceNameParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get inventory API v2 services summary service name params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInventoryAPIV2ServicesSummaryServiceNameParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get inventory API v2 services summary service name params
func (o *GetInventoryAPIV2ServicesSummaryServiceNameParams) WithTimeout(timeout time.Duration) *GetInventoryAPIV2ServicesSummaryServiceNameParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get inventory API v2 services summary service name params
func (o *GetInventoryAPIV2ServicesSummaryServiceNameParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get inventory API v2 services summary service name params
func (o *GetInventoryAPIV2ServicesSummaryServiceNameParams) WithContext(ctx context.Context) *GetInventoryAPIV2ServicesSummaryServiceNameParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get inventory API v2 services summary service name params
func (o *GetInventoryAPIV2ServicesSummaryServiceNameParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get inventory API v2 services summary service name params
func (o *GetInventoryAPIV2ServicesSummaryServiceNameParams) WithHTTPClient(client *http.Client) *GetInventoryAPIV2ServicesSummaryServiceNameParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get inventory API v2 services summary service name params
func (o *GetInventoryAPIV2ServicesSummaryServiceNameParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithConnector adds the connector to the get inventory API v2 services summary service name params
func (o *GetInventoryAPIV2ServicesSummaryServiceNameParams) WithConnector(connector *string) *GetInventoryAPIV2ServicesSummaryServiceNameParams {
	o.SetConnector(connector)
	return o
}

// SetConnector adds the connector to the get inventory API v2 services summary service name params
func (o *GetInventoryAPIV2ServicesSummaryServiceNameParams) SetConnector(connector *string) {
	o.Connector = connector
}

// WithConnectorID adds the connectorID to the get inventory API v2 services summary service name params
func (o *GetInventoryAPIV2ServicesSummaryServiceNameParams) WithConnectorID(connectorID *string) *GetInventoryAPIV2ServicesSummaryServiceNameParams {
	o.SetConnectorID(connectorID)
	return o
}

// SetConnectorID adds the connectorId to the get inventory API v2 services summary service name params
func (o *GetInventoryAPIV2ServicesSummaryServiceNameParams) SetConnectorID(connectorID *string) {
	o.ConnectorID = connectorID
}

// WithEndTime adds the endTime to the get inventory API v2 services summary service name params
func (o *GetInventoryAPIV2ServicesSummaryServiceNameParams) WithEndTime(endTime string) *GetInventoryAPIV2ServicesSummaryServiceNameParams {
	o.SetEndTime(endTime)
	return o
}

// SetEndTime adds the endTime to the get inventory API v2 services summary service name params
func (o *GetInventoryAPIV2ServicesSummaryServiceNameParams) SetEndTime(endTime string) {
	o.EndTime = endTime
}

// WithServiceName adds the serviceName to the get inventory API v2 services summary service name params
func (o *GetInventoryAPIV2ServicesSummaryServiceNameParams) WithServiceName(serviceName string) *GetInventoryAPIV2ServicesSummaryServiceNameParams {
	o.SetServiceName(serviceName)
	return o
}

// SetServiceName adds the serviceName to the get inventory API v2 services summary service name params
func (o *GetInventoryAPIV2ServicesSummaryServiceNameParams) SetServiceName(serviceName string) {
	o.ServiceName = serviceName
}

// WriteToRequest writes these params to a swagger request
func (o *GetInventoryAPIV2ServicesSummaryServiceNameParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Connector != nil {

		// query param connector
		var qrConnector string

		if o.Connector != nil {
			qrConnector = *o.Connector
		}
		qConnector := qrConnector
		if qConnector != "" {

			if err := r.SetQueryParam("connector", qConnector); err != nil {
				return err
			}
		}
	}

	if o.ConnectorID != nil {

		// query param connectorId
		var qrConnectorID string

		if o.ConnectorID != nil {
			qrConnectorID = *o.ConnectorID
		}
		qConnectorID := qrConnectorID
		if qConnectorID != "" {

			if err := r.SetQueryParam("connectorId", qConnectorID); err != nil {
				return err
			}
		}
	}

	// query param endTime
	qrEndTime := o.EndTime
	qEndTime := qrEndTime
	if qEndTime != "" {

		if err := r.SetQueryParam("endTime", qEndTime); err != nil {
			return err
		}
	}

	// path param serviceName
	if err := r.SetPathParam("serviceName", o.ServiceName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
