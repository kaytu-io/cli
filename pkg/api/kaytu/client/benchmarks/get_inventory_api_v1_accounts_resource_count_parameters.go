// Code generated by go-swagger; DO NOT EDIT.

package benchmarks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetInventoryAPIV1AccountsResourceCountParams creates a new GetInventoryAPIV1AccountsResourceCountParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetInventoryAPIV1AccountsResourceCountParams() *GetInventoryAPIV1AccountsResourceCountParams {
	return &GetInventoryAPIV1AccountsResourceCountParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetInventoryAPIV1AccountsResourceCountParamsWithTimeout creates a new GetInventoryAPIV1AccountsResourceCountParams object
// with the ability to set a timeout on a request.
func NewGetInventoryAPIV1AccountsResourceCountParamsWithTimeout(timeout time.Duration) *GetInventoryAPIV1AccountsResourceCountParams {
	return &GetInventoryAPIV1AccountsResourceCountParams{
		timeout: timeout,
	}
}

// NewGetInventoryAPIV1AccountsResourceCountParamsWithContext creates a new GetInventoryAPIV1AccountsResourceCountParams object
// with the ability to set a context for a request.
func NewGetInventoryAPIV1AccountsResourceCountParamsWithContext(ctx context.Context) *GetInventoryAPIV1AccountsResourceCountParams {
	return &GetInventoryAPIV1AccountsResourceCountParams{
		Context: ctx,
	}
}

// NewGetInventoryAPIV1AccountsResourceCountParamsWithHTTPClient creates a new GetInventoryAPIV1AccountsResourceCountParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetInventoryAPIV1AccountsResourceCountParamsWithHTTPClient(client *http.Client) *GetInventoryAPIV1AccountsResourceCountParams {
	return &GetInventoryAPIV1AccountsResourceCountParams{
		HTTPClient: client,
	}
}

/*
GetInventoryAPIV1AccountsResourceCountParams contains all the parameters to send to the API endpoint

	for the get inventory API v1 accounts resource count operation.

	Typically these are written to a http.Request.
*/
type GetInventoryAPIV1AccountsResourceCountParams struct {

	/* Provider.

	   Provider
	*/
	Provider string

	/* SourceID.

	   SourceID
	*/
	SourceID []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get inventory API v1 accounts resource count params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInventoryAPIV1AccountsResourceCountParams) WithDefaults() *GetInventoryAPIV1AccountsResourceCountParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get inventory API v1 accounts resource count params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInventoryAPIV1AccountsResourceCountParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get inventory API v1 accounts resource count params
func (o *GetInventoryAPIV1AccountsResourceCountParams) WithTimeout(timeout time.Duration) *GetInventoryAPIV1AccountsResourceCountParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get inventory API v1 accounts resource count params
func (o *GetInventoryAPIV1AccountsResourceCountParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get inventory API v1 accounts resource count params
func (o *GetInventoryAPIV1AccountsResourceCountParams) WithContext(ctx context.Context) *GetInventoryAPIV1AccountsResourceCountParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get inventory API v1 accounts resource count params
func (o *GetInventoryAPIV1AccountsResourceCountParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get inventory API v1 accounts resource count params
func (o *GetInventoryAPIV1AccountsResourceCountParams) WithHTTPClient(client *http.Client) *GetInventoryAPIV1AccountsResourceCountParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get inventory API v1 accounts resource count params
func (o *GetInventoryAPIV1AccountsResourceCountParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithProvider adds the provider to the get inventory API v1 accounts resource count params
func (o *GetInventoryAPIV1AccountsResourceCountParams) WithProvider(provider string) *GetInventoryAPIV1AccountsResourceCountParams {
	o.SetProvider(provider)
	return o
}

// SetProvider adds the provider to the get inventory API v1 accounts resource count params
func (o *GetInventoryAPIV1AccountsResourceCountParams) SetProvider(provider string) {
	o.Provider = provider
}

// WithSourceID adds the sourceID to the get inventory API v1 accounts resource count params
func (o *GetInventoryAPIV1AccountsResourceCountParams) WithSourceID(sourceID []string) *GetInventoryAPIV1AccountsResourceCountParams {
	o.SetSourceID(sourceID)
	return o
}

// SetSourceID adds the sourceId to the get inventory API v1 accounts resource count params
func (o *GetInventoryAPIV1AccountsResourceCountParams) SetSourceID(sourceID []string) {
	o.SourceID = sourceID
}

// WriteToRequest writes these params to a swagger request
func (o *GetInventoryAPIV1AccountsResourceCountParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param provider
	qrProvider := o.Provider
	qProvider := qrProvider
	if qProvider != "" {

		if err := r.SetQueryParam("provider", qProvider); err != nil {
			return err
		}
	}

	if o.SourceID != nil {

		// binding items for sourceId
		joinedSourceID := o.bindParamSourceID(reg)

		// query array param sourceId
		if err := r.SetQueryParam("sourceId", joinedSourceID...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetInventoryAPIV1AccountsResourceCount binds the parameter sourceId
func (o *GetInventoryAPIV1AccountsResourceCountParams) bindParamSourceID(formats strfmt.Registry) []string {
	sourceIDIR := o.SourceID

	var sourceIDIC []string
	for _, sourceIDIIR := range sourceIDIR { // explode []string

		sourceIDIIV := sourceIDIIR // string as string
		sourceIDIC = append(sourceIDIC, sourceIDIIV)
	}

	// items.CollectionFormat: "csv"
	sourceIDIS := swag.JoinByFormat(sourceIDIC, "csv")

	return sourceIDIS
}
