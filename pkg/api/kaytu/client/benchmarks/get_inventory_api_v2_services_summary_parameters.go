// Code generated by go-swagger; DO NOT EDIT.

package benchmarks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetInventoryAPIV2ServicesSummaryParams creates a new GetInventoryAPIV2ServicesSummaryParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetInventoryAPIV2ServicesSummaryParams() *GetInventoryAPIV2ServicesSummaryParams {
	return &GetInventoryAPIV2ServicesSummaryParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetInventoryAPIV2ServicesSummaryParamsWithTimeout creates a new GetInventoryAPIV2ServicesSummaryParams object
// with the ability to set a timeout on a request.
func NewGetInventoryAPIV2ServicesSummaryParamsWithTimeout(timeout time.Duration) *GetInventoryAPIV2ServicesSummaryParams {
	return &GetInventoryAPIV2ServicesSummaryParams{
		timeout: timeout,
	}
}

// NewGetInventoryAPIV2ServicesSummaryParamsWithContext creates a new GetInventoryAPIV2ServicesSummaryParams object
// with the ability to set a context for a request.
func NewGetInventoryAPIV2ServicesSummaryParamsWithContext(ctx context.Context) *GetInventoryAPIV2ServicesSummaryParams {
	return &GetInventoryAPIV2ServicesSummaryParams{
		Context: ctx,
	}
}

// NewGetInventoryAPIV2ServicesSummaryParamsWithHTTPClient creates a new GetInventoryAPIV2ServicesSummaryParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetInventoryAPIV2ServicesSummaryParamsWithHTTPClient(client *http.Client) *GetInventoryAPIV2ServicesSummaryParams {
	return &GetInventoryAPIV2ServicesSummaryParams{
		HTTPClient: client,
	}
}

/*
GetInventoryAPIV2ServicesSummaryParams contains all the parameters to send to the API endpoint

	for the get inventory API v2 services summary operation.

	Typically these are written to a http.Request.
*/
type GetInventoryAPIV2ServicesSummaryParams struct {

	/* ConnectionID.

	   filter: Connection ID
	*/
	ConnectionID *string

	/* Connector.

	   filter: Connector
	*/
	Connector *string

	/* EndTime.

	   end time for cost calculation and time resource count in epoch seconds
	*/
	EndTime string

	/* MinSpent.

	   filter: minimum spent amount for the service in the specified time
	*/
	MinSpent *int64

	/* PageNumber.

	   page number - default is 1
	*/
	PageNumber *int64

	/* PageSize.

	   page size - default is 20
	*/
	PageSize *int64

	/* SortBy.

	   column to sort by - default is cost
	*/
	SortBy *string

	/* StartTime.

	   start time for cost calculation in epoch seconds
	*/
	StartTime string

	/* Tag.

	   filter: tag for the services
	*/
	Tag *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get inventory API v2 services summary params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInventoryAPIV2ServicesSummaryParams) WithDefaults() *GetInventoryAPIV2ServicesSummaryParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get inventory API v2 services summary params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInventoryAPIV2ServicesSummaryParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get inventory API v2 services summary params
func (o *GetInventoryAPIV2ServicesSummaryParams) WithTimeout(timeout time.Duration) *GetInventoryAPIV2ServicesSummaryParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get inventory API v2 services summary params
func (o *GetInventoryAPIV2ServicesSummaryParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get inventory API v2 services summary params
func (o *GetInventoryAPIV2ServicesSummaryParams) WithContext(ctx context.Context) *GetInventoryAPIV2ServicesSummaryParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get inventory API v2 services summary params
func (o *GetInventoryAPIV2ServicesSummaryParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get inventory API v2 services summary params
func (o *GetInventoryAPIV2ServicesSummaryParams) WithHTTPClient(client *http.Client) *GetInventoryAPIV2ServicesSummaryParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get inventory API v2 services summary params
func (o *GetInventoryAPIV2ServicesSummaryParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithConnectionID adds the connectionID to the get inventory API v2 services summary params
func (o *GetInventoryAPIV2ServicesSummaryParams) WithConnectionID(connectionID *string) *GetInventoryAPIV2ServicesSummaryParams {
	o.SetConnectionID(connectionID)
	return o
}

// SetConnectionID adds the connectionId to the get inventory API v2 services summary params
func (o *GetInventoryAPIV2ServicesSummaryParams) SetConnectionID(connectionID *string) {
	o.ConnectionID = connectionID
}

// WithConnector adds the connector to the get inventory API v2 services summary params
func (o *GetInventoryAPIV2ServicesSummaryParams) WithConnector(connector *string) *GetInventoryAPIV2ServicesSummaryParams {
	o.SetConnector(connector)
	return o
}

// SetConnector adds the connector to the get inventory API v2 services summary params
func (o *GetInventoryAPIV2ServicesSummaryParams) SetConnector(connector *string) {
	o.Connector = connector
}

// WithEndTime adds the endTime to the get inventory API v2 services summary params
func (o *GetInventoryAPIV2ServicesSummaryParams) WithEndTime(endTime string) *GetInventoryAPIV2ServicesSummaryParams {
	o.SetEndTime(endTime)
	return o
}

// SetEndTime adds the endTime to the get inventory API v2 services summary params
func (o *GetInventoryAPIV2ServicesSummaryParams) SetEndTime(endTime string) {
	o.EndTime = endTime
}

// WithMinSpent adds the minSpent to the get inventory API v2 services summary params
func (o *GetInventoryAPIV2ServicesSummaryParams) WithMinSpent(minSpent *int64) *GetInventoryAPIV2ServicesSummaryParams {
	o.SetMinSpent(minSpent)
	return o
}

// SetMinSpent adds the minSpent to the get inventory API v2 services summary params
func (o *GetInventoryAPIV2ServicesSummaryParams) SetMinSpent(minSpent *int64) {
	o.MinSpent = minSpent
}

// WithPageNumber adds the pageNumber to the get inventory API v2 services summary params
func (o *GetInventoryAPIV2ServicesSummaryParams) WithPageNumber(pageNumber *int64) *GetInventoryAPIV2ServicesSummaryParams {
	o.SetPageNumber(pageNumber)
	return o
}

// SetPageNumber adds the pageNumber to the get inventory API v2 services summary params
func (o *GetInventoryAPIV2ServicesSummaryParams) SetPageNumber(pageNumber *int64) {
	o.PageNumber = pageNumber
}

// WithPageSize adds the pageSize to the get inventory API v2 services summary params
func (o *GetInventoryAPIV2ServicesSummaryParams) WithPageSize(pageSize *int64) *GetInventoryAPIV2ServicesSummaryParams {
	o.SetPageSize(pageSize)
	return o
}

// SetPageSize adds the pageSize to the get inventory API v2 services summary params
func (o *GetInventoryAPIV2ServicesSummaryParams) SetPageSize(pageSize *int64) {
	o.PageSize = pageSize
}

// WithSortBy adds the sortBy to the get inventory API v2 services summary params
func (o *GetInventoryAPIV2ServicesSummaryParams) WithSortBy(sortBy *string) *GetInventoryAPIV2ServicesSummaryParams {
	o.SetSortBy(sortBy)
	return o
}

// SetSortBy adds the sortBy to the get inventory API v2 services summary params
func (o *GetInventoryAPIV2ServicesSummaryParams) SetSortBy(sortBy *string) {
	o.SortBy = sortBy
}

// WithStartTime adds the startTime to the get inventory API v2 services summary params
func (o *GetInventoryAPIV2ServicesSummaryParams) WithStartTime(startTime string) *GetInventoryAPIV2ServicesSummaryParams {
	o.SetStartTime(startTime)
	return o
}

// SetStartTime adds the startTime to the get inventory API v2 services summary params
func (o *GetInventoryAPIV2ServicesSummaryParams) SetStartTime(startTime string) {
	o.StartTime = startTime
}

// WithTag adds the tag to the get inventory API v2 services summary params
func (o *GetInventoryAPIV2ServicesSummaryParams) WithTag(tag *string) *GetInventoryAPIV2ServicesSummaryParams {
	o.SetTag(tag)
	return o
}

// SetTag adds the tag to the get inventory API v2 services summary params
func (o *GetInventoryAPIV2ServicesSummaryParams) SetTag(tag *string) {
	o.Tag = tag
}

// WriteToRequest writes these params to a swagger request
func (o *GetInventoryAPIV2ServicesSummaryParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ConnectionID != nil {

		// query param connectionId
		var qrConnectionID string

		if o.ConnectionID != nil {
			qrConnectionID = *o.ConnectionID
		}
		qConnectionID := qrConnectionID
		if qConnectionID != "" {

			if err := r.SetQueryParam("connectionId", qConnectionID); err != nil {
				return err
			}
		}
	}

	if o.Connector != nil {

		// query param connector
		var qrConnector string

		if o.Connector != nil {
			qrConnector = *o.Connector
		}
		qConnector := qrConnector
		if qConnector != "" {

			if err := r.SetQueryParam("connector", qConnector); err != nil {
				return err
			}
		}
	}

	// query param endTime
	qrEndTime := o.EndTime
	qEndTime := qrEndTime
	if qEndTime != "" {

		if err := r.SetQueryParam("endTime", qEndTime); err != nil {
			return err
		}
	}

	if o.MinSpent != nil {

		// query param minSpent
		var qrMinSpent int64

		if o.MinSpent != nil {
			qrMinSpent = *o.MinSpent
		}
		qMinSpent := swag.FormatInt64(qrMinSpent)
		if qMinSpent != "" {

			if err := r.SetQueryParam("minSpent", qMinSpent); err != nil {
				return err
			}
		}
	}

	if o.PageNumber != nil {

		// query param pageNumber
		var qrPageNumber int64

		if o.PageNumber != nil {
			qrPageNumber = *o.PageNumber
		}
		qPageNumber := swag.FormatInt64(qrPageNumber)
		if qPageNumber != "" {

			if err := r.SetQueryParam("pageNumber", qPageNumber); err != nil {
				return err
			}
		}
	}

	if o.PageSize != nil {

		// query param pageSize
		var qrPageSize int64

		if o.PageSize != nil {
			qrPageSize = *o.PageSize
		}
		qPageSize := swag.FormatInt64(qrPageSize)
		if qPageSize != "" {

			if err := r.SetQueryParam("pageSize", qPageSize); err != nil {
				return err
			}
		}
	}

	if o.SortBy != nil {

		// query param sortBy
		var qrSortBy string

		if o.SortBy != nil {
			qrSortBy = *o.SortBy
		}
		qSortBy := qrSortBy
		if qSortBy != "" {

			if err := r.SetQueryParam("sortBy", qSortBy); err != nil {
				return err
			}
		}
	}

	// query param startTime
	qrStartTime := o.StartTime
	qStartTime := qrStartTime
	if qStartTime != "" {

		if err := r.SetQueryParam("startTime", qStartTime); err != nil {
			return err
		}
	}

	if o.Tag != nil {

		// query param tag
		var qrTag string

		if o.Tag != nil {
			qrTag = *o.Tag
		}
		qTag := qrTag
		if qTag != "" {

			if err := r.SetQueryParam("tag", qTag); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
