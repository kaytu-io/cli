// Code generated by go-swagger; DO NOT EDIT.

package benchmarks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new benchmarks API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for benchmarks API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	GetInventoryAPIV1AccountsResourceCount(params *GetInventoryAPIV1AccountsResourceCountParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetInventoryAPIV1AccountsResourceCountOK, error)

	GetInventoryAPIV1ResourcesDistribution(params *GetInventoryAPIV1ResourcesDistributionParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetInventoryAPIV1ResourcesDistributionOK, error)

	GetInventoryAPIV1ResourcesTopGrowingAccounts(params *GetInventoryAPIV1ResourcesTopGrowingAccountsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetInventoryAPIV1ResourcesTopGrowingAccountsOK, error)

	GetInventoryAPIV1ServicesDistribution(params *GetInventoryAPIV1ServicesDistributionParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetInventoryAPIV1ServicesDistributionOK, error)

	GetInventoryAPIV2ServicesSummary(params *GetInventoryAPIV2ServicesSummaryParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetInventoryAPIV2ServicesSummaryOK, error)

	GetInventoryAPIV2ServicesSummaryServiceName(params *GetInventoryAPIV2ServicesSummaryServiceNameParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetInventoryAPIV2ServicesSummaryServiceNameOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
GetInventoryAPIV1AccountsResourceCount returns resource count of accounts
*/
func (a *Client) GetInventoryAPIV1AccountsResourceCount(params *GetInventoryAPIV1AccountsResourceCountParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetInventoryAPIV1AccountsResourceCountOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetInventoryAPIV1AccountsResourceCountParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetInventoryAPIV1AccountsResourceCount",
		Method:             "GET",
		PathPattern:        "/inventory/api/v1/accounts/resource/count",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetInventoryAPIV1AccountsResourceCountReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetInventoryAPIV1AccountsResourceCountOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetInventoryAPIV1AccountsResourceCount: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetInventoryAPIV1ResourcesDistribution returns distribution of resource for specific account
*/
func (a *Client) GetInventoryAPIV1ResourcesDistribution(params *GetInventoryAPIV1ResourcesDistributionParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetInventoryAPIV1ResourcesDistributionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetInventoryAPIV1ResourcesDistributionParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetInventoryAPIV1ResourcesDistribution",
		Method:             "GET",
		PathPattern:        "/inventory/api/v1/resources/distribution",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetInventoryAPIV1ResourcesDistributionReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetInventoryAPIV1ResourcesDistributionOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetInventoryAPIV1ResourcesDistribution: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetInventoryAPIV1ResourcesTopGrowingAccounts returns top n fastest growing accounts of specified provider in the specified time window by resource count
*/
func (a *Client) GetInventoryAPIV1ResourcesTopGrowingAccounts(params *GetInventoryAPIV1ResourcesTopGrowingAccountsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetInventoryAPIV1ResourcesTopGrowingAccountsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetInventoryAPIV1ResourcesTopGrowingAccountsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetInventoryAPIV1ResourcesTopGrowingAccounts",
		Method:             "GET",
		PathPattern:        "/inventory/api/v1/resources/top/growing/accounts",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetInventoryAPIV1ResourcesTopGrowingAccountsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetInventoryAPIV1ResourcesTopGrowingAccountsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetInventoryAPIV1ResourcesTopGrowingAccounts: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetInventoryAPIV1ServicesDistribution returns distribution of services for specific account
*/
func (a *Client) GetInventoryAPIV1ServicesDistribution(params *GetInventoryAPIV1ServicesDistributionParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetInventoryAPIV1ServicesDistributionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetInventoryAPIV1ServicesDistributionParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetInventoryAPIV1ServicesDistribution",
		Method:             "GET",
		PathPattern:        "/inventory/api/v1/services/distribution",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetInventoryAPIV1ServicesDistributionReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetInventoryAPIV1ServicesDistributionOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetInventoryAPIV1ServicesDistribution: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetInventoryAPIV2ServicesSummary gets cloud services summary

Gets a summary of the services including the number of them and the API filters and a list of services with more details. Including connector, the resource counts and the cost.
*/
func (a *Client) GetInventoryAPIV2ServicesSummary(params *GetInventoryAPIV2ServicesSummaryParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetInventoryAPIV2ServicesSummaryOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetInventoryAPIV2ServicesSummaryParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetInventoryAPIV2ServicesSummary",
		Method:             "GET",
		PathPattern:        "/inventory/api/v2/services/summary",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetInventoryAPIV2ServicesSummaryReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetInventoryAPIV2ServicesSummaryOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetInventoryAPIV2ServicesSummary: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetInventoryAPIV2ServicesSummaryServiceName gets cloud service summary

Get Cloud Service Summary for the specified service name. Including connector, the resource counts and the cost.
*/
func (a *Client) GetInventoryAPIV2ServicesSummaryServiceName(params *GetInventoryAPIV2ServicesSummaryServiceNameParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetInventoryAPIV2ServicesSummaryServiceNameOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetInventoryAPIV2ServicesSummaryServiceNameParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetInventoryAPIV2ServicesSummaryServiceName",
		Method:             "GET",
		PathPattern:        "/inventory/api/v2/services/summary/{serviceName}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetInventoryAPIV2ServicesSummaryServiceNameReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetInventoryAPIV2ServicesSummaryServiceNameOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetInventoryAPIV2ServicesSummaryServiceName: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
