// Code generated by go-swagger; DO NOT EDIT.

package inventory

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetInventoryAPIV2ServicesMetricServiceNameParams creates a new GetInventoryAPIV2ServicesMetricServiceNameParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetInventoryAPIV2ServicesMetricServiceNameParams() *GetInventoryAPIV2ServicesMetricServiceNameParams {
	return &GetInventoryAPIV2ServicesMetricServiceNameParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetInventoryAPIV2ServicesMetricServiceNameParamsWithTimeout creates a new GetInventoryAPIV2ServicesMetricServiceNameParams object
// with the ability to set a timeout on a request.
func NewGetInventoryAPIV2ServicesMetricServiceNameParamsWithTimeout(timeout time.Duration) *GetInventoryAPIV2ServicesMetricServiceNameParams {
	return &GetInventoryAPIV2ServicesMetricServiceNameParams{
		timeout: timeout,
	}
}

// NewGetInventoryAPIV2ServicesMetricServiceNameParamsWithContext creates a new GetInventoryAPIV2ServicesMetricServiceNameParams object
// with the ability to set a context for a request.
func NewGetInventoryAPIV2ServicesMetricServiceNameParamsWithContext(ctx context.Context) *GetInventoryAPIV2ServicesMetricServiceNameParams {
	return &GetInventoryAPIV2ServicesMetricServiceNameParams{
		Context: ctx,
	}
}

// NewGetInventoryAPIV2ServicesMetricServiceNameParamsWithHTTPClient creates a new GetInventoryAPIV2ServicesMetricServiceNameParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetInventoryAPIV2ServicesMetricServiceNameParamsWithHTTPClient(client *http.Client) *GetInventoryAPIV2ServicesMetricServiceNameParams {
	return &GetInventoryAPIV2ServicesMetricServiceNameParams{
		HTTPClient: client,
	}
}

/*
GetInventoryAPIV2ServicesMetricServiceNameParams contains all the parameters to send to the API endpoint

	for the get inventory API v2 services metric service name operation.

	Typically these are written to a http.Request.
*/
type GetInventoryAPIV2ServicesMetricServiceNameParams struct {

	/* ConnectionID.

	   Connection IDs to filter by
	*/
	ConnectionID []string

	/* EndTime.

	   timestamp for current values in epoch seconds
	*/
	EndTime *string

	/* ServiceName.

	   ServiceName
	*/
	ServiceName string

	/* StartTime.

	   timestamp for old values in epoch seconds
	*/
	StartTime *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get inventory API v2 services metric service name params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInventoryAPIV2ServicesMetricServiceNameParams) WithDefaults() *GetInventoryAPIV2ServicesMetricServiceNameParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get inventory API v2 services metric service name params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInventoryAPIV2ServicesMetricServiceNameParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get inventory API v2 services metric service name params
func (o *GetInventoryAPIV2ServicesMetricServiceNameParams) WithTimeout(timeout time.Duration) *GetInventoryAPIV2ServicesMetricServiceNameParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get inventory API v2 services metric service name params
func (o *GetInventoryAPIV2ServicesMetricServiceNameParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get inventory API v2 services metric service name params
func (o *GetInventoryAPIV2ServicesMetricServiceNameParams) WithContext(ctx context.Context) *GetInventoryAPIV2ServicesMetricServiceNameParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get inventory API v2 services metric service name params
func (o *GetInventoryAPIV2ServicesMetricServiceNameParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get inventory API v2 services metric service name params
func (o *GetInventoryAPIV2ServicesMetricServiceNameParams) WithHTTPClient(client *http.Client) *GetInventoryAPIV2ServicesMetricServiceNameParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get inventory API v2 services metric service name params
func (o *GetInventoryAPIV2ServicesMetricServiceNameParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithConnectionID adds the connectionID to the get inventory API v2 services metric service name params
func (o *GetInventoryAPIV2ServicesMetricServiceNameParams) WithConnectionID(connectionID []string) *GetInventoryAPIV2ServicesMetricServiceNameParams {
	o.SetConnectionID(connectionID)
	return o
}

// SetConnectionID adds the connectionId to the get inventory API v2 services metric service name params
func (o *GetInventoryAPIV2ServicesMetricServiceNameParams) SetConnectionID(connectionID []string) {
	o.ConnectionID = connectionID
}

// WithEndTime adds the endTime to the get inventory API v2 services metric service name params
func (o *GetInventoryAPIV2ServicesMetricServiceNameParams) WithEndTime(endTime *string) *GetInventoryAPIV2ServicesMetricServiceNameParams {
	o.SetEndTime(endTime)
	return o
}

// SetEndTime adds the endTime to the get inventory API v2 services metric service name params
func (o *GetInventoryAPIV2ServicesMetricServiceNameParams) SetEndTime(endTime *string) {
	o.EndTime = endTime
}

// WithServiceName adds the serviceName to the get inventory API v2 services metric service name params
func (o *GetInventoryAPIV2ServicesMetricServiceNameParams) WithServiceName(serviceName string) *GetInventoryAPIV2ServicesMetricServiceNameParams {
	o.SetServiceName(serviceName)
	return o
}

// SetServiceName adds the serviceName to the get inventory API v2 services metric service name params
func (o *GetInventoryAPIV2ServicesMetricServiceNameParams) SetServiceName(serviceName string) {
	o.ServiceName = serviceName
}

// WithStartTime adds the startTime to the get inventory API v2 services metric service name params
func (o *GetInventoryAPIV2ServicesMetricServiceNameParams) WithStartTime(startTime *string) *GetInventoryAPIV2ServicesMetricServiceNameParams {
	o.SetStartTime(startTime)
	return o
}

// SetStartTime adds the startTime to the get inventory API v2 services metric service name params
func (o *GetInventoryAPIV2ServicesMetricServiceNameParams) SetStartTime(startTime *string) {
	o.StartTime = startTime
}

// WriteToRequest writes these params to a swagger request
func (o *GetInventoryAPIV2ServicesMetricServiceNameParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ConnectionID != nil {

		// binding items for connectionId
		joinedConnectionID := o.bindParamConnectionID(reg)

		// query array param connectionId
		if err := r.SetQueryParam("connectionId", joinedConnectionID...); err != nil {
			return err
		}
	}

	if o.EndTime != nil {

		// query param endTime
		var qrEndTime string

		if o.EndTime != nil {
			qrEndTime = *o.EndTime
		}
		qEndTime := qrEndTime
		if qEndTime != "" {

			if err := r.SetQueryParam("endTime", qEndTime); err != nil {
				return err
			}
		}
	}

	// path param serviceName
	if err := r.SetPathParam("serviceName", o.ServiceName); err != nil {
		return err
	}

	if o.StartTime != nil {

		// query param startTime
		var qrStartTime string

		if o.StartTime != nil {
			qrStartTime = *o.StartTime
		}
		qStartTime := qrStartTime
		if qStartTime != "" {

			if err := r.SetQueryParam("startTime", qStartTime); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetInventoryAPIV2ServicesMetricServiceName binds the parameter connectionId
func (o *GetInventoryAPIV2ServicesMetricServiceNameParams) bindParamConnectionID(formats strfmt.Registry) []string {
	connectionIDIR := o.ConnectionID

	var connectionIDIC []string
	for _, connectionIDIIR := range connectionIDIR { // explode []string

		connectionIDIIV := connectionIDIIR // string as string
		connectionIDIC = append(connectionIDIC, connectionIDIIV)
	}

	// items.CollectionFormat: "csv"
	connectionIDIS := swag.JoinByFormat(connectionIDIC, "csv")

	return connectionIDIS
}
