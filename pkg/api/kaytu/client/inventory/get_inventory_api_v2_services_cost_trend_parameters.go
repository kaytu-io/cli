// Code generated by go-swagger; DO NOT EDIT.

package inventory

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetInventoryAPIV2ServicesCostTrendParams creates a new GetInventoryAPIV2ServicesCostTrendParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetInventoryAPIV2ServicesCostTrendParams() *GetInventoryAPIV2ServicesCostTrendParams {
	return &GetInventoryAPIV2ServicesCostTrendParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetInventoryAPIV2ServicesCostTrendParamsWithTimeout creates a new GetInventoryAPIV2ServicesCostTrendParams object
// with the ability to set a timeout on a request.
func NewGetInventoryAPIV2ServicesCostTrendParamsWithTimeout(timeout time.Duration) *GetInventoryAPIV2ServicesCostTrendParams {
	return &GetInventoryAPIV2ServicesCostTrendParams{
		timeout: timeout,
	}
}

// NewGetInventoryAPIV2ServicesCostTrendParamsWithContext creates a new GetInventoryAPIV2ServicesCostTrendParams object
// with the ability to set a context for a request.
func NewGetInventoryAPIV2ServicesCostTrendParamsWithContext(ctx context.Context) *GetInventoryAPIV2ServicesCostTrendParams {
	return &GetInventoryAPIV2ServicesCostTrendParams{
		Context: ctx,
	}
}

// NewGetInventoryAPIV2ServicesCostTrendParamsWithHTTPClient creates a new GetInventoryAPIV2ServicesCostTrendParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetInventoryAPIV2ServicesCostTrendParamsWithHTTPClient(client *http.Client) *GetInventoryAPIV2ServicesCostTrendParams {
	return &GetInventoryAPIV2ServicesCostTrendParams{
		HTTPClient: client,
	}
}

/*
GetInventoryAPIV2ServicesCostTrendParams contains all the parameters to send to the API endpoint

	for the get inventory API v2 services cost trend operation.

	Typically these are written to a http.Request.
*/
type GetInventoryAPIV2ServicesCostTrendParams struct {

	/* ConnectionID.

	   Connection IDs to filter by
	*/
	ConnectionID []string

	/* Connector.

	   Connector type to filter by
	*/
	Connector []string

	/* DatapointCount.

	   maximum number of datapoints to return, default is 30
	*/
	DatapointCount *string

	/* EndTime.

	   timestamp for end in epoch seconds
	*/
	EndTime *string

	/* Services.

	   Services to filter by
	*/
	Services []string

	/* StartTime.

	   timestamp for start in epoch seconds
	*/
	StartTime *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get inventory API v2 services cost trend params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInventoryAPIV2ServicesCostTrendParams) WithDefaults() *GetInventoryAPIV2ServicesCostTrendParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get inventory API v2 services cost trend params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInventoryAPIV2ServicesCostTrendParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get inventory API v2 services cost trend params
func (o *GetInventoryAPIV2ServicesCostTrendParams) WithTimeout(timeout time.Duration) *GetInventoryAPIV2ServicesCostTrendParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get inventory API v2 services cost trend params
func (o *GetInventoryAPIV2ServicesCostTrendParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get inventory API v2 services cost trend params
func (o *GetInventoryAPIV2ServicesCostTrendParams) WithContext(ctx context.Context) *GetInventoryAPIV2ServicesCostTrendParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get inventory API v2 services cost trend params
func (o *GetInventoryAPIV2ServicesCostTrendParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get inventory API v2 services cost trend params
func (o *GetInventoryAPIV2ServicesCostTrendParams) WithHTTPClient(client *http.Client) *GetInventoryAPIV2ServicesCostTrendParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get inventory API v2 services cost trend params
func (o *GetInventoryAPIV2ServicesCostTrendParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithConnectionID adds the connectionID to the get inventory API v2 services cost trend params
func (o *GetInventoryAPIV2ServicesCostTrendParams) WithConnectionID(connectionID []string) *GetInventoryAPIV2ServicesCostTrendParams {
	o.SetConnectionID(connectionID)
	return o
}

// SetConnectionID adds the connectionId to the get inventory API v2 services cost trend params
func (o *GetInventoryAPIV2ServicesCostTrendParams) SetConnectionID(connectionID []string) {
	o.ConnectionID = connectionID
}

// WithConnector adds the connector to the get inventory API v2 services cost trend params
func (o *GetInventoryAPIV2ServicesCostTrendParams) WithConnector(connector []string) *GetInventoryAPIV2ServicesCostTrendParams {
	o.SetConnector(connector)
	return o
}

// SetConnector adds the connector to the get inventory API v2 services cost trend params
func (o *GetInventoryAPIV2ServicesCostTrendParams) SetConnector(connector []string) {
	o.Connector = connector
}

// WithDatapointCount adds the datapointCount to the get inventory API v2 services cost trend params
func (o *GetInventoryAPIV2ServicesCostTrendParams) WithDatapointCount(datapointCount *string) *GetInventoryAPIV2ServicesCostTrendParams {
	o.SetDatapointCount(datapointCount)
	return o
}

// SetDatapointCount adds the datapointCount to the get inventory API v2 services cost trend params
func (o *GetInventoryAPIV2ServicesCostTrendParams) SetDatapointCount(datapointCount *string) {
	o.DatapointCount = datapointCount
}

// WithEndTime adds the endTime to the get inventory API v2 services cost trend params
func (o *GetInventoryAPIV2ServicesCostTrendParams) WithEndTime(endTime *string) *GetInventoryAPIV2ServicesCostTrendParams {
	o.SetEndTime(endTime)
	return o
}

// SetEndTime adds the endTime to the get inventory API v2 services cost trend params
func (o *GetInventoryAPIV2ServicesCostTrendParams) SetEndTime(endTime *string) {
	o.EndTime = endTime
}

// WithServices adds the services to the get inventory API v2 services cost trend params
func (o *GetInventoryAPIV2ServicesCostTrendParams) WithServices(services []string) *GetInventoryAPIV2ServicesCostTrendParams {
	o.SetServices(services)
	return o
}

// SetServices adds the services to the get inventory API v2 services cost trend params
func (o *GetInventoryAPIV2ServicesCostTrendParams) SetServices(services []string) {
	o.Services = services
}

// WithStartTime adds the startTime to the get inventory API v2 services cost trend params
func (o *GetInventoryAPIV2ServicesCostTrendParams) WithStartTime(startTime *string) *GetInventoryAPIV2ServicesCostTrendParams {
	o.SetStartTime(startTime)
	return o
}

// SetStartTime adds the startTime to the get inventory API v2 services cost trend params
func (o *GetInventoryAPIV2ServicesCostTrendParams) SetStartTime(startTime *string) {
	o.StartTime = startTime
}

// WriteToRequest writes these params to a swagger request
func (o *GetInventoryAPIV2ServicesCostTrendParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ConnectionID != nil {

		// binding items for connectionId
		joinedConnectionID := o.bindParamConnectionID(reg)

		// query array param connectionId
		if err := r.SetQueryParam("connectionId", joinedConnectionID...); err != nil {
			return err
		}
	}

	if o.Connector != nil {

		// binding items for connector
		joinedConnector := o.bindParamConnector(reg)

		// query array param connector
		if err := r.SetQueryParam("connector", joinedConnector...); err != nil {
			return err
		}
	}

	if o.DatapointCount != nil {

		// query param datapointCount
		var qrDatapointCount string

		if o.DatapointCount != nil {
			qrDatapointCount = *o.DatapointCount
		}
		qDatapointCount := qrDatapointCount
		if qDatapointCount != "" {

			if err := r.SetQueryParam("datapointCount", qDatapointCount); err != nil {
				return err
			}
		}
	}

	if o.EndTime != nil {

		// query param endTime
		var qrEndTime string

		if o.EndTime != nil {
			qrEndTime = *o.EndTime
		}
		qEndTime := qrEndTime
		if qEndTime != "" {

			if err := r.SetQueryParam("endTime", qEndTime); err != nil {
				return err
			}
		}
	}

	if o.Services != nil {

		// binding items for services
		joinedServices := o.bindParamServices(reg)

		// query array param services
		if err := r.SetQueryParam("services", joinedServices...); err != nil {
			return err
		}
	}

	if o.StartTime != nil {

		// query param startTime
		var qrStartTime string

		if o.StartTime != nil {
			qrStartTime = *o.StartTime
		}
		qStartTime := qrStartTime
		if qStartTime != "" {

			if err := r.SetQueryParam("startTime", qStartTime); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetInventoryAPIV2ServicesCostTrend binds the parameter connectionId
func (o *GetInventoryAPIV2ServicesCostTrendParams) bindParamConnectionID(formats strfmt.Registry) []string {
	connectionIDIR := o.ConnectionID

	var connectionIDIC []string
	for _, connectionIDIIR := range connectionIDIR { // explode []string

		connectionIDIIV := connectionIDIIR // string as string
		connectionIDIC = append(connectionIDIC, connectionIDIIV)
	}

	// items.CollectionFormat: "csv"
	connectionIDIS := swag.JoinByFormat(connectionIDIC, "csv")

	return connectionIDIS
}

// bindParamGetInventoryAPIV2ServicesCostTrend binds the parameter connector
func (o *GetInventoryAPIV2ServicesCostTrendParams) bindParamConnector(formats strfmt.Registry) []string {
	connectorIR := o.Connector

	var connectorIC []string
	for _, connectorIIR := range connectorIR { // explode []string

		connectorIIV := connectorIIR // string as string
		connectorIC = append(connectorIC, connectorIIV)
	}

	// items.CollectionFormat: "csv"
	connectorIS := swag.JoinByFormat(connectorIC, "csv")

	return connectorIS
}

// bindParamGetInventoryAPIV2ServicesCostTrend binds the parameter services
func (o *GetInventoryAPIV2ServicesCostTrendParams) bindParamServices(formats strfmt.Registry) []string {
	servicesIR := o.Services

	var servicesIC []string
	for _, servicesIIR := range servicesIR { // explode []string

		servicesIIV := servicesIIR // string as string
		servicesIC = append(servicesIC, servicesIIV)
	}

	// items.CollectionFormat: "csv"
	servicesIS := swag.JoinByFormat(servicesIC, "csv")

	return servicesIS
}
