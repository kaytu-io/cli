// Code generated by go-swagger; DO NOT EDIT.

package inventory

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetInventoryAPIV2ResourcesCompositionKeyParams creates a new GetInventoryAPIV2ResourcesCompositionKeyParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetInventoryAPIV2ResourcesCompositionKeyParams() *GetInventoryAPIV2ResourcesCompositionKeyParams {
	return &GetInventoryAPIV2ResourcesCompositionKeyParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetInventoryAPIV2ResourcesCompositionKeyParamsWithTimeout creates a new GetInventoryAPIV2ResourcesCompositionKeyParams object
// with the ability to set a timeout on a request.
func NewGetInventoryAPIV2ResourcesCompositionKeyParamsWithTimeout(timeout time.Duration) *GetInventoryAPIV2ResourcesCompositionKeyParams {
	return &GetInventoryAPIV2ResourcesCompositionKeyParams{
		timeout: timeout,
	}
}

// NewGetInventoryAPIV2ResourcesCompositionKeyParamsWithContext creates a new GetInventoryAPIV2ResourcesCompositionKeyParams object
// with the ability to set a context for a request.
func NewGetInventoryAPIV2ResourcesCompositionKeyParamsWithContext(ctx context.Context) *GetInventoryAPIV2ResourcesCompositionKeyParams {
	return &GetInventoryAPIV2ResourcesCompositionKeyParams{
		Context: ctx,
	}
}

// NewGetInventoryAPIV2ResourcesCompositionKeyParamsWithHTTPClient creates a new GetInventoryAPIV2ResourcesCompositionKeyParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetInventoryAPIV2ResourcesCompositionKeyParamsWithHTTPClient(client *http.Client) *GetInventoryAPIV2ResourcesCompositionKeyParams {
	return &GetInventoryAPIV2ResourcesCompositionKeyParams{
		HTTPClient: client,
	}
}

/*
GetInventoryAPIV2ResourcesCompositionKeyParams contains all the parameters to send to the API endpoint

	for the get inventory API v2 resources composition key operation.

	Typically these are written to a http.Request.
*/
type GetInventoryAPIV2ResourcesCompositionKeyParams struct {

	/* ConnectionID.

	   Connection IDs to filter by
	*/
	ConnectionID []string

	/* Connector.

	   Connector types to filter by
	*/
	Connector []string

	/* Key.

	   Tag key
	*/
	Key string

	/* Time.

	   timestamp for resource count in epoch seconds
	*/
	Time *string

	/* Top.

	   How many top values to return default is 5
	*/
	Top int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get inventory API v2 resources composition key params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInventoryAPIV2ResourcesCompositionKeyParams) WithDefaults() *GetInventoryAPIV2ResourcesCompositionKeyParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get inventory API v2 resources composition key params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInventoryAPIV2ResourcesCompositionKeyParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get inventory API v2 resources composition key params
func (o *GetInventoryAPIV2ResourcesCompositionKeyParams) WithTimeout(timeout time.Duration) *GetInventoryAPIV2ResourcesCompositionKeyParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get inventory API v2 resources composition key params
func (o *GetInventoryAPIV2ResourcesCompositionKeyParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get inventory API v2 resources composition key params
func (o *GetInventoryAPIV2ResourcesCompositionKeyParams) WithContext(ctx context.Context) *GetInventoryAPIV2ResourcesCompositionKeyParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get inventory API v2 resources composition key params
func (o *GetInventoryAPIV2ResourcesCompositionKeyParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get inventory API v2 resources composition key params
func (o *GetInventoryAPIV2ResourcesCompositionKeyParams) WithHTTPClient(client *http.Client) *GetInventoryAPIV2ResourcesCompositionKeyParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get inventory API v2 resources composition key params
func (o *GetInventoryAPIV2ResourcesCompositionKeyParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithConnectionID adds the connectionID to the get inventory API v2 resources composition key params
func (o *GetInventoryAPIV2ResourcesCompositionKeyParams) WithConnectionID(connectionID []string) *GetInventoryAPIV2ResourcesCompositionKeyParams {
	o.SetConnectionID(connectionID)
	return o
}

// SetConnectionID adds the connectionId to the get inventory API v2 resources composition key params
func (o *GetInventoryAPIV2ResourcesCompositionKeyParams) SetConnectionID(connectionID []string) {
	o.ConnectionID = connectionID
}

// WithConnector adds the connector to the get inventory API v2 resources composition key params
func (o *GetInventoryAPIV2ResourcesCompositionKeyParams) WithConnector(connector []string) *GetInventoryAPIV2ResourcesCompositionKeyParams {
	o.SetConnector(connector)
	return o
}

// SetConnector adds the connector to the get inventory API v2 resources composition key params
func (o *GetInventoryAPIV2ResourcesCompositionKeyParams) SetConnector(connector []string) {
	o.Connector = connector
}

// WithKey adds the key to the get inventory API v2 resources composition key params
func (o *GetInventoryAPIV2ResourcesCompositionKeyParams) WithKey(key string) *GetInventoryAPIV2ResourcesCompositionKeyParams {
	o.SetKey(key)
	return o
}

// SetKey adds the key to the get inventory API v2 resources composition key params
func (o *GetInventoryAPIV2ResourcesCompositionKeyParams) SetKey(key string) {
	o.Key = key
}

// WithTime adds the time to the get inventory API v2 resources composition key params
func (o *GetInventoryAPIV2ResourcesCompositionKeyParams) WithTime(time *string) *GetInventoryAPIV2ResourcesCompositionKeyParams {
	o.SetTime(time)
	return o
}

// SetTime adds the time to the get inventory API v2 resources composition key params
func (o *GetInventoryAPIV2ResourcesCompositionKeyParams) SetTime(time *string) {
	o.Time = time
}

// WithTop adds the top to the get inventory API v2 resources composition key params
func (o *GetInventoryAPIV2ResourcesCompositionKeyParams) WithTop(top int64) *GetInventoryAPIV2ResourcesCompositionKeyParams {
	o.SetTop(top)
	return o
}

// SetTop adds the top to the get inventory API v2 resources composition key params
func (o *GetInventoryAPIV2ResourcesCompositionKeyParams) SetTop(top int64) {
	o.Top = top
}

// WriteToRequest writes these params to a swagger request
func (o *GetInventoryAPIV2ResourcesCompositionKeyParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ConnectionID != nil {

		// binding items for connectionId
		joinedConnectionID := o.bindParamConnectionID(reg)

		// query array param connectionId
		if err := r.SetQueryParam("connectionId", joinedConnectionID...); err != nil {
			return err
		}
	}

	if o.Connector != nil {

		// binding items for connector
		joinedConnector := o.bindParamConnector(reg)

		// query array param connector
		if err := r.SetQueryParam("connector", joinedConnector...); err != nil {
			return err
		}
	}

	// path param key
	if err := r.SetPathParam("key", o.Key); err != nil {
		return err
	}

	if o.Time != nil {

		// query param time
		var qrTime string

		if o.Time != nil {
			qrTime = *o.Time
		}
		qTime := qrTime
		if qTime != "" {

			if err := r.SetQueryParam("time", qTime); err != nil {
				return err
			}
		}
	}

	// query param top
	qrTop := o.Top
	qTop := swag.FormatInt64(qrTop)
	if qTop != "" {

		if err := r.SetQueryParam("top", qTop); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetInventoryAPIV2ResourcesCompositionKey binds the parameter connectionId
func (o *GetInventoryAPIV2ResourcesCompositionKeyParams) bindParamConnectionID(formats strfmt.Registry) []string {
	connectionIDIR := o.ConnectionID

	var connectionIDIC []string
	for _, connectionIDIIR := range connectionIDIR { // explode []string

		connectionIDIIV := connectionIDIIR // string as string
		connectionIDIC = append(connectionIDIC, connectionIDIIV)
	}

	// items.CollectionFormat: ""
	connectionIDIS := swag.JoinByFormat(connectionIDIC, "")

	return connectionIDIS
}

// bindParamGetInventoryAPIV2ResourcesCompositionKey binds the parameter connector
func (o *GetInventoryAPIV2ResourcesCompositionKeyParams) bindParamConnector(formats strfmt.Registry) []string {
	connectorIR := o.Connector

	var connectorIC []string
	for _, connectorIIR := range connectorIR { // explode []string

		connectorIIV := connectorIIR // string as string
		connectorIC = append(connectorIC, connectorIIV)
	}

	// items.CollectionFormat: ""
	connectorIS := swag.JoinByFormat(connectorIC, "")

	return connectorIS
}
